(undo-tree-save-format-version . 1)
"9ada8d4549eff0ef3e79687d1d85d92f704d259a"
[nil nil nil nil (25281 2941 211231 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 358 . 359) (nil fontified nil 329 . 359) (nil fontified nil 328 . 329) (nil fontified nil 320 . 328) (nil fontified nil 318 . 320) (nil fontified nil 296 . 318) (nil fontified nil 295 . 296) (nil fontified nil 269 . 295) (nil fontified nil 268 . 269) (nil fontified nil 243 . 268) (nil fontified nil 242 . 243) (nil fontified nil 173 . 242) (nil fontified nil 172 . 173) (nil fontified nil 151 . 172) (nil fontified nil 150 . 151) (nil fontified nil 127 . 150) (nil fontified nil 126 . 127) (nil fontified nil 110 . 126) (nil fontified nil 109 . 110) (nil fontified nil 93 . 109) (nil fontified nil 92 . 93) (nil fontified nil 77 . 92) (nil fontified nil 76 . 77) (nil fontified nil 1 . 76) (1 . 359) (t 25281 2905 33441 564000)) nil (25281 2941 211225 0) 0 nil])
([nil nil ((#("linux内核设计与实现 - 基于x86 linux2.6" 0 29 (font-lock-fontified t fontified t face org-document-title)) . 329) (undo-tree-id0 . -5) (undo-tree-id1 . -29) (t 25281 2941 216092 479000)) nil (25281 2942 739834 0) 0 nil])
([nil nil ((329 . 340) (t 25281 2942 743384 82000)) nil (25281 2946 818081 0) 0 nil])
([nil nil ((340 . 342)) nil (25281 2946 818075 0) 0 nil])
([nil nil ((342 . 356) (t 25281 2946 821988 764000)) nil (25281 21096 615043 0) 0 nil])
([nil nil ((358 . 360) (#("  " 0 2 (fontified nil font-lock-fontified t)) . 357) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (356 . 360) (t 25281 21096 620375 887000)) nil (25281 21144 402656 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-fontified t)) . 358) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2)) nil (25281 21144 402650 0) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t fontified t rear-nonsticky t)) . 358) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (25281 21144 402641 0) 0 nil])
([nil nil ((360 . 362) (#("  " 0 2 (fontified nil font-lock-fontified t)) . 359) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (358 . 362) (t 25281 21144 406389 171000)) nil (25281 21147 409818 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-fontified t)) . 360) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2)) nil (25281 21147 409810 0) 0 nil])
([nil nil ((360 . 368)) nil (25281 21147 409797 0) 0 nil])
([nil nil ((368 . 369)) nil (25281 21147 409791 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t)) . 357) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (t 25281 21147 460685 149000)) nil (25281 21149 339501 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 389 . 390) (nil fontified nil 357 . 390) (357 . 390) (t 25281 21149 343975 973000)) nil (25281 21189 872310 0) 0 nil])
([nil nil ((356 . 359) (t 25281 21189 875897 393000)) nil (25281 21193 730707 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-fontified t)) . 357) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2)) nil (25281 21193 730702 0) 0 nil])
([nil nil ((402 . 405) (t 25281 21193 734721 398000)) nil (25281 21585 615428 0) 0 nil])
([nil nil ((405 . 406)) nil (25281 21585 615421 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 403) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (t 25281 21585 666584 513000)) nil (25281 21586 394407 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 403) (undo-tree-id23 . -1) (undo-tree-id24 . -1)) nil (25281 21586 394397 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 435 . 436) (nil fontified nil 403 . 436) (403 . 436) (t 25281 21586 398331 812000)) nil (25281 21695 765000 0) 0 nil])
([nil nil ((nil fontified t 436 . 437) (nil face org-link 436 . 437) (nil font-lock-multiline t 436 . 437) (436 . 437)) nil (25281 21695 764993 0) 0 nil])
([nil nil ((392 . 394) (t 25281 21695 768598 790000)) nil (25281 21699 658820 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t)) . 392) (undo-tree-id28 . -1) (undo-tree-id29 . 1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1)) nil (25281 21699 658815 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t)) . 392) (undo-tree-id33 . -1) (undo-tree-id34 . 1) (undo-tree-id35 . -1) (t 25281 21699 662730 6000)) nil (25281 21721 437684 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t)) . 357) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (t 25281 21721 441793 204000)) nil (25281 21732 400134 0) 0 nil])
([nil nil ((357 . 362) (t 25281 21732 404141 446000)) nil (25281 21735 157006 0) 0 nil])
([nil nil ((407 . 412) (t 25281 21735 161056 472000)) nil (25281 21737 127293 0) 0 nil])
([nil nil ((356 . 359) (t 25281 21737 131739 926000)) nil (25281 21741 759216 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-fontified t)) . 357) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2)) nil (25281 21741 759214 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t)) . 357) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1)) nil (25281 21741 759205 0) 0 nil])
([nil nil ((396 . 398) (t 25281 21741 763272 529000)) nil (25281 21743 991671 0) 0 nil])
([nil nil ((397 . 399) (t 25281 21743 995478 173000)) nil (25281 21776 977582 0) 0 nil])
([nil nil ((399 . 400) (#("nu" 0 2 (fontified t)) . -399) (undo-tree-id182 . -2) (399 . 401) (#("nu" 0 2 (fontified t)) . -399) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (399 . 401) (#("n" 0 1 (fontified t)) . -399) (undo-tree-id185 . -1) (399 . 400) (#("n" 0 1 (fontified t)) . -399) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (399 . 400)) nil (25281 21776 977579 0) 0 nil])
([nil nil ((#("nyu" 0 3 (fontified nil)) . -399) (399 . 402) (#("nyu" 0 3 (fontified t)) . -399) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (399 . 402) (#("ny" 0 2 (fontified t)) . -399) (undo-tree-id174 . -2) (399 . 401) (#("ny" 0 2 (fontified t)) . -399) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (399 . 401) (#("n" 0 1 (fontified t)) . -399) (undo-tree-id177 . -1) (399 . 400) (#("n" 0 1 (fontified t)) . -399) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (399 . 400) (#("习" 0 1 (fontified t font-lock-fontified t)) . -399) (undo-tree-id180 . -1) (undo-tree-id181 . -1) 400) nil (25281 21776 977568 0) 0 nil])
([nil nil ((409 . 410) (#("sg" 0 2 (fontified t)) . -409) (undo-tree-id144 . -2) (409 . 411) (#("sg" 0 2 (fontified t)) . -409) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (409 . 411) (#("s" 0 1 (fontified t)) . -409) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (409 . 410) (#("s" 0 1 (fontified nil)) . -409) (408 . 410) (#("s" 0 1 (fontified nil)) . -408) (408 . 409) (#("s" 0 1 (fontified nil)) . -408) (408 . 409) (#("s" 0 1 (fontified nil)) . -408) (408 . 409) (#("s" 0 1 (fontified nil)) . -408) (408 . 409) (#("s" 0 1 (fontified nil)) . -408) (408 . 409) (#("s" 0 1 (fontified nil)) . -408) (408 . 409) (#("s" 0 1 (fontified nil)) . -408) (408 . 409) (#("s" 0 1 (fontified t)) . -408) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (403 . 409) (#("t" 0 1 (fontified t)) . -403) (undo-tree-id151 . -1) (403 . 404) (#("t" 0 1 (fontified t)) . -403) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (402 . 404) (#("rcfh" 0 4 (fontified nil)) . -402) (402 . 406) (#("rcfh" 0 4 (fontified nil)) . -402) (402 . 406) (#("rcfh" 0 4 (fontified nil)) . -402) (402 . 406) (#("rcfh" 0 4 (fontified t)) . -402) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (402 . 406) (#("rc" 0 2 (fontified t)) . -402) (undo-tree-id156 . -2) (402 . 404) (#("rc" 0 2 (fontified t)) . -402) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (402 . 404) (#("r" 0 1 (fontified t)) . -402) (undo-tree-id159 . -1) (402 . 403) (#("r" 0 1 (fontified t)) . -402) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (401 . 403) (#("tfqp" 0 4 (fontified nil)) . -401) (401 . 405) (#("tfqp" 0 4 (fontified nil)) . -401) (401 . 405) (#("tfqp" 0 4 (fontified nil)) . -401) (401 . 405) (#("tfqp" 0 4 (fontified nil)) . -401) (401 . 405) (#("tfqp" 0 4 (fontified nil)) . -401) (401 . 405) (#("tfqp" 0 4 (fontified t)) . -401) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (401 . 405) (#("t" 0 1 (fontified t)) . -401) (undo-tree-id164 . -1) (401 . 402) (#("t" 0 1 (fontified t)) . -401) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (400 . 402) (#("jgj" 0 3 (fontified nil)) . -400) (400 . 403) (#("jgj" 0 3 (fontified nil)) . -400) (400 . 403) (#("jgj" 0 3 (fontified nil)) . -400) (400 . 403) (#("jgj" 0 3 (fontified t)) . -400) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (400 . 403) (#("j" 0 1 (fontified t)) . -400) (undo-tree-id169 . -1) (400 . 401) (#("j" 0 1 (fontified t)) . -400) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (399 . 401)) nil (25281 21776 977537 0) 0 nil])
([nil nil ((#("dddd" 0 4 (fontified t)) . -408) (undo-tree-id130 . -4) (408 . 412) (#("dddd" 0 4 (fontified t)) . -408) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (408 . 412) (#("ddd" 0 3 (fontified t)) . -408) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (408 . 411) (#("ddd" 0 3 (fontified t)) . -408) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (408 . 411) (#("dd" 0 2 (fontified t)) . -408) (undo-tree-id138 . -2) (408 . 410) (#("dd" 0 2 (fontified t)) . -408) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (408 . 410) (#("d" 0 1 (fontified t)) . -408) (undo-tree-id141 . -1) (408 . 409) (#("d" 0 1 (fontified t)) . -408) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (408 . 409) 409) nil (25281 21776 977481 0) 0 nil])
([nil nil ((408 . 409)) nil (25281 21776 977455 0) 0 nil])
([nil nil ((#("大" 0 1 (fontified t font-lock-fontified t)) . -408) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 409) nil (25281 21776 977453 0) 0 nil])
([nil nil ((#("sh" 0 2 (fontified t)) . -410) (undo-tree-id120 . -2) (410 . 412) (#("sh" 0 2 (fontified t)) . -410) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (410 . 412) (#("s" 0 1 (fontified t)) . -410) (undo-tree-id123 . -1) (410 . 411) (#("s" 0 1 (fontified t)) . -410) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (410 . 411) 408) nil (25281 21776 977435 0) 0 nil])
([nil nil ((410 . 411)) nil (25281 21776 977424 0) 0 nil])
([nil nil ((#("sh" 0 2 (fontified t)) . -410) (undo-tree-id101 . -2) (410 . 412) (#("sh" 0 2 (fontified t)) . -410) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (410 . 412) (#("s" 0 1 (fontified t)) . -410) (undo-tree-id104 . -1) (410 . 411) (#("s" 0 1 (fontified t)) . -410) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (410 . 411) (#("u" 0 1 (fontified t)) . -410) (undo-tree-id107 . -1) (410 . 411) (#("u" 0 1 (fontified t)) . -410) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (410 . 411) (#("ud" 0 2 (fontified t)) . -410) (undo-tree-id110 . -2) (410 . 412) (#("ud" 0 2 (fontified t)) . -410) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (410 . 412) (#("u" 0 1 (fontified t)) . -410) (undo-tree-id113 . -1) (410 . 411) (#("u" 0 1 (fontified t)) . -410) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (410 . 411) (#("相" 0 1 (fontified t font-lock-fontified t)) . -410) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 411) nil (25281 21776 977420 0) 0 nil])
([nil nil ((415 . 416) (#("r" 0 1 (fontified t)) . -415) (undo-tree-id74 . -1) (415 . 416) (#("r" 0 1 (fontified t)) . -415) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (413 . 416) (#("大d" 0 2 (fontified t)) . -413) (undo-tree-id77 . -2) (413 . 415) (#("大d" 0 2 (fontified t)) . -413) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (413 . 415) (#("dddd" 0 4 (fontified t)) . -413) (undo-tree-id80 . -4) (413 . 417) (#("dddd" 0 4 (fontified t)) . -413) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (413 . 417) (#("ddd" 0 3 (fontified t)) . -413) (undo-tree-id83 . -3) (413 . 416) (#("ddd" 0 3 (fontified t)) . -413) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (413 . 416) (#("dd" 0 2 (fontified t)) . -413) (undo-tree-id86 . -2) (413 . 415) (#("dd" 0 2 (fontified t)) . -413) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (413 . 415) (#("d" 0 1 (fontified t)) . -413) (undo-tree-id89 . -1) (413 . 414) (#("d" 0 1 (fontified t)) . -413) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (412 . 414) (#("i" 0 1 (fontified t)) . -412) (undo-tree-id92 . -1) (412 . 413) (#("i" 0 1 (fontified t)) . -412) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (411 . 413) (#("uda" 0 3 (fontified t)) . -411) (undo-tree-id95 . -3) (411 . 414) (#("uda" 0 3 (fontified t)) . -411) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (411 . 414) (#("ud" 0 2 (fontified t)) . -411) (undo-tree-id98 . -2) (411 . 413) (#("ud" 0 2 (fontified nil)) . -411) (411 . 413) (#("ud" 0 2 (fontified nil)) . -411) (411 . 413) (#("ud" 0 2 (fontified t)) . -411) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (410 . 413)) nil (25281 21776 977384 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -414) (undo-tree-id63 . -1) (414 . 415) (#("r" 0 1 (fontified t)) . -414) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (414 . 415) (#("在" 0 1 (fontified t font-lock-fontified t)) . -414) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("的" 0 1 (fontified t font-lock-fontified t)) . -415) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 416) nil (25281 21776 977334 0) 0 nil])
([nil nil ((415 . 417) (#("th" 0 2 (fontified t)) . -415) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (415 . 417) (#("t" 0 1 (fontified t)) . -415) (undo-tree-id60 . -1) (415 . 416) (#("t" 0 1 (fontified t)) . -415) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (414 . 416)) nil (25281 21776 977317 0) 0 nil])
([nil nil ((416 . 417) (#("sg" 0 2 (fontified t)) . -416) (undo-tree-id45 . -2) (416 . 418) (#("sg" 0 2 (fontified t)) . -416) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (416 . 418) (#("s" 0 1 (fontified t)) . -416) (undo-tree-id48 . -1) (416 . 417) (#("s" 0 1 (fontified t)) . -416) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (415 . 417) (#("thgc" 0 4 (fontified t)) . -415) (undo-tree-id51 . -4) (415 . 419) (#("thgc" 0 4 (fontified t)) . -415) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (415 . 419) (#("thg" 0 3 (fontified t)) . -415) (undo-tree-id54 . -3) (415 . 418) (#("thg" 0 3 (fontified t)) . -415) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (415 . 418) (#("th" 0 2 (fontified t)) . -415) (undo-tree-id57 . -2) 417) nil (25281 21776 977304 0) 0 nil])
([nil nil ((396 . 397)) nil (25281 21776 977270 0) 0 nil])
([nil nil ((#("xyna" 0 4 (fontified t face org-level-1)) . -344) (undo-tree-id215 . -4) (344 . 348) (#("xyna" 0 4 (fontified t face org-level-1)) . -344) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (344 . 348) (#("xyn" 0 3 (fontified t face org-level-1)) . -344) (undo-tree-id218 . -3) (344 . 347) (#("xyn" 0 3 (fontified t face org-level-1)) . -344) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (344 . 347) (#("xy" 0 2 (fontified t face org-level-1)) . -344) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (344 . 346) (#("xy" 0 2 (fontified nil)) . -344) (344 . 346) (#("x" 0 1 (fontified nil)) . -344) (344 . 345) (#("x" 0 1 (fontified t face org-level-1)) . -344) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (344 . 345) (#("linux kernel" 0 12 (fontified t font-lock-fontified t face org-level-1)) . 344) (undo-tree-id225 . -12) (undo-tree-id226 . -12) (t 25281 21776 987656 535000)) nil (25281 21783 879170 0) 0 nil])
([nil nil ((347 . 348) (#("synw" 0 4 (fontified t face org-level-1)) . -347) (undo-tree-id188 . -4) (347 . 351) (#("synw" 0 4 (fontified t face org-level-1)) . -347) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (347 . 351) (#("syn" 0 3 (fontified t face org-level-1)) . -347) (undo-tree-id191 . -3) (347 . 350) (#("syn" 0 3 (fontified t face org-level-1)) . -347) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (347 . 350) (#("sy" 0 2 (fontified t face org-level-1)) . -347) (undo-tree-id194 . -2) (347 . 349) (#("sy" 0 2 (fontified t face org-level-1)) . -347) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (347 . 349) (#("s" 0 1 (fontified t face org-level-1)) . -347) (undo-tree-id197 . -1) (347 . 348) (#("s" 0 1 (fontified t face org-level-1)) . -347) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (346 . 348) (#("mw" 0 2 (fontified t face org-level-1)) . -346) (undo-tree-id200 . -2) (346 . 348) (#("mw" 0 2 (fontified t face org-level-1)) . -346) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (346 . 348) (#("m" 0 1 (fontified t face org-level-1)) . -346) (undo-tree-id203 . -1) (346 . 347) (#("m" 0 1 (fontified t face org-level-1)) . -346) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (345 . 347) (#("ycfh" 0 4 (fontified t face org-level-1)) . -345) (undo-tree-id206 . -4) (345 . 349) (#("ycfh" 0 4 (fontified nil)) . -345) (345 . 349) (#("ycfh" 0 4 (fontified nil)) . -345) (345 . 349) (#("ycfh" 0 4 (fontified t face org-level-1)) . -345) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (345 . 349) (#("yc" 0 2 (fontified t face org-level-1)) . -345) (undo-tree-id209 . -2) (345 . 347) (#("yc" 0 2 (fontified t face org-level-1)) . -345) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (345 . 347) (#("y" 0 1 (fontified t face org-level-1)) . -345) (undo-tree-id212 . -1) (345 . 346) (#("y" 0 1 (fontified t face org-level-1)) . -345) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (344 . 346)) nil (25281 21783 879128 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t)) . 389) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (t 25281 21783 920448 165000)) nil (25281 21827 413562 0) 0 nil])
([nil nil ((411 . 412) (#("kq" 0 2 (fontified t)) . -411) (undo-tree-id603 . -2) (411 . 413) (#("kq" 0 2 (fontified t)) . -411) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (411 . 413) (#("k" 0 1 (fontified t)) . -411) (undo-tree-id606 . -1) (411 . 412) (#("k" 0 1 (fontified t)) . -411) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (410 . 412) (#("c" 0 1 (fontified nil)) . -410) (410 . 411) (#("c" 0 1 (fontified t)) . -410) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (409 . 411)) nil (25281 21827 413557 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -410) (undo-tree-id584 . -1) (410 . 411) (#("c" 0 1 (fontified t)) . -410) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (410 . 411) (#("k" 0 1 (fontified t)) . -410) (undo-tree-id587 . -1) (410 . 411) (#("k" 0 1 (fontified t)) . -410) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (410 . 411) (#("以" 0 1 (fontified t font-lock-fontified t)) . -410) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("史" 0 1 (fontified t font-lock-fontified t)) . -411) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) 412) nil (25281 21827 413543 0) 0 nil])
([nil nil ((413 . 414) (#("gmq" 0 3 (fontified t)) . -413) (undo-tree-id564 . -3) (413 . 416) (#("gmq" 0 3 (fontified t)) . -413) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (413 . 416) (#("gm" 0 2 (fontified t)) . -413) (undo-tree-id567 . -2) (413 . 415) (#("gm" 0 2 (fontified t)) . -413) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (413 . 415) (#("g" 0 1 (fontified t)) . -413) (undo-tree-id570 . -1) (413 . 414) (#("g" 0 1 (fontified t)) . -413) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (412 . 414) (#("bm" 0 2 (fontified nil)) . -412) (412 . 414) (#("bm" 0 2 (fontified nil)) . -412) (412 . 414) (#("bm" 0 2 (fontified nil)) . -412) (412 . 414) (#("bm" 0 2 (fontified t)) . -412) (undo-tree-id573 . -2) (undo-tree-id574 . -2) (411 . 414) (#("qkq" 0 3 (fontified t)) . -411) (undo-tree-id575 . -3) (411 . 414) (#("qkq" 0 3 (fontified t)) . -411) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (411 . 414) (#("qk" 0 2 (fontified t)) . -411) (undo-tree-id578 . -2) (411 . 413) (#("qk" 0 2 (fontified t)) . -411) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (411 . 413) (#("q" 0 1 (fontified t)) . -411) (undo-tree-id581 . -1) (411 . 412) (#("q" 0 1 (fontified t)) . -411) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (410 . 412)) nil (25281 21827 413502 0) 0 nil])
([nil nil ((414 . 415)) nil (25281 21827 413470 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t font-lock-fontified t)) . -414) (undo-tree-id562 . -1) (undo-tree-id563 . -1) 415) nil (25281 21827 413468 0) 0 nil])
([nil nil ((414 . 417)) nil (25281 21827 413465 0) 0 nil])
([nil nil ((#("sfi" 0 3 (fontified t)) . -414) (undo-tree-id535 . -3) (414 . 417) (#("sfi" 0 3 (fontified t)) . -414) (undo-tree-id536 . -3) (undo-tree-id537 . -3) (414 . 417) (#("sf" 0 2 (fontified t)) . -414) (undo-tree-id538 . -2) (414 . 416) (#("sf" 0 2 (fontified t)) . -414) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (414 . 416) (#("s" 0 1 (fontified t)) . -414) (undo-tree-id541 . -1) (414 . 415) (#("s" 0 1 (fontified t)) . -414) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (414 . 415) (#("g" 0 1 (fontified t font-lock-fontified t)) . -414) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (#("c" 0 1 (fontified t font-lock-fontified t)) . -415) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (#("c" 0 1 (fontified t font-lock-fontified t)) . -416) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) 417) nil (25281 21827 413461 0) 0 nil])
([nil nil ((417 . 418) (#("i" 0 1 (fontified nil)) . -417) (417 . 418) (#("i" 0 1 (fontified t)) . -417) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (416 . 418) (#("ylk" 0 3 (fontified t)) . -416) (undo-tree-id514 . -3) (416 . 419) (#("ylk" 0 3 (fontified t)) . -416) (undo-tree-id515 . -3) (undo-tree-id516 . -3) (416 . 419) (#("yl" 0 2 (fontified t)) . -416) (undo-tree-id517 . -2) (416 . 418) (#("yl" 0 2 (fontified t)) . -416) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (416 . 418) (#("y" 0 1 (fontified t)) . -416) (undo-tree-id520 . -1) (416 . 417) (#("y" 0 1 (fontified t)) . -416) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (415 . 417) (#("uwyg" 0 4 (fontified t)) . -415) (undo-tree-id523 . -4) (415 . 419) (#("uwyg" 0 4 (fontified t)) . -415) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (415 . 419) (#("uwy" 0 3 (fontified t)) . -415) (undo-tree-id526 . -3) (415 . 418) (#("uwy" 0 3 (fontified t)) . -415) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (415 . 418) (#("uw" 0 2 (fontified t)) . -415) (undo-tree-id529 . -2) (415 . 417) (#("uw" 0 2 (fontified t)) . -415) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (415 . 417) (#("u" 0 1 (fontified t)) . -415) (undo-tree-id532 . -1) (415 . 416) (#("u" 0 1 (fontified t)) . -415) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (414 . 416)) nil (25281 21827 413421 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -417) (undo-tree-id505 . -1) (417 . 418) (#("t" 0 1 (fontified t)) . -417) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (417 . 418) (#("不" 0 1 (fontified t font-lock-fontified t)) . -417) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) 418) nil (25281 21827 413383 0) 0 nil])
([nil nil ((417 . 418)) nil (25281 21827 413373 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -417) (undo-tree-id498 . -1) (417 . 418) (#("i" 0 1 (fontified t)) . -417) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (417 . 418) (#("和" 0 1 (fontified t font-lock-fontified t)) . -417) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) 418) nil (25281 21827 413371 0) 0 nil])
([nil nil ((417 . 418)) nil (25281 21827 413360 0) 0 nil])
([nil nil ((#("不" 0 1 (fontified t font-lock-fontified t)) . -417) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) 418) nil (25281 21827 413359 0) 0 nil])
([nil nil ((#("xyna" 0 4 (fontified t)) . -414) (undo-tree-id406 . -4) (414 . 418) (#("xyna" 0 4 (fontified t)) . -414) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (414 . 418) (#("xyn" 0 3 (fontified t)) . -414) (undo-tree-id409 . -3) (414 . 417) (#("xyn" 0 3 (fontified t)) . -414) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (414 . 417) (#("xy" 0 2 (fontified t)) . -414) (undo-tree-id412 . -2) (414 . 416) (#("xy" 0 2 (fontified t)) . -414) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (414 . 416) (#("x" 0 1 (fontified t)) . -414) (undo-tree-id415 . -1) (414 . 415) (#("x" 0 1 (fontified t)) . -414) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (414 . 415) (#("标" 0 1 (fontified t font-lock-fontified t)) . -414) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("准" 0 1 (fontified t font-lock-fontified t)) . -415) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("库" 0 1 (fontified t font-lock-fontified t)) . -416) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) 417) nil (25281 21827 413347 0) 0 nil])
([nil nil ((422 . 423) (#("w" 0 1 (fontified nil)) . -422) (422 . 423) (#("w" 0 1 (fontified t)) . -422) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (421 . 423) (#("ycfh" 0 4 (fontified nil)) . -421) (421 . 425) (#("ycfh" 0 4 (fontified nil)) . -421) (421 . 425) (#("ycfh" 0 4 (fontified nil)) . -421) (421 . 425) (#("ycfh" 0 4 (fontified t)) . -421) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (421 . 425) (#("yc" 0 2 (fontified t)) . -421) (undo-tree-id350 . -2) (421 . 423) (#("yc" 0 2 (fontified t)) . -421) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (421 . 423) (#("y" 0 1 (fontified t)) . -421) (undo-tree-id353 . -1) (421 . 422) (#("y" 0 1 (fontified t)) . -421) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (420 . 422) (#("xyna" 0 4 (fontified t)) . -420) (undo-tree-id356 . -4) (420 . 424) (#("xyna" 0 4 (fontified t)) . -420) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (420 . 424) (#("xyn" 0 3 (fontified t)) . -420) (undo-tree-id359 . -3) (420 . 423) (#("xyn" 0 3 (fontified t)) . -420) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (420 . 423) (#("xy" 0 2 (fontified t)) . -420) (undo-tree-id362 . -2) (420 . 422) (#("xy" 0 2 (fontified t)) . -420) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (420 . 422) (#("x" 0 1 (fontified t)) . -420) (undo-tree-id365 . -1) (420 . 421) (#("x" 0 1 (fontified t)) . -420) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (420 . 421) (#("y" 0 1 (fontified t)) . -420) (undo-tree-id368 . -1) (420 . 421) (#("y" 0 1 (fontified t)) . -420) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (419 . 421) (#("puhc" 0 4 (fontified nil)) . -419) (419 . 423) (#("puhc" 0 4 (fontified nil)) . -419) (419 . 423) (#("puhc" 0 4 (fontified nil)) . -419) (419 . 423) (#("puhc" 0 4 (fontified nil)) . -419) (419 . 423) (#("puhc" 0 4 (fontified nil)) . -419) (419 . 423) (#("puhc" 0 4 (fontified nil)) . -419) (419 . 423) (#("puhc" 0 4 (fontified nil)) . -419) (419 . 423) (#("puhc" 0 4 (fontified t)) . -419) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (418 . 423) (#("t" 0 1 (fontified t)) . -418) (undo-tree-id373 . -1) (418 . 419) (#("t" 0 1 (fontified t)) . -418) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (417 . 419) (#("fujq" 0 4 (fontified t)) . -417) (undo-tree-id376 . -4) (417 . 421) (#("fujq" 0 4 (fontified t)) . -417) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (417 . 421) (#("fuj" 0 3 (fontified t)) . -417) (undo-tree-id379 . -3) (417 . 420) (#("fuj" 0 3 (fontified t)) . -417) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (417 . 420) (#("fu" 0 2 (fontified t)) . -417) (undo-tree-id382 . -2) (417 . 419) (#("fu" 0 2 (fontified t)) . -417) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (417 . 419) (#("f" 0 1 (fontified t)) . -417) (undo-tree-id385 . -1) (417 . 418) (#("f" 0 1 (fontified t)) . -417) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (416 . 418) (#("ggi" 0 3 (fontified t)) . -416) (undo-tree-id388 . -3) (416 . 419) (#("ggi" 0 3 (fontified t)) . -416) (undo-tree-id389 . -3) (undo-tree-id390 . -3) (416 . 419) (#("gg" 0 2 (fontified t)) . -416) (undo-tree-id391 . -2) (416 . 418) (#("gg" 0 2 (fontified t)) . -416) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (416 . 418) (#("g" 0 1 (fontified t)) . -416) (undo-tree-id394 . -1) (416 . 417) (#("g" 0 1 (fontified t)) . -416) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (415 . 417) (#("ycfh" 0 4 (fontified t)) . -415) (undo-tree-id397 . -4) (415 . 419) (#("ycfh" 0 4 (fontified nil)) . -415) (415 . 419) (#("ycfh" 0 4 (fontified nil)) . -415) (415 . 419) (#("ycfh" 0 4 (fontified t)) . -415) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (415 . 419) (#("yc" 0 2 (fontified t)) . -415) (undo-tree-id400 . -2) (415 . 417) (#("yc" 0 2 (fontified t)) . -415) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (415 . 417) (#("y" 0 1 (fontified t)) . -415) (undo-tree-id403 . -1) (415 . 416) (#("y" 0 1 (fontified t)) . -415) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (414 . 416)) nil (25281 21827 413216 0) 0 nil])
([nil nil ((#("mw" 0 2 (fontified t)) . -422) (undo-tree-id338 . -2) (422 . 424) (#("mw" 0 2 (fontified t)) . -422) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (422 . 424) (#("m" 0 1 (fontified t)) . -422) (undo-tree-id341 . -1) (422 . 423) (#("m" 0 1 (fontified t)) . -422) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (422 . 423) (#("人" 0 1 (fontified t font-lock-fontified t)) . -422) (undo-tree-id344 . -1) (undo-tree-id345 . -1) 423) nil (25281 21827 413120 0) 0 nil])
([nil nil ((423 . 424) (#("synw" 0 4 (fontified t)) . -423) (undo-tree-id326 . -4) (423 . 427) (#("synw" 0 4 (fontified t)) . -423) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (423 . 427) (#("syn" 0 3 (fontified t)) . -423) (undo-tree-id329 . -3) (423 . 426) (#("syn" 0 3 (fontified t)) . -423) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (423 . 426) (#("sy" 0 2 (fontified t)) . -423) (undo-tree-id332 . -2) (423 . 425) (#("sy" 0 2 (fontified t)) . -423) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (423 . 425) (#("s" 0 1 (fontified t)) . -423) (undo-tree-id335 . -1) (423 . 424) (#("s" 0 1 (fontified t)) . -423) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (422 . 424)) nil (25281 21827 413105 0) 0 nil])
([nil nil ((428 . 429) (#("gcft" 0 4 (fontified t)) . -428) (undo-tree-id288 . -4) (428 . 432) (#("gcft" 0 4 (fontified t)) . -428) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (428 . 432) (#("gcf" 0 3 (fontified t)) . -428) (undo-tree-id291 . -3) (428 . 431) (#("gcf" 0 3 (fontified t)) . -428) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (428 . 431) (#("gc" 0 2 (fontified t)) . -428) (undo-tree-id294 . -2) (428 . 430) (#("gc" 0 2 (fontified t)) . -428) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (428 . 430) (#("g" 0 1 (fontified t)) . -428) (undo-tree-id297 . -1) (428 . 429) (#("g" 0 1 (fontified t)) . -428) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (427 . 429) (#("g" 0 1 (fontified t)) . -427) (undo-tree-id300 . -1) (427 . 428) (#("g" 0 1 (fontified t)) . -427) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (426 . 428) (#("i" 0 1 (fontified nil)) . -426) (426 . 427) (#("i" 0 1 (fontified t)) . -426) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (425 . 427) (#("fujq" 0 4 (fontified t)) . -425) (undo-tree-id305 . -4) (425 . 429) (#("fujq" 0 4 (fontified t)) . -425) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (425 . 429) (#("fuj" 0 3 (fontified t)) . -425) (undo-tree-id308 . -3) (425 . 428) (#("fuj" 0 3 (fontified t)) . -425) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (425 . 428) (#("fu" 0 2 (fontified t)) . -425) (undo-tree-id311 . -2) (425 . 427) (#("fu" 0 2 (fontified t)) . -425) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (425 . 427) (#("f" 0 1 (fontified t)) . -425) (undo-tree-id314 . -1) (425 . 426) (#("f" 0 1 (fontified t)) . -425) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (424 . 426) (#("ggi" 0 3 (fontified t)) . -424) (undo-tree-id317 . -3) (424 . 427) (#("ggi" 0 3 (fontified t)) . -424) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (424 . 427) (#("gg" 0 2 (fontified t)) . -424) (undo-tree-id320 . -2) (424 . 426) (#("gg" 0 2 (fontified t)) . -424) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (424 . 426) (#("g" 0 1 (fontified t)) . -424) (undo-tree-id323 . -1) (424 . 425) (#("g" 0 1 (fontified t)) . -424) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (424 . 425)) nil (25281 21827 413080 0) 0 nil])
([nil nil ((#("uvo" 0 3 (fontified t)) . -427) (undo-tree-id261 . -3) (427 . 430) (#("uvo" 0 3 (fontified t)) . -427) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (427 . 430) (#("uv" 0 2 (fontified t)) . -427) (undo-tree-id264 . -2) (427 . 429) (#("uv" 0 2 (fontified t)) . -427) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (427 . 429) (#("u" 0 1 (fontified t)) . -427) (undo-tree-id267 . -1) (427 . 428) (#("u" 0 1 (fontified t)) . -427) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (427 . 428) (#("i" 0 1 (fontified t)) . -427) (undo-tree-id270 . -1) (427 . 428) (#("i" 0 1 (fontified t)) . -427) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (427 . 428) (#("一" 0 1 (fontified t font-lock-fontified t)) . -427) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("致" 0 1 (fontified t font-lock-fontified t)) . -428) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) 429) nil (25281 21827 413002 0) 0 nil])
([nil nil ((431 . 432) (#("jghm" 0 4 (fontified nil)) . -431) (431 . 435) (#("jghm" 0 4 (fontified t)) . -431) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (431 . 435) (#("jgh" 0 3 (fontified t)) . -431) (undo-tree-id229 . -3) (431 . 434) (#("jgh" 0 3 (fontified t)) . -431) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (431 . 434) (#("jg" 0 2 (fontified t)) . -431) (undo-tree-id232 . -2) (431 . 433) (#("jg" 0 2 (fontified t)) . -431) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (431 . 433) (#("j" 0 1 (fontified t)) . -431) (undo-tree-id235 . -1) (431 . 432) (#("j" 0 1 (fontified t)) . -431) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (430 . 432) (#("ukd" 0 3 (fontified t)) . -430) (undo-tree-id238 . -3) (430 . 433) (#("ukd" 0 3 (fontified t)) . -430) (undo-tree-id239 . -3) (undo-tree-id240 . -3) (430 . 433) (#("uk" 0 2 (fontified t)) . -430) (undo-tree-id241 . -2) (430 . 432) (#("uk" 0 2 (fontified t)) . -430) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (430 . 432) (#("u" 0 1 (fontified t)) . -430) (undo-tree-id244 . -1) (430 . 431) (#("u" 0 1 (fontified t)) . -430) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (429 . 431) (#("r" 0 1 (fontified t)) . -429) (undo-tree-id247 . -1) (429 . 430) (#("r" 0 1 (fontified t)) . -429) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (428 . 430) (#("pwwk" 0 4 (fontified nil)) . -428) (428 . 432) (#("pwwk" 0 4 (fontified t)) . -428) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (428 . 432) (#("pww" 0 3 (fontified t)) . -428) (undo-tree-id252 . -3) (428 . 431) (#("pww" 0 3 (fontified t)) . -428) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (428 . 431) (#("pw" 0 2 (fontified t)) . -428) (undo-tree-id255 . -2) (428 . 430) (#("pw" 0 2 (fontified t)) . -428) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (428 . 430) (#("p" 0 1 (fontified t)) . -428) (undo-tree-id258 . -1) (428 . 429) (#("p" 0 1 (fontified t)) . -428) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (427 . 429)) nil (25281 21827 412955 0) 0 nil])
([nil nil ((389 . 435) (#("- 
- 尽量选择和host版本相差不大的版本，以免出现编译环境和被编译内核环境不兼容的问题" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil font-lock-fontified t) 4 14 (fontified nil font-lock-fontified t) 14 46 (fontified nil font-lock-fontified t)) . 389) (undo-tree-id613 . -46) (undo-tree-id614 . -24) (undo-tree-id615 . -24) (undo-tree-id616 . -24) (undo-tree-id617 . -24) (undo-tree-id618 . -24) (undo-tree-id619 . -24) (undo-tree-id620 . -24) (undo-tree-id621 . -24) (undo-tree-id622 . -24) (undo-tree-id623 . -24) (undo-tree-id624 . -24) (undo-tree-id625 . -25) (undo-tree-id626 . -25) (undo-tree-id627 . -25) (undo-tree-id628 . -26) (undo-tree-id629 . -27) (undo-tree-id630 . -27) (undo-tree-id631 . -27) (undo-tree-id632 . -28) (undo-tree-id633 . -28) (undo-tree-id634 . -28) (undo-tree-id635 . -28) (undo-tree-id636 . -28) (undo-tree-id637 . -28) (undo-tree-id638 . -28) (undo-tree-id639 . -28) (undo-tree-id640 . -28) (undo-tree-id641 . -28) (undo-tree-id642 . -28) (undo-tree-id643 . -28) (undo-tree-id644 . -28) (undo-tree-id645 . -28) (undo-tree-id646 . -28) (undo-tree-id647 . -28) (undo-tree-id648 . -28) (undo-tree-id649 . -28) (undo-tree-id650 . -28) (undo-tree-id651 . -28) (undo-tree-id652 . -28) (undo-tree-id653 . -28) (undo-tree-id654 . -28) (undo-tree-id655 . -28) (undo-tree-id656 . -28) (undo-tree-id657 . -28) (undo-tree-id658 . -28) (undo-tree-id659 . -28) (undo-tree-id660 . -28) (undo-tree-id661 . -28) (undo-tree-id662 . -28) (undo-tree-id663 . -28) (undo-tree-id664 . -28) (undo-tree-id665 . -28) (undo-tree-id666 . -28) (undo-tree-id667 . -28) (undo-tree-id668 . -28) (undo-tree-id669 . -28) (undo-tree-id670 . -28) (undo-tree-id671 . -28) (undo-tree-id672 . -28) (undo-tree-id673 . -28) (undo-tree-id674 . -28) (undo-tree-id675 . -28) (undo-tree-id676 . -28) (undo-tree-id677 . -28) (undo-tree-id678 . -29) (undo-tree-id679 . -29) (undo-tree-id680 . -29) (undo-tree-id681 . -30) (undo-tree-id682 . -30) (undo-tree-id683 . -30) (undo-tree-id684 . -31) (undo-tree-id685 . -31) (undo-tree-id686 . -31) (undo-tree-id687 . -31) (undo-tree-id688 . -32) (undo-tree-id689 . -33) (undo-tree-id690 . -34) (undo-tree-id691 . -34) (undo-tree-id692 . -34) (undo-tree-id693 . -34) (undo-tree-id694 . -34) (undo-tree-id695 . -35) (undo-tree-id696 . -35) (undo-tree-id697 . -35) (undo-tree-id698 . -36) (undo-tree-id699 . -36) (undo-tree-id700 . -36) (undo-tree-id701 . -36) (undo-tree-id702 . -37) (undo-tree-id703 . -37) (undo-tree-id704 . -37) (undo-tree-id705 . -37) (undo-tree-id706 . -38) (undo-tree-id707 . -38) (undo-tree-id708 . -38) (undo-tree-id709 . -39) (undo-tree-id710 . -39) (undo-tree-id711 . -39) (undo-tree-id712 . -39) (undo-tree-id713 . -40) (undo-tree-id714 . -41) (undo-tree-id715 . -41) (undo-tree-id716 . -41) (undo-tree-id717 . -41) (undo-tree-id718 . -41) (undo-tree-id719 . -41) (undo-tree-id720 . -41) (undo-tree-id721 . -41) (undo-tree-id722 . -41) (undo-tree-id723 . -41) (undo-tree-id724 . -41) (undo-tree-id725 . -41) (undo-tree-id726 . -41) (undo-tree-id727 . -41) (undo-tree-id728 . -41) (undo-tree-id729 . -42) (undo-tree-id730 . -42) (undo-tree-id731 . -42) (undo-tree-id732 . -42) (undo-tree-id733 . -43) (undo-tree-id734 . -44) (undo-tree-id735 . -44) (undo-tree-id736 . -44) (undo-tree-id737 . -45) (undo-tree-id738 . -45) (undo-tree-id739 . -45) (undo-tree-id740 . -45) (undo-tree-id741 . -46) (undo-tree-id742 . -46) (undo-tree-id743 . -3) (389 . 392) 432 (t 25281 21827 420322 67000)) nil (25281 21828 279505 0) 0 nil])
([nil nil ((#("wgkq" 0 4 (fontified t)) . -435) (undo-tree-id744 . -4) (435 . 439) (#("wgkq" 0 4 (fontified t)) . -435) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (435 . 439) (#("wgk" 0 3 (fontified t)) . -435) (undo-tree-id747 . -3) (435 . 438) (#("wgk" 0 3 (fontified t)) . -435) (undo-tree-id748 . -3) (undo-tree-id749 . -3) (435 . 438) (#("wg" 0 2 (fontified t)) . -435) (undo-tree-id750 . -2) (435 . 437) (#("wg" 0 2 (fontified t)) . -435) (undo-tree-id751 . -2) (undo-tree-id752 . -2) (435 . 437) (#("w" 0 1 (fontified t)) . -435) (undo-tree-id753 . -1) (435 . 436) (#("w" 0 1 (fontified t)) . -435) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (435 . 436) (t 25281 21828 287011 389000)) nil (25281 21847 747764 0) 0 nil])
([nil nil ((435 . 436)) nil (25281 21847 747735 0) 0 nil])
([nil nil ((388 . 390)) nil (25281 21847 747729 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -389) (undo-tree-id768 . -1) (389 . 390) (#("m" 0 1 (fontified t)) . -389) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (389 . 390) (#("ma" 0 2 (fontified t)) . -389) (undo-tree-id771 . -2) (389 . 391) (#("ma" 0 2 (fontified t)) . -389) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (389 . 391) (#("mak" 0 3 (fontified t)) . -389) (undo-tree-id774 . -3) (389 . 392) (#("mak" 0 3 (fontified t)) . -389) (undo-tree-id775 . -3) (undo-tree-id776 . -3) (389 . 392) (#("make" 0 4 (fontified t)) . -389) (undo-tree-id777 . -4) (389 . 393) (#("make" 0 4 (fontified t)) . -389) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (389 . 393) (#("mak" 0 3 (fontified t)) . -389) (undo-tree-id780 . -3) (389 . 392) (#("mak" 0 3 (fontified t)) . -389) (undo-tree-id781 . -3) (undo-tree-id782 . -3) (389 . 392) (#("ma" 0 2 (fontified t)) . -389) (undo-tree-id783 . -2) (389 . 391) (#("ma" 0 2 (fontified t)) . -389) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (389 . 391) (#("m" 0 1 (fontified t)) . -389) (undo-tree-id786 . -1) (389 . 390) (#("m" 0 1 (fontified t)) . -389) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (389 . 390) (t 25281 21847 755246 670000)) nil (25281 21852 425722 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t font-lock-fontified t) 1 2 (fontified t font-lock-fontified t)) . 387) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) 389) nil (25281 21852 425673 0) 0 nil])
([nil nil ((387 . 389)) nil (25281 21852 425644 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 405 . 406) (nil fontified nil 389 . 406) (389 . 406) (t 25281 21852 432854 521000)) nil (25281 21871 760498 0) 0 nil])
([nil nil ((407 . 409) (t 25281 21871 768480 636000)) nil (25281 21874 731002 0) 0 nil])
([nil nil ((409 . 410)) nil (25281 21874 731000 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -409) (undo-tree-id791 . -1) (undo-tree-id792 . -1) 410) nil (25281 21874 730998 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 409) (undo-tree-id789 . -1) (undo-tree-id790 . -1)) nil (25281 21874 730990 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 416 . 417) (nil fontified nil 408 . 417) (408 . 417) (t 25281 21874 738150 328000)) nil (25281 21880 337251 0) 0 nil])
([nil nil ((417 . 418) (t 25281 21880 344840 624000)) nil (25281 21881 697897 0) 0 nil])
([nil nil ((407 . 420) (t 25281 21881 705028 373000)) nil (25281 21889 83211 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 420 . 421) (nil fontified nil 407 . 421) (407 . 421) (t 25281 21889 90718 868000)) nil (25281 21907 270860 0) 0 nil])
([nil nil ((#("make i386_def" 0 13 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 421) (undo-tree-id793 . -13) (t 25281 21907 278312 447000)) nil (25281 21910 475566 0) 0 nil])
([nil nil ((407 . 412)) nil (25281 21910 475552 0) 0 nil])
([nil nil ((426 . 427) (t 25281 21910 483139 413000)) nil (25281 21921 586837 0) 0 nil])
([nil nil ((407 . 430) (#("make i386_defconfig

" 0 5 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 5 18 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 18 19 (fontified nil rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 19 20 (fontified nil) 20 21 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 407) (undo-tree-id844 . -21) (undo-tree-id845 . -21) (undo-tree-id846 . -19) (undo-tree-id847 . -21) (undo-tree-id848 . -21) (undo-tree-id849 . -5) (undo-tree-id850 . -5) (undo-tree-id851 . -19) (undo-tree-id852 . 2) (undo-tree-id853 . -20) 427) nil (25281 21921 586835 0) 0 nil])
([nil nil ((429 . 444)) nil (25281 21921 586822 0) 0 nil])
([nil nil ((407 . 451) (#("  make i386_defconfig
make menuconfig
" 0 38 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 407) (undo-tree-id821 . -37) (undo-tree-id822 . -22) (undo-tree-id823 . -38) (undo-tree-id824 . -22) (undo-tree-id825 . -22) (undo-tree-id826 . -23) (undo-tree-id827 . -24) (undo-tree-id828 . -25) (undo-tree-id829 . -26) (undo-tree-id830 . -27) (undo-tree-id831 . -27) (undo-tree-id832 . -27) (undo-tree-id833 . -28) (undo-tree-id834 . -29) (undo-tree-id835 . -30) (undo-tree-id836 . -31) (undo-tree-id837 . -32) (undo-tree-id838 . -33) (undo-tree-id839 . -34) (undo-tree-id840 . -35) (undo-tree-id841 . -36) (undo-tree-id842 . -37) (undo-tree-id843 . -37) 444) nil (25281 21921 586820 0) 0 nil])
([nil nil ((450 . 451)) nil (25281 21921 586790 0) 0 nil])
([nil nil ((407 . 448) (#("    make i386_defconfig
    make menuconfig

" 0 45 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 407) (undo-tree-id812 . -43) (undo-tree-id813 . -24) (undo-tree-id814 . -45) (undo-tree-id815 . -43) (undo-tree-id816 . -43) (undo-tree-id817 . -24) (undo-tree-id818 . -43) (undo-tree-id819 . 2) (undo-tree-id820 . -44) 451) nil (25281 21921 586788 0) 0 nil])
([nil nil ((447 . 451)) nil (25281 21921 586774 0) 0 nil])
([nil nil ((407 . 460) (#("  make i386_defconfig
  make menuconfig
make
" 0 45 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 407) (undo-tree-id794 . -44) (undo-tree-id795 . -40) (undo-tree-id796 . -45) (undo-tree-id797 . -40) (undo-tree-id798 . -40) (undo-tree-id799 . -40) (undo-tree-id800 . -40) (undo-tree-id801 . -40) (undo-tree-id802 . -40) (undo-tree-id803 . -41) (undo-tree-id804 . -42) (undo-tree-id805 . -43) (undo-tree-id806 . -44) (undo-tree-id807 . -44) (undo-tree-id808 . -44) (undo-tree-id809 . -44) (undo-tree-id810 . -44) (undo-tree-id811 . -44) 451) nil (25281 21921 586769 0) 0 nil])
([nil nil ((459 . 460) (t 25281 21921 594493 588000)) nil (25281 21925 981505 0) 0 nil])
([nil nil ((407 . 455) (#("    make i386_defconfig
    make menuconfig
    make

" 0 54 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 407) (undo-tree-id869 . -52) (undo-tree-id870 . -44) (undo-tree-id871 . -54) (undo-tree-id872 . -52) (undo-tree-id873 . -52) (undo-tree-id874 . 2) (undo-tree-id875 . -53) 460) nil (25281 21925 981503 0) 0 nil])
([nil nil ((454 . 459)) nil (25281 21925 981492 0) 0 nil])
([nil nil ((407 . 470) (#("  make i386_defconfig
  make menuconfig
  make
make 
" 0 53 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 407) (undo-tree-id854 . -52) (undo-tree-id855 . -47) (undo-tree-id856 . -53) (undo-tree-id857 . -47) (undo-tree-id858 . -47) (undo-tree-id859 . -47) (undo-tree-id860 . -47) (undo-tree-id861 . -47) (undo-tree-id862 . -47) (undo-tree-id863 . -48) (undo-tree-id864 . -49) (undo-tree-id865 . -50) (undo-tree-id866 . -51) (undo-tree-id867 . -52) (undo-tree-id868 . -52) 459) nil (25281 21925 981486 0) 0 nil])
([nil nil ((469 . 485) (t 25281 21925 989263 87000)) nil (25281 21942 115781 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 479 . 480) (nil fontified nil 464 . 480) (464 . 480) (t 25281 21942 123638 916000)) nil (25281 21953 752281 0) 0 nil])
([nil nil ((480 . 482)) nil (25281 21953 752279 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 481) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) 482) nil (25281 21953 752277 0) 0 nil])
([nil nil ((481 . 482)) nil (25281 21953 752270 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 502) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1)) nil (25281 21953 752265 0) 0 nil])
([nil nil ((481 . 484) (t 25281 21953 760155 208000)) nil (25281 21956 769068 0) 0 nil])
([nil nil ((#("使" 0 1 (fontified t font-lock-fontified t src-block t)) . -563) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) 564 (t 25281 21956 776783 592000)) nil (25281 21965 272902 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified nil)) . -563) (563 . 564) (#("o" 0 1 (fontified t)) . -563) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (563 . 564) (t 25281 21965 280723 684000)) nil (25281 21986 665739 0) 0 nil])
([nil nil ((568 . 570) (#("synw" 0 4 (fontified t)) . -568) (undo-tree-id982 . -4) (568 . 572) (#("synw" 0 4 (fontified t)) . -568) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (568 . 572) (#("syn" 0 3 (fontified t)) . -568) (undo-tree-id985 . -3) (568 . 571) (#("syn" 0 3 (fontified t)) . -568) (undo-tree-id986 . -3) (undo-tree-id987 . -3) (568 . 571) (#("sy" 0 2 (fontified t)) . -568) (undo-tree-id988 . -2) (568 . 570) (#("sy" 0 2 (fontified t)) . -568) (undo-tree-id989 . -2) (undo-tree-id990 . -2) (568 . 570) (#("s" 0 1 (fontified t)) . -568) (undo-tree-id991 . -1) (568 . 569) (#("s" 0 1 (fontified t)) . -568) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (567 . 569) (#("mw" 0 2 (fontified t)) . -567) (undo-tree-id994 . -2) (567 . 569) (#("mw" 0 2 (fontified t)) . -567) (undo-tree-id995 . -2) (undo-tree-id996 . -2) (567 . 569) (#("m" 0 1 (fontified t)) . -567) (undo-tree-id997 . -1) (567 . 568) (#("m" 0 1 (fontified t)) . -567) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (566 . 568) (#("yaa" 0 3 (fontified t)) . -566) (undo-tree-id1000 . -3) (566 . 569) (#("yaa" 0 3 (fontified t)) . -566) (undo-tree-id1001 . -3) (undo-tree-id1002 . -3) (566 . 569) (#("ya" 0 2 (fontified t)) . -566) (undo-tree-id1003 . -2) (566 . 568) (#("ya" 0 2 (fontified t)) . -566) (undo-tree-id1004 . -2) (undo-tree-id1005 . -2) (566 . 568) (#("y" 0 1 (fontified t)) . -566) (undo-tree-id1006 . -1) (566 . 567) (#("y" 0 1 (fontified t)) . -566) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (565 . 567) (#("ymfk" 0 4 (fontified nil)) . -565) (565 . 569) (#("ymfk" 0 4 (fontified t)) . -565) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (565 . 569) (#("ymf" 0 3 (fontified t)) . -565) (undo-tree-id1011 . -3) (565 . 568) (#("ymf" 0 3 (fontified t)) . -565) (undo-tree-id1012 . -3) (undo-tree-id1013 . -3) (565 . 568) (#("ym" 0 2 (fontified t)) . -565) (undo-tree-id1014 . -2) (565 . 567) (#("ym" 0 2 (fontified t)) . -565) (undo-tree-id1015 . -2) (undo-tree-id1016 . -2) (565 . 567) (#("y" 0 1 (fontified t)) . -565) (undo-tree-id1017 . -1) (565 . 566) (#("y" 0 1 (fontified t)) . -565) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (564 . 566) (#("b" 0 1 (fontified nil)) . -564) (564 . 565) (#("b" 0 1 (fontified t)) . -564) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (563 . 565)) nil (25281 21986 665727 0) 0 nil])
([nil nil ((573 . 574) (#("gh" 0 2 (fontified t)) . -573) (undo-tree-id955 . -2) (573 . 575) (#("gh" 0 2 (fontified t)) . -573) (undo-tree-id956 . -2) (undo-tree-id957 . -2) (573 . 575) (#("g" 0 1 (fontified t)) . -573) (undo-tree-id958 . -1) (573 . 574) (#("g" 0 1 (fontified t)) . -573) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (572 . 574) (#("rs" 0 2 (fontified t)) . -572) (undo-tree-id961 . -2) (572 . 574) (#("rs" 0 2 (fontified t)) . -572) (undo-tree-id962 . -2) (undo-tree-id963 . -2) (572 . 574) (#("r" 0 1 (fontified t)) . -572) (undo-tree-id964 . -1) (572 . 573) (#("r" 0 1 (fontified t)) . -572) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (571 . 573) (#("vb" 0 2 (fontified t)) . -571) (undo-tree-id967 . -2) (571 . 573) (#("vb" 0 2 (fontified t)) . -571) (undo-tree-id968 . -2) (undo-tree-id969 . -2) (571 . 573) (#("v" 0 1 (fontified t)) . -571) (undo-tree-id970 . -1) (571 . 572) (#("v" 0 1 (fontified t)) . -571) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (570 . 572) (#("jbc" 0 3 (fontified t)) . -570) (undo-tree-id973 . -3) (570 . 573) (#("jbc" 0 3 (fontified t)) . -570) (undo-tree-id974 . -3) (undo-tree-id975 . -3) (570 . 573) (#("jb" 0 2 (fontified t)) . -570) (undo-tree-id976 . -2) (570 . 572) (#("jb" 0 2 (fontified t)) . -570) (undo-tree-id977 . -2) (undo-tree-id978 . -2) (570 . 572) (#("j" 0 1 (fontified t)) . -570) (undo-tree-id979 . -1) (570 . 571) (#("j" 0 1 (fontified t)) . -570) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (570 . 571)) nil (25281 21986 665661 0) 0 nil])
([nil nil ((#("rs" 0 2 (fontified t)) . -572) (undo-tree-id936 . -2) (572 . 574) (#("rs" 0 2 (fontified t)) . -572) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (572 . 574) (#("r" 0 1 (fontified t)) . -572) (undo-tree-id939 . -1) (572 . 573) (#("r" 0 1 (fontified t)) . -572) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (572 . 573) (#("打" 0 1 (fontified t font-lock-fontified t src-block t)) . -572) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (#("下" 0 1 (fontified t font-lock-fontified t src-block t)) . -573) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) 574) nil (25281 21986 665616 0) 0 nil])
([nil nil ((578 . 579) (#("t" 0 1 (fontified t)) . -578) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (577 . 579) (#("wh" 0 2 (fontified t)) . -577) (undo-tree-id907 . -2) (577 . 579) (#("wh" 0 2 (fontified t)) . -577) (undo-tree-id908 . -2) (undo-tree-id909 . -2) (577 . 579) (#("w" 0 1 (fontified t)) . -577) (undo-tree-id910 . -1) (577 . 578) (#("w" 0 1 (fontified t)) . -577) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (576 . 578) (#("dg" 0 2 (fontified t)) . -576) (undo-tree-id913 . -2) (576 . 578) (#("dg" 0 2 (fontified t)) . -576) (undo-tree-id914 . -2) (undo-tree-id915 . -2) (576 . 578) (#("d" 0 1 (fontified t)) . -576) (undo-tree-id916 . -1) (576 . 577) (#("d" 0 1 (fontified t)) . -576) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (575 . 577) (#("dm" 0 2 (fontified nil)) . -575) (575 . 577) (#("dm" 0 2 (fontified t)) . -575) (undo-tree-id919 . -2) (undo-tree-id920 . -2) (575 . 577) (#("d" 0 1 (fontified t)) . -575) (undo-tree-id921 . -1) (575 . 576) (#("d" 0 1 (fontified t)) . -575) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (574 . 576) (#("gh" 0 2 (fontified t)) . -574) (undo-tree-id924 . -2) (574 . 576) (#("gh" 0 2 (fontified t)) . -574) (undo-tree-id925 . -2) (undo-tree-id926 . -2) (574 . 576) (#("g" 0 1 (fontified t)) . -574) (undo-tree-id927 . -1) (574 . 575) (#("g" 0 1 (fontified t)) . -574) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (573 . 575) (#("ga" 0 2 (fontified t)) . -573) (undo-tree-id930 . -2) (573 . 575) (#("ga" 0 2 (fontified t)) . -573) (undo-tree-id931 . -2) (undo-tree-id932 . -2) (573 . 575) (#("g" 0 1 (fontified t)) . -573) (undo-tree-id933 . -1) (573 . 574) (#("g" 0 1 (fontified t)) . -573) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (572 . 574)) nil (25281 21986 665571 0) 0 nil])
([nil nil ((579 . 580) (#("adm" 0 3 (fontified t)) . -579) (undo-tree-id889 . -3) (579 . 582) (#("adm" 0 3 (fontified t)) . -579) (undo-tree-id890 . -3) (undo-tree-id891 . -3) (579 . 582) (#("ad" 0 2 (fontified t)) . -579) (undo-tree-id892 . -2) (579 . 581) (#("ad" 0 2 (fontified t)) . -579) (undo-tree-id893 . -2) (undo-tree-id894 . -2) (579 . 581) (#("a" 0 1 (fontified t)) . -579) (undo-tree-id895 . -1) (579 . 580) (#("a" 0 1 (fontified t)) . -579) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (578 . 580) (#("tfqp" 0 4 (fontified t)) . -578) (undo-tree-id898 . -4) (578 . 582) (#("tfqp" 0 4 (fontified t)) . -578) (undo-tree-id899 . -4) (undo-tree-id900 . -4) (578 . 582) (#("tfq" 0 3 (fontified t)) . -578) (undo-tree-id901 . -3) (578 . 581) (#("tfq" 0 3 (fontified nil)) . -578) (578 . 581) (#("tfq" 0 3 (fontified nil)) . -578) (578 . 581) (#("tfq" 0 3 (fontified t)) . -578) (undo-tree-id902 . -3) (undo-tree-id903 . -3) (578 . 581) (#("t" 0 1 (fontified t)) . -578) (undo-tree-id904 . -1) 579) nil (25281 21986 665517 0) 0 nil])
([nil nil ((nil fontified nil 597 . 598) (nil fontified nil 581 . 597) (581 . 598) (t 25281 21986 674423 825000)) nil (25281 21989 373739 0) 0 nil])
([nil nil ((598 . 600) (t 25281 21989 382112 822000)) nil (25281 21992 688754 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 609 . 610) (nil fontified nil 609 . 610) (nil fontified nil 608 . 609) (nil fontified nil 600 . 608) (600 . 610)) nil (25281 21992 688748 0) 0 nil])
([nil nil ((610 . 612) (t 25281 21992 697096 182000)) nil (25281 21994 74261 0) 0 nil])
([nil nil ((#("tg" 0 2 (fontified t)) . -612) (undo-tree-id1050 . -2) (612 . 614) (#("tg" 0 2 (fontified t)) . -612) (undo-tree-id1051 . -2) (undo-tree-id1052 . -2) (612 . 614) (#("t" 0 1 (fontified t)) . -612) (undo-tree-id1053 . -1) (612 . 613) (#("t" 0 1 (fontified t)) . -612) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (612 . 613) 610 (t 25281 21994 82683 529000)) nil (25281 22001 475325 0) 0 nil])
([nil nil ((614 . 615) (#("r" 0 1 (fontified t)) . -614) (undo-tree-id1041 . -1) (614 . 615) (#("r" 0 1 (fontified t)) . -614) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (613 . 615) (#("dn" 0 2 (fontified t)) . -613) (undo-tree-id1044 . -2) (613 . 615) (#("dn" 0 2 (fontified t)) . -613) (undo-tree-id1045 . -2) (undo-tree-id1046 . -2) (613 . 615) (#("d" 0 1 (fontified t)) . -613) (undo-tree-id1047 . -1) (613 . 614) (#("d" 0 1 (fontified t)) . -613) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (612 . 614)) nil (25281 22001 475312 0) 0 nil])
([nil nil ((#("- 生成的" 0 5 (fontified t)) . 610) (undo-tree-id1024 . -2) (undo-tree-id1025 . -2) (undo-tree-id1026 . -2) (undo-tree-id1027 . -2) (undo-tree-id1028 . -2) (undo-tree-id1029 . -2) (undo-tree-id1030 . -3) (undo-tree-id1031 . -3) (undo-tree-id1032 . -3) (undo-tree-id1033 . -3) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -5) (undo-tree-id1038 . -5) (undo-tree-id1039 . -5) (undo-tree-id1040 . -5)) nil (25281 22001 475288 0) 0 nil])
([nil nil ((610 . 612) (t 25281 22001 483788 508000)) nil (25281 22002 762593 0) 0 nil])
([nil nil ((610 . 612) (t 25281 22002 771004 540000)) nil (25281 22004 870330 0) 0 nil])
([nil nil ((#("uq" 0 2 (fontified nil)) . -612) (612 . 614) (#("uq" 0 2 (fontified nil)) . -612) (612 . 614) (#("uq" 0 2 (fontified nil)) . -612) (612 . 614) (#("uq" 0 2 (fontified t)) . -612) (undo-tree-id1301 . -2) (undo-tree-id1302 . -2) (612 . 614) (t 25281 22004 878685 720000)) nil (25281 22044 173496 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -616) (undo-tree-id1283 . -1) (616 . 617) (#("x" 0 1 (fontified t)) . -616) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (613 . 617) (#("icu" 0 3 (fontified t)) . -613) (undo-tree-id1286 . -3) (613 . 616) (#("icu" 0 3 (fontified t)) . -613) (undo-tree-id1287 . -3) (undo-tree-id1288 . -3) (613 . 616) (#("ic" 0 2 (fontified t)) . -613) (undo-tree-id1289 . -2) (613 . 615) (#("ic" 0 2 (fontified t)) . -613) (undo-tree-id1290 . -2) (undo-tree-id1291 . -2) (613 . 615) (#("i" 0 1 (fontified t)) . -613) (undo-tree-id1292 . -1) (613 . 614) (#("i" 0 1 (fontified t)) . -613) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (613 . 614) (#("c" 0 1 (fontified t)) . -613) (undo-tree-id1295 . -1) (613 . 614) (#("c" 0 1 (fontified t)) . -613) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (613 . 614) (#("i" 0 1 (fontified t)) . -613) (undo-tree-id1298 . -1) (613 . 614) (#("i" 0 1 (fontified t)) . -613) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (612 . 614)) nil (25281 22044 173488 0) 0 nil])
([nil nil ((#("cyi" 0 3 (fontified t)) . -613) (undo-tree-id1253 . -3) (613 . 616) (#("cyi" 0 3 (fontified t)) . -613) (undo-tree-id1254 . -3) (undo-tree-id1255 . -3) (613 . 616) (#("cy" 0 2 (fontified t)) . -613) (undo-tree-id1256 . -2) (613 . 615) (#("cy" 0 2 (fontified t)) . -613) (undo-tree-id1257 . -2) (undo-tree-id1258 . -2) (613 . 615) (#("cyu" 0 3 (fontified t)) . -613) (undo-tree-id1259 . -3) (613 . 616) (#("cyu" 0 3 (fontified t)) . -613) (undo-tree-id1260 . -3) (undo-tree-id1261 . -3) (613 . 616) (#("cy" 0 2 (fontified t)) . -613) (undo-tree-id1262 . -2) (613 . 615) (#("cy" 0 2 (fontified t)) . -613) (undo-tree-id1263 . -2) (undo-tree-id1264 . -2) (613 . 615) (#("c" 0 1 (fontified t)) . -613) (undo-tree-id1265 . -1) (613 . 614) (#("c" 0 1 (fontified t)) . -613) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (613 . 614) (#("I" 0 1 (fontified t)) . -613) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (#("C" 0 1 (fontified t)) . -614) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (#("U" 0 1 (fontified t)) . -615) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) 616) nil (25281 22044 173457 0) 0 nil])
([nil nil ((616 . 617) (#("jfy" 0 3 (fontified nil)) . -616) (616 . 619) (#("jfy" 0 3 (fontified t)) . -616) (undo-tree-id1224 . -3) (undo-tree-id1225 . -3) (616 . 619) (#("jf" 0 2 (fontified t)) . -616) (undo-tree-id1226 . -2) (616 . 618) (#("jf" 0 2 (fontified t)) . -616) (undo-tree-id1227 . -2) (undo-tree-id1228 . -2) (616 . 618) (#("j" 0 1 (fontified t)) . -616) (undo-tree-id1229 . -1) (616 . 617) (#("j" 0 1 (fontified t)) . -616) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (615 . 617) (#("ycfh" 0 4 (fontified t)) . -615) (undo-tree-id1232 . -4) (615 . 619) (#("ycfh" 0 4 (fontified nil)) . -615) (615 . 619) (#("ycfh" 0 4 (fontified nil)) . -615) (615 . 619) (#("ycfh" 0 4 (fontified t)) . -615) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (615 . 619) (#("yc" 0 2 (fontified t)) . -615) (undo-tree-id1235 . -2) (615 . 617) (#("yc" 0 2 (fontified t)) . -615) (undo-tree-id1236 . -2) (undo-tree-id1237 . -2) (615 . 617) (#("y" 0 1 (fontified t)) . -615) (undo-tree-id1238 . -1) (615 . 616) (#("y" 0 1 (fontified t)) . -615) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (614 . 616) (#("xyna" 0 4 (fontified t)) . -614) (undo-tree-id1241 . -4) (614 . 618) (#("xyna" 0 4 (fontified t)) . -614) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (614 . 618) (#("xyn" 0 3 (fontified t)) . -614) (undo-tree-id1244 . -3) (614 . 617) (#("xyn" 0 3 (fontified t)) . -614) (undo-tree-id1245 . -3) (undo-tree-id1246 . -3) (614 . 617) (#("xy" 0 2 (fontified t)) . -614) (undo-tree-id1247 . -2) (614 . 616) (#("xy" 0 2 (fontified t)) . -614) (undo-tree-id1248 . -2) (undo-tree-id1249 . -2) (614 . 616) (#("x" 0 1 (fontified t)) . -614) (undo-tree-id1250 . -1) (614 . 615) (#("x" 0 1 (fontified t)) . -614) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (613 . 615)) nil (25281 22044 173409 0) 0 nil])
([nil nil ((#("时" 0 1 (fontified t)) . -616) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) 617) nil (25281 22044 173366 0) 0 nil])
([nil nil ((#("vk" 0 2 (fontified nil)) . -612) (612 . 614) (#("vk" 0 2 (fontified t)) . -612) (undo-tree-id1215 . -2) (undo-tree-id1216 . -2) (612 . 614) (#("v" 0 1 (fontified t)) . -612) (undo-tree-id1217 . -1) (612 . 613) (#("v" 0 1 (fontified t)) . -612) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (612 . 613) 613) nil (25281 22044 173359 0) 0 nil])
([nil nil ((613 . 614) (#("e" 0 1 (fontified t)) . -613) (undo-tree-id1212 . -1) (613 . 614) (#("e" 0 1 (fontified t)) . -613) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (612 . 614)) nil (25281 22044 173350 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -613) (undo-tree-id1207 . -1) (613 . 614) (#("s" 0 1 (fontified t)) . -613) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (613 . 614) (#("有" 0 1 (fontified t)) . -613) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) 614) nil (25281 22044 173344 0) 0 nil])
([nil nil ((613 . 614)) nil (25281 22044 173335 0) 0 nil])
([nil nil ((621 . 622) (#("i" 0 1 (fontified nil)) . -621) (621 . 622) (#("i" 0 1 (fontified t)) . -621) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (620 . 622) (#("etnh" 0 4 (fontified nil)) . -620) (620 . 624) (#("etnh" 0 4 (fontified t)) . -620) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (620 . 624) (#("etn" 0 3 (fontified t)) . -620) (undo-tree-id1189 . -3) (620 . 623) (#("etn" 0 3 (fontified nil)) . -620) (620 . 623) (#("etn" 0 3 (fontified nil)) . -620) (620 . 623) (#("etn" 0 3 (fontified t)) . -620) (undo-tree-id1190 . -3) (undo-tree-id1191 . -3) (620 . 623) (#("e" 0 1 (fontified t)) . -620) (undo-tree-id1192 . -1) (620 . 621) (#("e" 0 1 (fontified t)) . -620) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (619 . 621) (#("tfqp" 0 4 (fontified t)) . -619) (undo-tree-id1195 . -4) (619 . 623) (#("tfqp" 0 4 (fontified t)) . -619) (undo-tree-id1196 . -4) (undo-tree-id1197 . -4) (619 . 623) (#("tfq" 0 3 (fontified t)) . -619) (undo-tree-id1198 . -3) (619 . 622) (#("tfq" 0 3 (fontified t)) . -619) (undo-tree-id1199 . -3) (undo-tree-id1200 . -3) (619 . 622) (#("tf" 0 2 (fontified t)) . -619) (undo-tree-id1201 . -2) (619 . 621) (#("tf" 0 2 (fontified t)) . -619) (undo-tree-id1202 . -2) (undo-tree-id1203 . -2) (619 . 621) (#("t" 0 1 (fontified t)) . -619) (undo-tree-id1204 . -1) (619 . 620) (#("t" 0 1 (fontified t)) . -619) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (618 . 620)) nil (25281 22044 173329 0) 0 nil])
([nil nil ((#("不" 0 1 (fontified t)) . -621) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) 622) nil (25281 22044 173295 0) 0 nil])
([nil nil ((#("rxj" 0 3 (fontified nil)) . -619) (619 . 622) (#("rxj" 0 3 (fontified t)) . -619) (undo-tree-id1139 . -3) (undo-tree-id1140 . -3) (619 . 622) (#("rx" 0 2 (fontified t)) . -619) (undo-tree-id1141 . -2) (619 . 621) (#("rx" 0 2 (fontified t)) . -619) (undo-tree-id1142 . -2) (undo-tree-id1143 . -2) (619 . 621) (#("r" 0 1 (fontified t)) . -619) (undo-tree-id1144 . -1) (619 . 620) (#("r" 0 1 (fontified t)) . -619) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (619 . 620) (#("选" 0 1 (fontified t)) . -619) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (#("用" 0 1 (fontified t)) . -620) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (#("c" 0 1 (fontified t)) . -621) (undo-tree-id1178 . -1) (621 . 622) (#("c" 0 1 (fontified t)) . -621) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (621 . 622)) nil (25281 22044 173285 0) 0 nil])
([nil nil ((628 . 629) (#("qlp" 0 3 (fontified nil)) . -628) (628 . 631) (#("qlp" 0 3 (fontified t)) . -628) (undo-tree-id1056 . -3) (undo-tree-id1057 . -3) (628 . 631) (#("ql" 0 2 (fontified t)) . -628) (undo-tree-id1058 . -2) (628 . 630) (#("ql" 0 2 (fontified t)) . -628) (undo-tree-id1059 . -2) (undo-tree-id1060 . -2) (628 . 630) (#("q" 0 1 (fontified t)) . -628) (undo-tree-id1061 . -1) (628 . 629) (#("q" 0 1 (fontified t)) . -628) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (627 . 629) (#("hw" 0 2 (fontified t)) . -627) (undo-tree-id1064 . -2) (627 . 629) (#("hw" 0 2 (fontified t)) . -627) (undo-tree-id1065 . -2) (undo-tree-id1066 . -2) (627 . 629) (#("h" 0 1 (fontified t)) . -627) (undo-tree-id1067 . -1) (627 . 628) (#("h" 0 1 (fontified t)) . -627) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (626 . 628) (#("a" 0 1 (fontified t)) . -626) (undo-tree-id1070 . -1) (626 . 627) (#("a" 0 1 (fontified t)) . -626) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (625 . 627) (#("ycfh" 0 4 (fontified t)) . -625) (undo-tree-id1073 . -4) (625 . 629) (#("ycfh" 0 4 (fontified t)) . -625) (undo-tree-id1074 . -4) (undo-tree-id1075 . -4) (625 . 629) (#("ycf" 0 3 (fontified t)) . -625) (undo-tree-id1076 . -3) (625 . 628) (#("ycf" 0 3 (fontified t)) . -625) (undo-tree-id1077 . -3) (undo-tree-id1078 . -3) (625 . 628) (#("yc" 0 2 (fontified t)) . -625) (undo-tree-id1079 . -2) (625 . 627) (#("yc" 0 2 (fontified t)) . -625) (undo-tree-id1080 . -2) (undo-tree-id1081 . -2) (625 . 627) (#("y" 0 1 (fontified t)) . -625) (undo-tree-id1082 . -1) (625 . 626) (#("y" 0 1 (fontified t)) . -625) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (625 . 626) (#("yy" 0 2 (fontified t)) . -625) (undo-tree-id1085 . -2) (625 . 627) (#("yy" 0 2 (fontified t)) . -625) (undo-tree-id1086 . -2) (undo-tree-id1087 . -2) (625 . 627) (#("yyc" 0 3 (fontified t)) . -625) (undo-tree-id1088 . -3) (625 . 628) (#("yyc" 0 3 (fontified t)) . -625) (undo-tree-id1089 . -3) (undo-tree-id1090 . -3) (625 . 628) (#("yy" 0 2 (fontified t)) . -625) (undo-tree-id1091 . -2) (625 . 627) (#("yy" 0 2 (fontified t)) . -625) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) (625 . 627) (#("y" 0 1 (fontified t)) . -625) (undo-tree-id1094 . -1) (625 . 626) (#("y" 0 1 (fontified t)) . -625) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (624 . 626) (#("xyna" 0 4 (fontified t)) . -624) (undo-tree-id1097 . -4) (624 . 628) (#("xyna" 0 4 (fontified t)) . -624) (undo-tree-id1098 . -4) (undo-tree-id1099 . -4) (624 . 628) (#("xyn" 0 3 (fontified t)) . -624) (undo-tree-id1100 . -3) (624 . 627) (#("xyn" 0 3 (fontified t)) . -624) (undo-tree-id1101 . -3) (undo-tree-id1102 . -3) (624 . 627) (#("xy" 0 2 (fontified t)) . -624) (undo-tree-id1103 . -2) (624 . 626) (#("xy" 0 2 (fontified t)) . -624) (undo-tree-id1104 . -2) (undo-tree-id1105 . -2) (624 . 626) (#("x" 0 1 (fontified t)) . -624) (undo-tree-id1106 . -1) (624 . 625) (#("x" 0 1 (fontified t)) . -624) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (623 . 625) (#("r" 0 1 (fontified t)) . -623) (undo-tree-id1109 . -1) (623 . 624) (#("r" 0 1 (fontified t)) . -623) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (622 . 624) (#("yid" 0 3 (fontified t)) . -622) (undo-tree-id1112 . -3) (622 . 625) (#("yid" 0 3 (fontified t)) . -622) (undo-tree-id1113 . -3) (undo-tree-id1114 . -3) (622 . 625) (#("yi" 0 2 (fontified t)) . -622) (undo-tree-id1115 . -2) (622 . 624) (#("yi" 0 2 (fontified t)) . -622) (undo-tree-id1116 . -2) (undo-tree-id1117 . -2) (622 . 624) (#("y" 0 1 (fontified t)) . -622) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (622 . 623) (#("y" 0 1 (fontified t)) . -622) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (621 . 623) (#("cfy" 0 3 (fontified nil)) . -621) (621 . 624) (#("cfy" 0 3 (fontified t)) . -621) (undo-tree-id1123 . -3) (undo-tree-id1124 . -3) (621 . 624) (#("cf" 0 2 (fontified t)) . -621) (undo-tree-id1125 . -2) (621 . 623) (#("cf" 0 2 (fontified t)) . -621) (undo-tree-id1126 . -2) (undo-tree-id1127 . -2) (621 . 623) (#("c" 0 1 (fontified t)) . -621) (undo-tree-id1128 . -1) (621 . 622) (#("c" 0 1 (fontified t)) . -621) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (620 . 622) (#("pgh" 0 3 (fontified nil)) . -620) (620 . 623) (#("pgh" 0 3 (fontified t)) . -620) (undo-tree-id1131 . -3) (undo-tree-id1132 . -3) (620 . 623) (#("pg" 0 2 (fontified t)) . -620) (undo-tree-id1133 . -2) (620 . 622) (#("pg" 0 2 (fontified t)) . -620) (undo-tree-id1134 . -2) (undo-tree-id1135 . -2) (620 . 622) (#("p" 0 1 (fontified t)) . -620) (undo-tree-id1136 . -1) (620 . 621) (#("p" 0 1 (fontified t)) . -620) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (619 . 621)) nil (25281 22044 173212 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 673 . 674) (nil fontified nil 599 . 674) (599 . 674) (t 25281 22044 182367 431000)) nil (25281 22349 559930 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -618) (t 25281 22349 569044 421000)) nil (25281 22350 940577 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -638)) nil (25281 22350 940571 0) 0 nil])
([nil nil ((669 . 691) (#("- 
- 如要交叉编译，指定对应的编译工具链" 0 2 (fontified nil) 2 3 (fontified nil) 3 7 (fontified nil) 7 22 (fontified nil)) . 669) (undo-tree-id1303 . -22) (undo-tree-id1304 . -22) (undo-tree-id1305 . -3) (669 . 672) 688 (t 25281 22350 949850 434000)) nil (25281 22354 528027 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified nil)) . -691) (691 . 692) (#("y" 0 1 (fontified nil)) . -691) (691 . 692) (#("y" 0 1 (fontified nil)) . -691) (691 . 692) (#("y" 0 1 (fontified nil)) . -691) (691 . 692) (#("y" 0 1 (fontified nil)) . -691) (691 . 692) (#("y" 0 1 (fontified nil)) . -691) (691 . 692) (#("y" 0 1 (fontified nil)) . -691) (691 . 692) (#("y" 0 1 (fontified t)) . -691) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (691 . 692) (t 25281 22354 537125 807000)) nil (25281 22380 771609 0) 0 nil])
([nil nil ((693 . 694) (#("dn" 0 2 (fontified t)) . -693) (undo-tree-id1531 . -2) (693 . 695) (#("dn" 0 2 (fontified t)) . -693) (undo-tree-id1532 . -2) (undo-tree-id1533 . -2) (693 . 695) (#("d" 0 1 (fontified t)) . -693) (undo-tree-id1534 . -1) (693 . 694) (#("d" 0 1 (fontified t)) . -693) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (692 . 694) (#("ycfh" 0 4 (fontified t)) . -692) (undo-tree-id1537 . -4) (692 . 696) (#("ycfh" 0 4 (fontified t)) . -692) (undo-tree-id1538 . -4) (undo-tree-id1539 . -4) (692 . 696) (#("ycf" 0 3 (fontified t)) . -692) (undo-tree-id1540 . -3) (692 . 695) (#("ycf" 0 3 (fontified t)) . -692) (undo-tree-id1541 . -3) (undo-tree-id1542 . -3) (692 . 695) (#("yc" 0 2 (fontified t)) . -692) (undo-tree-id1543 . -2) (692 . 694) (#("yc" 0 2 (fontified t)) . -692) (undo-tree-id1544 . -2) (undo-tree-id1545 . -2) (692 . 694) (#("y" 0 1 (fontified t)) . -692) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (692 . 693) (#("y" 0 1 (fontified nil)) . -692) (691 . 693)) nil (25281 22380 771599 0) 0 nil])
([nil nil ((696 . 697) (#("r" 0 1 (fontified t)) . -696) (undo-tree-id1505 . -1) (696 . 697) (#("r" 0 1 (fontified t)) . -696) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (695 . 697) (#("fnw" 0 3 (fontified t)) . -695) (undo-tree-id1508 . -3) (695 . 698) (#("fnw" 0 3 (fontified t)) . -695) (undo-tree-id1509 . -3) (undo-tree-id1510 . -3) (695 . 698) (#("fn" 0 2 (fontified t)) . -695) (undo-tree-id1511 . -2) (695 . 697) (#("fn" 0 2 (fontified t)) . -695) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) (695 . 697) (#("f" 0 1 (fontified t)) . -695) (undo-tree-id1514 . -1) (695 . 696) (#("f" 0 1 (fontified t)) . -695) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (694 . 696) (#("sajd" 0 4 (fontified t)) . -694) (undo-tree-id1517 . -4) (undo-tree-id1518 . -4) (undo-tree-id1519 . -4) (694 . 698) (#("sajd" 0 4 (fontified t)) . -694) (undo-tree-id1520 . -4) (undo-tree-id1521 . -4) (694 . 698) (#("saj" 0 3 (fontified t)) . -694) (undo-tree-id1522 . -3) (694 . 697) (#("saj" 0 3 (fontified t)) . -694) (undo-tree-id1523 . -3) (undo-tree-id1524 . -3) (694 . 697) (#("sa" 0 2 (fontified t)) . -694) (undo-tree-id1525 . -2) (694 . 696) (#("sa" 0 2 (fontified t)) . -694) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) (694 . 696) (#("s" 0 1 (fontified t)) . -694) (undo-tree-id1528 . -1) (694 . 695) (#("s" 0 1 (fontified t)) . -694) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (694 . 695)) nil (25281 22380 771567 0) 0 nil])
([nil nil ((#("saj" 0 3 (fontified t)) . -691) (undo-tree-id1462 . -3) (691 . 694) (#("saj" 0 3 (fontified t)) . -691) (undo-tree-id1463 . -3) (undo-tree-id1464 . -3) (691 . 694) (#("sa" 0 2 (fontified t)) . -691) (undo-tree-id1465 . -2) (691 . 693) (#("sa" 0 2 (fontified t)) . -691) (undo-tree-id1466 . -2) (undo-tree-id1467 . -2) (691 . 693) (#("s" 0 1 (fontified t)) . -691) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (691 . 692) (#("s" 0 1 (fontified t)) . -691) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (691 . 692) (#("编译成模块的" 0 6 (fontified t)) . 691) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -2) (undo-tree-id1482 . -3) (undo-tree-id1483 . -3) (undo-tree-id1484 . -3) (undo-tree-id1485 . -3) (undo-tree-id1486 . -3) (undo-tree-id1487 . -3) (undo-tree-id1488 . -3) (undo-tree-id1489 . -3) (undo-tree-id1490 . -3) (undo-tree-id1491 . -3) (undo-tree-id1492 . -3) (undo-tree-id1493 . -4) (undo-tree-id1494 . -4) (undo-tree-id1495 . -4) (undo-tree-id1496 . -4) (undo-tree-id1497 . -4) (undo-tree-id1498 . -5) (undo-tree-id1499 . -5) (undo-tree-id1500 . -5) (undo-tree-id1501 . -6) (undo-tree-id1502 . -6) (undo-tree-id1503 . -6) (undo-tree-id1504 . -6)) nil (25281 22380 771525 0) 0 nil])
([nil nil ((693 . 694) (#("sk" 0 2 (fontified nil)) . -693) (693 . 695) (#("sk" 0 2 (fontified t)) . -693) (undo-tree-id1448 . -2) (undo-tree-id1449 . -2) (693 . 695) (#("s" 0 1 (fontified t)) . -693) (undo-tree-id1450 . -1) (693 . 694) (#("s" 0 1 (fontified t)) . -693) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (692 . 694) (#("fnw" 0 3 (fontified t)) . -692) (undo-tree-id1453 . -3) (692 . 695) (#("fnw" 0 3 (fontified t)) . -692) (undo-tree-id1454 . -3) (undo-tree-id1455 . -3) (692 . 695) (#("fn" 0 2 (fontified t)) . -692) (undo-tree-id1456 . -2) (692 . 694) (#("fn" 0 2 (fontified t)) . -692) (undo-tree-id1457 . -2) (undo-tree-id1458 . -2) (692 . 694) (#("f" 0 1 (fontified t)) . -692) (undo-tree-id1459 . -1) (692 . 693) (#("f" 0 1 (fontified t)) . -692) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (691 . 693)) nil (25281 22380 771453 0) 0 nil])
([nil nil ((696 . 703) (#("gc" 0 2 (fontified t)) . -696) (undo-tree-id1424 . -2) (696 . 698) (#("gc" 0 2 (fontified t)) . -696) (undo-tree-id1425 . -2) (undo-tree-id1426 . -2) (696 . 698) (#("g" 0 1 (fontified t)) . -696) (undo-tree-id1427 . -1) (696 . 697) (#("g" 0 1 (fontified t)) . -696) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (695 . 697) (#("ufye" 0 4 (fontified t)) . -695) (undo-tree-id1430 . -4) (695 . 699) (#("ufye" 0 4 (fontified t)) . -695) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) (695 . 699) (#("ufy" 0 3 (fontified t)) . -695) (undo-tree-id1433 . -3) (695 . 698) (#("ufy" 0 3 (fontified t)) . -695) (undo-tree-id1434 . -3) (undo-tree-id1435 . -3) (695 . 698) (#("uf" 0 2 (fontified t)) . -695) (undo-tree-id1436 . -2) (695 . 697) (#("uf" 0 2 (fontified t)) . -695) (undo-tree-id1437 . -2) (undo-tree-id1438 . -2) (695 . 697) (#("u" 0 1 (fontified t)) . -695) (undo-tree-id1439 . -1) (695 . 696) (#("u" 0 1 (fontified t)) . -695) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (694 . 696) (#("pv" 0 2 (fontified t)) . -694) (undo-tree-id1442 . -2) (694 . 696) (#("pv" 0 2 (fontified t)) . -694) (undo-tree-id1443 . -2) (undo-tree-id1444 . -2) (694 . 696) (#("p" 0 1 (fontified t)) . -694) (undo-tree-id1445 . -1) (694 . 695) (#("p" 0 1 (fontified t)) . -694) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (694 . 695)) nil (25281 22380 771427 0) 0 nil])
([nil nil ((#("hhhh" 0 4 (fontified t)) . -703) (undo-tree-id1412 . -4) (703 . 707) (#("hhhh" 0 4 (fontified t)) . -703) (undo-tree-id1413 . -4) (undo-tree-id1414 . -4) (703 . 707) (#("hhh" 0 3 (fontified t)) . -703) (undo-tree-id1415 . -3) (703 . 706) (#("hhh" 0 3 (fontified t)) . -703) (undo-tree-id1416 . -3) (undo-tree-id1417 . -3) (703 . 706) (#("hh" 0 2 (fontified t)) . -703) (undo-tree-id1418 . -2) (703 . 705) (#("hh" 0 2 (fontified t)) . -703) (undo-tree-id1419 . -2) (undo-tree-id1420 . -2) (703 . 705) (#("h" 0 1 (fontified t)) . -703) (undo-tree-id1421 . -1) (703 . 704) (#("h" 0 1 (fontified t)) . -703) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (703 . 704) 691) nil (25281 22380 771388 0) 0 nil])
([nil nil ((704 . 705) (#("vi" 0 2 (fontified nil)) . -704) (704 . 706) (#("vi" 0 2 (fontified t)) . -704) (undo-tree-id1407 . -2) (undo-tree-id1408 . -2) (704 . 706) (#("v" 0 1 (fontified t)) . -704) (undo-tree-id1409 . -1) (704 . 705) (#("v" 0 1 (fontified t)) . -704) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (703 . 705)) nil (25281 22380 771366 0) 0 nil])
([nil nil ((705 . 706) (#("k" 0 1 (fontified t)) . -705) (undo-tree-id1404 . -1) (705 . 706) (#("k" 0 1 (fontified t)) . -705) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (705 . 706)) nil (25281 22380 771355 0) 0 nil])
([nil nil ((689 . 709) (#("- 
- 模块可安装到rootfs目录中" 0 2 (fontified nil) 2 3 (fontified nil) 3 20 (fontified nil)) . 689) (undo-tree-id1306 . -20) (undo-tree-id1307 . -5) (undo-tree-id1308 . -5) (undo-tree-id1309 . -5) (undo-tree-id1310 . -5) (undo-tree-id1311 . -5) (undo-tree-id1312 . -5) (undo-tree-id1313 . -5) (undo-tree-id1314 . -5) (undo-tree-id1315 . -5) (undo-tree-id1316 . -5) (undo-tree-id1317 . -5) (undo-tree-id1318 . -5) (undo-tree-id1319 . -5) (undo-tree-id1320 . -5) (undo-tree-id1321 . -5) (undo-tree-id1322 . -5) (undo-tree-id1323 . -5) (undo-tree-id1324 . -5) (undo-tree-id1325 . -5) (undo-tree-id1326 . -5) (undo-tree-id1327 . -5) (undo-tree-id1328 . -5) (undo-tree-id1329 . -5) (undo-tree-id1330 . -5) (undo-tree-id1331 . -5) (undo-tree-id1332 . -5) (undo-tree-id1333 . -5) (undo-tree-id1334 . -5) (undo-tree-id1335 . -5) (undo-tree-id1336 . -5) (undo-tree-id1337 . -5) (undo-tree-id1338 . -5) (undo-tree-id1339 . -5) (undo-tree-id1340 . -5) (undo-tree-id1341 . -4) (undo-tree-id1342 . -5) (undo-tree-id1343 . -5) (undo-tree-id1344 . -5) (undo-tree-id1345 . -5) (undo-tree-id1346 . -5) (undo-tree-id1347 . -5) (undo-tree-id1348 . -5) (undo-tree-id1349 . -5) (undo-tree-id1350 . -5) (undo-tree-id1351 . -6) (undo-tree-id1352 . -6) (undo-tree-id1353 . -6) (undo-tree-id1354 . -6) (undo-tree-id1355 . -6) (undo-tree-id1356 . -7) (undo-tree-id1357 . -7) (undo-tree-id1358 . -7) (undo-tree-id1359 . -7) (undo-tree-id1360 . -7) (undo-tree-id1361 . -8) (undo-tree-id1362 . -8) (undo-tree-id1363 . -8) (undo-tree-id1364 . -9) (undo-tree-id1365 . -9) (undo-tree-id1366 . -9) (undo-tree-id1367 . -9) (undo-tree-id1368 . -9) (undo-tree-id1369 . -9) (undo-tree-id1370 . -10) (undo-tree-id1371 . -10) (undo-tree-id1372 . -10) (undo-tree-id1373 . -10) (undo-tree-id1374 . -10) (undo-tree-id1375 . -10) (undo-tree-id1376 . -11) (undo-tree-id1377 . -12) (undo-tree-id1378 . -13) (undo-tree-id1379 . -14) (undo-tree-id1380 . -15) (undo-tree-id1381 . -16) (undo-tree-id1382 . -17) (undo-tree-id1383 . -17) (undo-tree-id1384 . -17) (undo-tree-id1385 . -4) (undo-tree-id1386 . -5) (undo-tree-id1387 . -17) (undo-tree-id1388 . -17) (undo-tree-id1389 . -17) (undo-tree-id1390 . -17) (undo-tree-id1391 . -17) (undo-tree-id1392 . -17) (undo-tree-id1393 . -18) (undo-tree-id1394 . -18) (undo-tree-id1395 . -18) (undo-tree-id1396 . -19) (undo-tree-id1397 . -19) (undo-tree-id1398 . -19) (undo-tree-id1399 . -19) (undo-tree-id1400 . -20) (undo-tree-id1401 . -20) (undo-tree-id1402 . -20) (undo-tree-id1403 . -3) (689 . 692) 706) nil (25281 22380 771342 0) 0 nil])
([nil nil ((#("mw" 0 2 (fontified t)) . -709) (undo-tree-id1784 . -2) (709 . 711) (#("mw" 0 2 (fontified t)) . -709) (undo-tree-id1785 . -2) (undo-tree-id1786 . -2) (709 . 711) (#("m" 0 1 (fontified t)) . -709) (undo-tree-id1787 . -1) (709 . 710) (#("m" 0 1 (fontified t)) . -709) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (709 . 710) (t 25281 22380 781761 5000)) nil (25281 22673 79481 0) 0 nil])
([nil nil ((711 . 712) (#("e" 0 1 (fontified t)) . -711) (undo-tree-id1760 . -1) (711 . 712) (#("e" 0 1 (fontified t)) . -711) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (711 . 712) (#("e" 0 1 (fontified t)) . -711) (undo-tree-id1763 . -1) (711 . 712) (#("e" 0 1 (fontified t)) . -711) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (710 . 712) (#("synw" 0 4 (fontified t)) . -710) (undo-tree-id1766 . -4) (710 . 714) (#("synw" 0 4 (fontified t)) . -710) (undo-tree-id1767 . -4) (undo-tree-id1768 . -4) (710 . 714) (#("syn" 0 3 (fontified t)) . -710) (undo-tree-id1769 . -3) (710 . 713) (#("syn" 0 3 (fontified t)) . -710) (undo-tree-id1770 . -3) (undo-tree-id1771 . -3) (710 . 713) (#("sy" 0 2 (fontified t)) . -710) (undo-tree-id1772 . -2) (710 . 712) (#("sy" 0 2 (fontified t)) . -710) (undo-tree-id1773 . -2) (undo-tree-id1774 . -2) (710 . 712) (#("s" 0 1 (fontified t)) . -710) (undo-tree-id1775 . -1) (710 . 711) (#("s" 0 1 (fontified t)) . -710) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (710 . 711) (#("s" 0 1 (fontified t)) . -710) (undo-tree-id1778 . -1) (710 . 711) (#("s" 0 1 (fontified t)) . -710) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (710 . 711) (#("sy" 0 2 (fontified t)) . -710) (undo-tree-id1781 . -2) (710 . 712) (#("sy" 0 2 (fontified nil)) . -710) (710 . 712) (#("sy" 0 2 (fontified nil)) . -710) (710 . 712) (#("sy" 0 2 (fontified t)) . -710) (undo-tree-id1782 . -2) (undo-tree-id1783 . -2) (709 . 712)) nil (25281 22673 79467 0) 0 nil])
([nil nil ((#("有" 0 1 (fontified t)) . -711) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) 712) nil (25281 22673 79430 0) 0 nil])
([nil nil ((#("内核" 0 2 (fontified t)) . 709) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -2) (undo-tree-id1741 . -2) (undo-tree-id1742 . -2) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -2) (undo-tree-id1746 . -2) (undo-tree-id1747 . -2) (undo-tree-id1748 . -2) (undo-tree-id1749 . -2) (undo-tree-id1750 . -2) (undo-tree-id1751 . -2) (undo-tree-id1752 . -2) (undo-tree-id1753 . -2) (undo-tree-id1754 . -2) (undo-tree-id1755 . -2)) nil (25281 22673 79423 0) 0 nil])
([nil nil ((709 . 724)) nil (25281 22673 79393 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 723) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) 724) nil (25281 22673 79392 0) 0 nil])
([nil nil ((731 . 732) (#("r" 0 1 (fontified t)) . -731) (undo-tree-id1673 . -1) (731 . 732) (#("r" 0 1 (fontified t)) . -731) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (730 . 732) (#("gkp" 0 3 (fontified t)) . -730) (undo-tree-id1676 . -3) (730 . 733) (#("gkp" 0 3 (fontified t)) . -730) (undo-tree-id1677 . -3) (undo-tree-id1678 . -3) (730 . 733) (#("gk" 0 2 (fontified t)) . -730) (undo-tree-id1679 . -2) (730 . 732) (#("gk" 0 2 (fontified t)) . -730) (undo-tree-id1680 . -2) (undo-tree-id1681 . -2) (730 . 732) (#("g" 0 1 (fontified t)) . -730) (undo-tree-id1682 . -1) (730 . 731) (#("g" 0 1 (fontified t)) . -730) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (729 . 731) (#("synw" 0 4 (fontified t)) . -729) (undo-tree-id1685 . -4) (729 . 733) (#("synw" 0 4 (fontified t)) . -729) (undo-tree-id1686 . -4) (undo-tree-id1687 . -4) (729 . 733) (#("syn" 0 3 (fontified t)) . -729) (undo-tree-id1688 . -3) (729 . 732) (#("syn" 0 3 (fontified t)) . -729) (undo-tree-id1689 . -3) (undo-tree-id1690 . -3) (729 . 732) (#("sy" 0 2 (fontified t)) . -729) (undo-tree-id1691 . -2) (729 . 731) (#("sy" 0 2 (fontified t)) . -729) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (729 . 731) (#("s" 0 1 (fontified t)) . -729) (undo-tree-id1694 . -1) (729 . 730) (#("s" 0 1 (fontified t)) . -729) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (728 . 730) (#("mw" 0 2 (fontified t)) . -728) (undo-tree-id1697 . -2) (728 . 730) (#("mw" 0 2 (fontified t)) . -728) (undo-tree-id1698 . -2) (undo-tree-id1699 . -2) (728 . 730) (#("m" 0 1 (fontified t)) . -728) (undo-tree-id1700 . -1) (728 . 729) (#("m" 0 1 (fontified t)) . -728) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (727 . 729) (#("ycfh" 0 4 (fontified t)) . -727) (undo-tree-id1703 . -4) (undo-tree-id1704 . -4) (727 . 731) (#("ycfh" 0 4 (fontified nil)) . -727) (727 . 731) (#("ycf" 0 3 (fontified nil)) . -727) (727 . 730) (#("ycf" 0 3 (fontified t)) . -727) (undo-tree-id1705 . -3) (undo-tree-id1706 . -3) (727 . 730) (#("yc" 0 2 (fontified t)) . -727) (undo-tree-id1707 . -2) (727 . 729) (#("yc" 0 2 (fontified t)) . -727) (undo-tree-id1708 . -2) (undo-tree-id1709 . -2) (727 . 729) (#("y" 0 1 (fontified t)) . -727) (undo-tree-id1710 . -1) (727 . 728) (#("y" 0 1 (fontified t)) . -727) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (726 . 728) (#("xyna" 0 4 (fontified t)) . -726) (undo-tree-id1713 . -4) (726 . 730) (#("xyna" 0 4 (fontified t)) . -726) (undo-tree-id1714 . -4) (undo-tree-id1715 . -4) (726 . 730) (#("xyn" 0 3 (fontified t)) . -726) (undo-tree-id1716 . -3) (726 . 729) (#("xyn" 0 3 (fontified t)) . -726) (undo-tree-id1717 . -3) (undo-tree-id1718 . -3) (726 . 729) (#("xy" 0 2 (fontified t)) . -726) (undo-tree-id1719 . -2) (726 . 728) (#("xy" 0 2 (fontified t)) . -726) (undo-tree-id1720 . -2) (undo-tree-id1721 . -2) (726 . 728) (#("x" 0 1 (fontified t)) . -726) (undo-tree-id1722 . -1) (726 . 727) (#("x" 0 1 (fontified t)) . -726) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (725 . 727) (#("c" 0 1 (fontified nil)) . -725) (725 . 726) (#("c" 0 1 (fontified nil)) . -725) (724 . 726) (#("c" 0 1 (fontified nil)) . -724) (724 . 725) (#("c" 0 1 (fontified nil)) . -724) (724 . 725) (#("c" 0 1 (fontified nil)) . -724) (724 . 725) (#("c" 0 1 (fontified t)) . -724) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (723 . 725)) nil (25281 22673 79376 0) 0 nil])
([nil nil ((733 . 734) (#("dyn" 0 3 (fontified t)) . -733) (undo-tree-id1652 . -3) (733 . 736) (#("dyn" 0 3 (fontified t)) . -733) (undo-tree-id1653 . -3) (undo-tree-id1654 . -3) (733 . 736) (#("dy" 0 2 (fontified t)) . -733) (undo-tree-id1655 . -2) (733 . 735) (#("dy" 0 2 (fontified t)) . -733) (undo-tree-id1656 . -2) (undo-tree-id1657 . -2) (733 . 735) (#("d" 0 1 (fontified t)) . -733) (undo-tree-id1658 . -1) (733 . 734) (#("d" 0 1 (fontified t)) . -733) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (732 . 734) (#("etnh" 0 4 (fontified t)) . -732) (undo-tree-id1661 . -4) (732 . 736) (#("etnh" 0 4 (fontified t)) . -732) (undo-tree-id1662 . -4) (undo-tree-id1663 . -4) (732 . 736) (#("etn" 0 3 (fontified t)) . -732) (undo-tree-id1664 . -3) (732 . 735) (#("etn" 0 3 (fontified t)) . -732) (undo-tree-id1665 . -3) (undo-tree-id1666 . -3) (732 . 735) (#("et" 0 2 (fontified t)) . -732) (undo-tree-id1667 . -2) (732 . 734) (#("et" 0 2 (fontified t)) . -732) (undo-tree-id1668 . -2) (undo-tree-id1669 . -2) (732 . 734) (#("e" 0 1 (fontified t)) . -732) (undo-tree-id1670 . -1) (732 . 733) (#("e" 0 1 (fontified t)) . -732) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (732 . 733)) nil (25281 22673 79291 0) 0 nil])
([nil nil ((#("yn" 0 2 (fontified t)) . -733) (undo-tree-id1633 . -2) (733 . 735) (#("yn" 0 2 (fontified t)) . -733) (undo-tree-id1634 . -2) (undo-tree-id1635 . -2) (733 . 735) (#("y" 0 1 (fontified t)) . -733) (undo-tree-id1636 . -1) (733 . 734) (#("y" 0 1 (fontified t)) . -733) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (733 . 734) (#("e" 0 1 (fontified t)) . -733) (undo-tree-id1639 . -1) (733 . 734) (#("e" 0 1 (fontified t)) . -733) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (733 . 734) (#("et" 0 2 (fontified t)) . -733) (undo-tree-id1642 . -2) (733 . 735) (#("et" 0 2 (fontified t)) . -733) (undo-tree-id1643 . -2) (undo-tree-id1644 . -2) (733 . 735) (#("e" 0 1 (fontified t)) . -733) (undo-tree-id1645 . -1) (733 . 734) (#("e" 0 1 (fontified t)) . -733) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (733 . 734) (#("态" 0 1 (fontified t)) . -733) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) 734) nil (25281 22673 79257 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -734) (undo-tree-id1624 . -1) (734 . 735) (#("d" 0 1 (fontified t)) . -734) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (734 . 735) (#("dy" 0 2 (fontified t)) . -734) (undo-tree-id1627 . -2) (734 . 736) (#("dy" 0 2 (fontified t)) . -734) (undo-tree-id1628 . -2) (undo-tree-id1629 . -2) (734 . 736) (#("d" 0 1 (fontified t)) . -734) (undo-tree-id1630 . -1) (734 . 735) (#("d" 0 1 (fontified t)) . -734) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (733 . 735)) nil (25281 22673 79228 0) 0 nil])
([nil nil ((#("yne" 0 3 (fontified t)) . -733) (undo-tree-id1607 . -3) (733 . 736) (#("yne" 0 3 (fontified t)) . -733) (undo-tree-id1608 . -3) (undo-tree-id1609 . -3) (733 . 736) (#("yn" 0 2 (fontified t)) . -733) (undo-tree-id1610 . -2) (undo-tree-id1611 . -2) (undo-tree-id1612 . -2) (733 . 735) (#("yn" 0 2 (fontified t)) . -733) (undo-tree-id1613 . -2) (undo-tree-id1614 . -2) (733 . 735) (#("y" 0 1 (fontified t)) . -733) (undo-tree-id1615 . -1) (733 . 734) (#("y" 0 1 (fontified t)) . -733) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (733 . 734) (#("记" 0 1 (fontified t)) . -733) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) 734) nil (25281 22673 79212 0) 0 nil])
([nil nil ((739 . 740) (#("sk" 0 2 (fontified nil)) . -739) (739 . 741) (#("sk" 0 2 (fontified t)) . -739) (undo-tree-id1582 . -2) (undo-tree-id1583 . -2) (739 . 741) (#("s" 0 1 (fontified t)) . -739) (undo-tree-id1584 . -1) (739 . 740) (#("s" 0 1 (fontified t)) . -739) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (738 . 740) (#("bn" 0 2 (fontified nil)) . -738) (738 . 740) (#("bn" 0 2 (fontified nil)) . -738) (738 . 740) (#("bn" 0 2 (fontified nil)) . -738) (738 . 740) (#("bn" 0 2 (fontified t)) . -738) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (736 . 740) (#("hw" 0 2 (fontified t)) . -736) (undo-tree-id1589 . -2) (736 . 738) (#("hw" 0 2 (fontified t)) . -736) (undo-tree-id1590 . -2) (undo-tree-id1591 . -2) (736 . 738) (#("h" 0 1 (fontified t)) . -736) (undo-tree-id1592 . -1) (736 . 737) (#("h" 0 1 (fontified t)) . -736) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (735 . 737) (#("a" 0 1 (fontified t)) . -735) (undo-tree-id1595 . -1) (735 . 736) (#("a" 0 1 (fontified t)) . -735) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (734 . 736) (#("dyn" 0 3 (fontified t)) . -734) (undo-tree-id1598 . -3) (734 . 737) (#("dyn" 0 3 (fontified t)) . -734) (undo-tree-id1599 . -3) (undo-tree-id1600 . -3) (734 . 737) (#("dy" 0 2 (fontified t)) . -734) (undo-tree-id1601 . -2) (734 . 736) (#("dy" 0 2 (fontified t)) . -734) (undo-tree-id1602 . -2) (undo-tree-id1603 . -2) (734 . 736) (#("d" 0 1 (fontified t)) . -734) (undo-tree-id1604 . -1) (734 . 735) (#("d" 0 1 (fontified t)) . -734) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (733 . 735)) nil (25281 22673 79181 0) 0 nil])
([nil nil ((#("bwf" 0 3 (fontified t)) . -738) (undo-tree-id1567 . -3) (738 . 741) (#("bwf" 0 3 (fontified t)) . -738) (undo-tree-id1568 . -3) (undo-tree-id1569 . -3) (738 . 741) (#("bw" 0 2 (fontified t)) . -738) (undo-tree-id1570 . -2) (738 . 740) (#("bw" 0 2 (fontified t)) . -738) (undo-tree-id1571 . -2) (undo-tree-id1572 . -2) (738 . 740) (#("b" 0 1 (fontified t)) . -738) (undo-tree-id1573 . -1) (738 . 739) (#("b" 0 1 (fontified t)) . -738) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (738 . 739) (#("也" 0 1 (fontified t)) . -738) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (#("可" 0 1 (fontified t)) . -739) (undo-tree-id1581 . -1) 740) nil (25281 22673 79139 0) 0 nil])
([nil nil ((748 . 749) (#("fcu" 0 3 (fontified nil)) . -748) (748 . 751) (#("fcu" 0 3 (fontified nil)) . -748) (748 . 751) (#("fcu" 0 3 (fontified nil)) . -748) (748 . 751) (#("fcu" 0 3 (fontified t)) . -748) (undo-tree-id1550 . -3) (undo-tree-id1551 . -3) (748 . 751) (#("f" 0 1 (fontified t)) . -748) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (748 . 749) (#("f" 0 1 (fontified nil)) . -748) (747 . 749) (#("f" 0 1 (fontified nil)) . -747) (747 . 748) (#("f" 0 1 (fontified nil)) . -747) (747 . 748) (#("f" 0 1 (fontified nil)) . -747) (747 . 748) (#("f" 0 1 (fontified nil)) . -747) (747 . 748) (#("f" 0 1 (fontified nil)) . -747) (747 . 748) (#("f" 0 1 (fontified t)) . -747) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (740 . 748) (#("gc" 0 2 (fontified t)) . -740) (undo-tree-id1556 . -2) (740 . 742) (#("gc" 0 2 (fontified t)) . -740) (undo-tree-id1557 . -2) (undo-tree-id1558 . -2) (740 . 742) (#("g" 0 1 (fontified t)) . -740) (undo-tree-id1559 . -1) (740 . 741) (#("g" 0 1 (fontified t)) . -740) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (739 . 741) (#("lk" 0 2 (fontified nil)) . -739) (739 . 741) (#("lk" 0 2 (fontified t)) . -739) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (739 . 741) (#("l" 0 1 (fontified t)) . -739) (undo-tree-id1564 . -1) (739 . 740) (#("l" 0 1 (fontified t)) . -739) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (738 . 740)) nil (25281 22673 79108 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 750) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (t 25281 22673 90377 750000)) nil (25281 22674 633930 0) 0 nil])
([nil nil ((800 . 801) (t 25281 22674 644691 389000)) nil (25281 22681 432486 0) 0 nil])
([nil nil ((nil fontified nil 817 . 818) (nil fontified nil 801 . 817) (801 . 818)) nil (25281 22681 432484 0) 0 nil])
([nil nil ((818 . 819)) nil (25281 22681 432478 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 828 . 829) (nil fontified nil 828 . 829) (nil fontified nil 827 . 828) (nil fontified nil 819 . 827) (819 . 829) (t 25281 22681 449871 550000)) nil (25281 22684 682776 0) 0 nil])
([nil nil ((818 . 819) (t 25281 22684 693318 531000)) nil (25281 22685 732381 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 917 . 918) (nil fontified nil 897 . 918) (nil fontified nil 892 . 897) (nil fontified nil 891 . 892) (nil fontified nil 876 . 891) (nil fontified nil 819 . 876) (819 . 918) (t 25281 22685 743229 959000)) nil (25281 22690 232307 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 918) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (t 25281 22690 242881 406000)) nil (25281 22692 422014 0) 0 nil])
([nil nil ((#("    make i386_defconfig" 0 23 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 819) (undo-tree-id1794 . -23)) nil (25281 22692 422007 0) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 819) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1)) nil (25281 22692 422001 0) 0 nil])
([nil nil ((#("    INSTALL_MOD_PATH=xxx make modules_install" 0 4 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 4 19 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 19 20 (rear-nonsticky t font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 20 25 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 25 45 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 848) (undo-tree-id1804 . -45) (t 25281 22692 432757 89000)) nil (25281 22694 394901 0) 0 nil])
([nil nil ((819 . 845) (#("    make menuconfig
    make

" 0 29 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 29 30 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block))) . 819) (undo-tree-id1798 . -29) (undo-tree-id1799 . -29) (undo-tree-id1800 . -30) (undo-tree-id1801 . -30) (undo-tree-id1802 . -29) (undo-tree-id1803 . -29) 848) nil (25281 22694 394895 0) 0 nil])
([nil nil ((844 . 845) (t 25281 22694 405773 584000)) nil (25281 22699 388122 0) 0 nil])
([nil nil ((#("
 " 0 2 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 843) (undo-tree-id1828 . -2) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -2) 845) nil (25281 22699 388120 0) 0 nil])
([nil nil ((843 . 844)) nil (25281 22699 388110 0) 0 nil])
([nil nil ((844 . 848)) nil (25281 22699 388108 0) 0 nil])
([nil nil ((819 . 857) (#("  make menuconfig
  make
make
" 0 30 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 819) (undo-tree-id1805 . -29) (undo-tree-id1806 . -25) (undo-tree-id1807 . -30) (undo-tree-id1808 . -24) (undo-tree-id1809 . -24) (undo-tree-id1810 . -24) (undo-tree-id1811 . -24) (undo-tree-id1812 . -24) (undo-tree-id1813 . -24) (undo-tree-id1814 . -24) (undo-tree-id1815 . -24) (undo-tree-id1816 . 6) (undo-tree-id1817 . -25) (undo-tree-id1818 . -25) (undo-tree-id1819 . -25) (undo-tree-id1820 . -25) (undo-tree-id1821 . -26) (undo-tree-id1822 . -27) (undo-tree-id1823 . -28) (undo-tree-id1824 . -29) (undo-tree-id1825 . -29) (undo-tree-id1826 . -29) (undo-tree-id1827 . -29) 848) nil (25281 22699 388103 0) 0 nil])
([nil nil ((856 . 857) (t 25281 22699 398690 614000)) nil (25281 22702 278824 0) 0 nil])
([nil nil ((857 . 864) (t 25281 22702 289382 88000)) nil (25281 22704 929937 0) 0 nil])
([nil nil ((864 . 865) (t 25281 22704 940563 565000)) nil (25281 22720 659875 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 878 . 879) (nil fontified nil 865 . 879) (865 . 879)) nil (25281 22720 659869 0) 0 nil])
([nil nil ((879 . 882) (t 25281 22720 671637 282000)) nil (25281 22722 201509 0) 0 nil])
([nil nil ((893 . 894) (t 25281 22722 212283 889000)) nil (25281 22724 303338 0) 0 nil])
([nil nil ((894 . 896)) nil (25281 22724 303336 0) 0 nil])
([nil nil ((896 . 897)) nil (25281 22724 303331 0) 0 nil])
([nil nil ((897 . 899) (#("  " 0 2 (fontified nil)) . 896) (undo-tree-id1835 . -2) (undo-tree-id1836 . -2) (undo-tree-id1837 . -2) (896 . 899) (#(" " 0 1 (fontified nil)) . 895) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (896 . 897) (t 25281 22724 321934 385000)) nil (25281 22746 548710 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 981 . 982) (nil fontified nil 897 . 982) (897 . 982)) nil (25281 22746 548688 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 982) (undo-tree-id2066 . -2) (t 25281 22746 559847 792000)) nil (25281 22982 604915 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -901) (undo-tree-id2015 . -1) (901 . 902) (#("y" 0 1 (fontified t)) . -901) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (901 . 902) (#("yc" 0 2 (fontified t)) . -901) (undo-tree-id2018 . -2) (901 . 903) (#("yc" 0 2 (fontified t)) . -901) (undo-tree-id2019 . -2) (undo-tree-id2020 . -2) (901 . 903) (#("y" 0 1 (fontified t)) . -901) (undo-tree-id2021 . -1) (901 . 902) (#("y" 0 1 (fontified t)) . -901) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (900 . 902) (#("xyn" 0 3 (fontified t)) . -900) (undo-tree-id2024 . -3) (900 . 903) (#("xyn" 0 3 (fontified t)) . -900) (undo-tree-id2025 . -3) (undo-tree-id2026 . -3) (900 . 903) (#("xy" 0 2 (fontified t)) . -900) (undo-tree-id2027 . -2) (900 . 902) (#("xy" 0 2 (fontified t)) . -900) (undo-tree-id2028 . -2) (undo-tree-id2029 . -2) (900 . 902) (#("x" 0 1 (fontified t)) . -900) (undo-tree-id2030 . -1) (900 . 901) (#("x" 0 1 (fontified t)) . -900) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (899 . 901) (#("dyn" 0 3 (fontified t)) . -899) (undo-tree-id2033 . -3) (899 . 902) (#("dyn" 0 3 (fontified t)) . -899) (undo-tree-id2034 . -3) (undo-tree-id2035 . -3) (899 . 902) (#("dy" 0 2 (fontified t)) . -899) (undo-tree-id2036 . -2) (899 . 901) (#("dy" 0 2 (fontified t)) . -899) (undo-tree-id2037 . -2) (undo-tree-id2038 . -2) (899 . 901) (#("d" 0 1 (fontified t)) . -899) (undo-tree-id2039 . -1) (899 . 900) (#("d" 0 1 (fontified t)) . -899) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (898 . 900) (#("geq" 0 3 (fontified t)) . -898) (undo-tree-id2042 . -3) (898 . 901) (#("geq" 0 3 (fontified t)) . -898) (undo-tree-id2043 . -3) (undo-tree-id2044 . -3) (898 . 901) (#("ge" 0 2 (fontified t)) . -898) (undo-tree-id2045 . -2) (898 . 900) (#("ge" 0 2 (fontified t)) . -898) (undo-tree-id2046 . -2) (undo-tree-id2047 . -2) (898 . 900) (#("g" 0 1 (fontified t)) . -898) (undo-tree-id2048 . -1) (898 . 899) (#("g" 0 1 (fontified t)) . -898) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (897 . 899) (#("vb" 0 2 (fontified t)) . -897) (undo-tree-id2051 . -2) (897 . 899) (#("vb" 0 2 (fontified t)) . -897) (undo-tree-id2052 . -2) (undo-tree-id2053 . -2) (897 . 899) (#("v" 0 1 (fontified t)) . -897) (undo-tree-id2054 . -1) (897 . 898) (#("v" 0 1 (fontified t)) . -897) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (896 . 898) (#("jbc" 0 3 (fontified t)) . -896) (undo-tree-id2057 . -3) (896 . 899) (#("jbc" 0 3 (fontified t)) . -896) (undo-tree-id2058 . -3) (undo-tree-id2059 . -3) (896 . 899) (#("jb" 0 2 (fontified t)) . -896) (undo-tree-id2060 . -2) (896 . 898) (#("jb" 0 2 (fontified t)) . -896) (undo-tree-id2061 . -2) (undo-tree-id2062 . -2) (896 . 898) (#("j" 0 1 (fontified t)) . -896) (undo-tree-id2063 . -1) (896 . 897) (#("j" 0 1 (fontified t)) . -896) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (895 . 897)) nil (25281 22982 604903 0) 0 nil])
([nil nil ((#("xyna" 0 4 (fontified t)) . -900) (undo-tree-id1997 . -4) (900 . 904) (#("xyna" 0 4 (fontified t)) . -900) (undo-tree-id1998 . -4) (undo-tree-id1999 . -4) (900 . 904) (#("xyn" 0 3 (fontified t)) . -900) (undo-tree-id2000 . -3) (900 . 903) (#("xyn" 0 3 (fontified t)) . -900) (undo-tree-id2001 . -3) (undo-tree-id2002 . -3) (900 . 903) (#("xy" 0 2 (fontified t)) . -900) (undo-tree-id2003 . -2) (900 . 902) (#("xy" 0 2 (fontified t)) . -900) (undo-tree-id2004 . -2) (undo-tree-id2005 . -2) (900 . 902) (#("x" 0 1 (fontified t)) . -900) (undo-tree-id2006 . -1) (900 . 901) (#("x" 0 1 (fontified t)) . -900) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (900 . 901) (#("纺" 0 1 (fontified t)) . -900) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) 901) nil (25281 22982 604821 0) 0 nil])
([nil nil ((901 . 903) (#("ycfh" 0 4 (fontified t)) . -901) (undo-tree-id1985 . -4) (901 . 905) (#("ycfh" 0 4 (fontified t)) . -901) (undo-tree-id1986 . -4) (undo-tree-id1987 . -4) (901 . 905) (#("ycf" 0 3 (fontified t)) . -901) (undo-tree-id1988 . -3) (901 . 904) (#("ycf" 0 3 (fontified t)) . -901) (undo-tree-id1989 . -3) (undo-tree-id1990 . -3) (901 . 904) (#("yc" 0 2 (fontified t)) . -901) (undo-tree-id1991 . -2) (901 . 903) (#("yc" 0 2 (fontified t)) . -901) (undo-tree-id1992 . -2) (undo-tree-id1993 . -2) (901 . 903) (#("y" 0 1 (fontified t)) . -901) (undo-tree-id1994 . -1) (901 . 902) (#("y" 0 1 (fontified t)) . -901) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (900 . 902)) nil (25281 22982 604791 0) 0 nil])
([nil nil ((913 . 915) (#("wj" 0 2 (fontified t)) . -913) (undo-tree-id1913 . -2) (undo-tree-id1914 . -2) (913 . 915) (#("w" 0 1 (fontified t)) . -913) (undo-tree-id1915 . -1) (913 . 914) (#("w" 0 1 (fontified t)) . -913) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (911 . 914) (#("uj" 0 2 (fontified t)) . -911) (undo-tree-id1918 . -2) (911 . 913) (#("uj" 0 2 (fontified t)) . -911) (undo-tree-id1919 . -2) (undo-tree-id1920 . -2) (911 . 913) (#("u" 0 1 (fontified t)) . -911) (undo-tree-id1921 . -1) (911 . 912) (#("u" 0 1 (fontified t)) . -911) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (910 . 912) (#("pwa" 0 3 (fontified t)) . -910) (undo-tree-id1924 . -3) (910 . 913) (#("pwa" 0 3 (fontified t)) . -910) (undo-tree-id1925 . -3) (undo-tree-id1926 . -3) (910 . 913) (#("pw" 0 2 (fontified t)) . -910) (undo-tree-id1927 . -2) (910 . 912) (#("pw" 0 2 (fontified t)) . -910) (undo-tree-id1928 . -2) (undo-tree-id1929 . -2) (910 . 912) (#("p" 0 1 (fontified t)) . -910) (undo-tree-id1930 . -1) (910 . 911) (#("p" 0 1 (fontified t)) . -910) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (909 . 911) (#("hko" 0 3 (fontified nil)) . -909) (909 . 912) (#("hko" 0 3 (fontified nil)) . -909) (909 . 912) (#("hko" 0 3 (fontified nil)) . -909) (909 . 912) (#("hko" 0 3 (fontified t)) . -909) (undo-tree-id1933 . -3) (undo-tree-id1934 . -3) (909 . 912) (#("h" 0 1 (fontified t)) . -909) (undo-tree-id1935 . -1) (909 . 910) (#("h" 0 1 (fontified t)) . -909) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (909 . 910) (#("h" 0 1 (fontified t)) . -909) (undo-tree-id1938 . -1) (909 . 910) (#("h" 0 1 (fontified t)) . -909) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (908 . 910) (#("g" 0 1 (fontified t)) . -908) (undo-tree-id1941 . -1) (908 . 909) (#("g" 0 1 (fontified t)) . -908) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (907 . 909) (#("xjm" 0 3 (fontified nil)) . -907) (907 . 910) (#("xjm" 0 3 (fontified t)) . -907) (undo-tree-id1944 . -3) (undo-tree-id1945 . -3) (907 . 910) (#("xj" 0 2 (fontified t)) . -907) (undo-tree-id1946 . -2) (907 . 909) (#("xj" 0 2 (fontified t)) . -907) (undo-tree-id1947 . -2) (undo-tree-id1948 . -2) (907 . 909) (#("x" 0 1 (fontified t)) . -907) (undo-tree-id1949 . -1) (907 . 908) (#("x" 0 1 (fontified t)) . -907) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (906 . 908) (#("iyve" 0 4 (fontified t)) . -906) (undo-tree-id1952 . -4) (906 . 910) (#("iyve" 0 4 (fontified t)) . -906) (undo-tree-id1953 . -4) (undo-tree-id1954 . -4) (906 . 910) (#("iyv" 0 3 (fontified t)) . -906) (undo-tree-id1955 . -3) (906 . 909) (#("iyv" 0 3 (fontified t)) . -906) (undo-tree-id1956 . -3) (undo-tree-id1957 . -3) (906 . 909) (#("iy" 0 2 (fontified t)) . -906) (undo-tree-id1958 . -2) (906 . 908) (#("iy" 0 2 (fontified t)) . -906) (undo-tree-id1959 . -2) (undo-tree-id1960 . -2) (906 . 908) (#("i" 0 1 (fontified t)) . -906) (undo-tree-id1961 . -1) (906 . 907) (#("i" 0 1 (fontified t)) . -906) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (905 . 907) (#("wfc" 0 3 (fontified t)) . -905) (undo-tree-id1964 . -3) (905 . 908) (#("wfc" 0 3 (fontified t)) . -905) (undo-tree-id1965 . -3) (undo-tree-id1966 . -3) (905 . 908) (#("wf" 0 2 (fontified t)) . -905) (undo-tree-id1967 . -2) (905 . 907) (#("wf" 0 2 (fontified t)) . -905) (undo-tree-id1968 . -2) (undo-tree-id1969 . -2) (905 . 907) (#("w" 0 1 (fontified t)) . -905) (undo-tree-id1970 . -1) (905 . 906) (#("w" 0 1 (fontified t)) . -905) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (904 . 906) (#("qd" 0 2 (fontified t)) . -904) (undo-tree-id1973 . -2) (904 . 906) (#("qd" 0 2 (fontified t)) . -904) (undo-tree-id1974 . -2) (undo-tree-id1975 . -2) (904 . 906) (#("q" 0 1 (fontified t)) . -904) (undo-tree-id1976 . -1) (904 . 905) (#("q" 0 1 (fontified t)) . -904) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (903 . 905) (#("kj" 0 2 (fontified t)) . -903) (undo-tree-id1979 . -2) (903 . 905) (#("kj" 0 2 (fontified t)) . -903) (undo-tree-id1980 . -2) (undo-tree-id1981 . -2) (903 . 905) (#("k" 0 1 (fontified t)) . -903) (undo-tree-id1982 . -1) (903 . 904) (#("k" 0 1 (fontified t)) . -903) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (903 . 904)) nil (25281 22982 604757 0) 0 nil])
([nil nil ((914 . 915) (#("j" 0 1 (fontified t)) . -914) (undo-tree-id1906 . -1) (914 . 915) (#("j" 0 1 (fontified t)) . -914) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (913 . 915) (#("wjg" 0 3 (fontified t)) . -913) (undo-tree-id1909 . -3) (913 . 916) (#("wjg" 0 3 (fontified t)) . -913) (undo-tree-id1910 . -3) (undo-tree-id1911 . -3) (913 . 916) (#("wj" 0 2 (fontified t)) . -913) (undo-tree-id1912 . -2) 915) nil (25281 22982 604642 0) 0 nil])
([nil nil ((922 . 923) (#("jghm" 0 4 (fontified nil)) . -922) (922 . 926) (#("jghm" 0 4 (fontified t)) . -922) (undo-tree-id1841 . -4) (undo-tree-id1842 . -4) (922 . 926) (#("jgh" 0 3 (fontified t)) . -922) (undo-tree-id1843 . -3) (922 . 925) (#("jgh" 0 3 (fontified t)) . -922) (undo-tree-id1844 . -3) (undo-tree-id1845 . -3) (922 . 925) (#("jg" 0 2 (fontified t)) . -922) (undo-tree-id1846 . -2) (922 . 924) (#("jg" 0 2 (fontified t)) . -922) (undo-tree-id1847 . -2) (undo-tree-id1848 . -2) (922 . 924) (#("j" 0 1 (fontified t)) . -922) (undo-tree-id1849 . -1) (922 . 923) (#("j" 0 1 (fontified t)) . -922) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (921 . 923) (#("ukd" 0 3 (fontified t)) . -921) (undo-tree-id1852 . -3) (921 . 924) (#("ukd" 0 3 (fontified t)) . -921) (undo-tree-id1853 . -3) (undo-tree-id1854 . -3) (921 . 924) (#("uk" 0 2 (fontified t)) . -921) (undo-tree-id1855 . -2) (921 . 923) (#("uk" 0 2 (fontified t)) . -921) (undo-tree-id1856 . -2) (undo-tree-id1857 . -2) (921 . 923) (#("u" 0 1 (fontified t)) . -921) (undo-tree-id1858 . -1) (921 . 922) (#("u" 0 1 (fontified t)) . -921) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (919 . 922) (#("yilai" 0 5 (fontified t)) . -919) (undo-tree-id1861 . -5) (undo-tree-id1862 . -5) (undo-tree-id1863 . -5) (undo-tree-id1864 . -5) (919 . 924) (#("yilai" 0 5 (fontified nil)) . -919) (919 . 924) (#("yila" 0 4 (fontified nil)) . -919) (919 . 923) (#("yila" 0 4 (fontified t)) . -919) (undo-tree-id1865 . -4) (undo-tree-id1866 . -4) (919 . 923) (#("yil" 0 3 (fontified t)) . -919) (undo-tree-id1867 . -3) (919 . 922) (#("yil" 0 3 (fontified t)) . -919) (undo-tree-id1868 . -3) (undo-tree-id1869 . -3) (919 . 922) (#("yi" 0 2 (fontified t)) . -919) (undo-tree-id1870 . -2) (919 . 921) (#("yi" 0 2 (fontified t)) . -919) (undo-tree-id1871 . -2) (undo-tree-id1872 . -2) (919 . 921) (#("y" 0 1 (fontified t)) . -919) (undo-tree-id1873 . -1) (919 . 920) (#("y" 0 1 (fontified t)) . -919) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (918 . 920) (#("qq" 0 2 (fontified t)) . -918) (undo-tree-id1876 . -2) (918 . 920) (#("qq" 0 2 (fontified t)) . -918) (undo-tree-id1877 . -2) (undo-tree-id1878 . -2) (918 . 920) (#("q" 0 1 (fontified t)) . -918) (undo-tree-id1879 . -1) (918 . 919) (#("q" 0 1 (fontified t)) . -918) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (917 . 919) (#("tve" 0 3 (fontified t)) . -917) (undo-tree-id1882 . -3) (917 . 920) (#("tve" 0 3 (fontified t)) . -917) (undo-tree-id1883 . -3) (undo-tree-id1884 . -3) (917 . 920) (#("tv" 0 2 (fontified t)) . -917) (undo-tree-id1885 . -2) (917 . 919) (#("tv" 0 2 (fontified t)) . -917) (undo-tree-id1886 . -2) (undo-tree-id1887 . -2) (917 . 919) (#("t" 0 1 (fontified t)) . -917) (undo-tree-id1888 . -1) (917 . 918) (#("t" 0 1 (fontified t)) . -917) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (915 . 918) (#("bimian" 0 6 (fontified t)) . -915) (undo-tree-id1891 . -6) (915 . 921) (#("bimian" 0 6 (fontified t)) . -915) (undo-tree-id1892 . -6) (undo-tree-id1893 . -6) (915 . 921) (#("bimia" 0 5 (fontified t)) . -915) (undo-tree-id1894 . -5) (915 . 920) (#("bimia" 0 5 (fontified t)) . -915) (undo-tree-id1895 . -5) (undo-tree-id1896 . -5) (915 . 920) (#("bimi" 0 4 (fontified t)) . -915) (undo-tree-id1897 . -4) (915 . 919) (#("bimi" 0 4 (fontified t)) . -915) (undo-tree-id1898 . -4) (undo-tree-id1899 . -4) (915 . 919) (#("bim" 0 3 (fontified t)) . -915) (undo-tree-id1900 . -3) (915 . 918) (#("bim" 0 3 (fontified t)) . -915) (undo-tree-id1901 . -3) (undo-tree-id1902 . -3) (915 . 918) (#("bi" 0 2 (fontified t)) . -915) (undo-tree-id1903 . -2) (915 . 917) (#("bi" 0 2 (fontified nil)) . -915) (915 . 917) (#("bi" 0 2 (fontified nil)) . -915) (915 . 917) (#("bi" 0 2 (fontified t)) . -915) (undo-tree-id1904 . -2) (undo-tree-id1905 . -2) (915 . 917)) nil (25281 22982 604613 0) 0 nil])
([nil nil ((nil fontified nil 940 . 941) (nil fontified nil 924 . 940) (924 . 941) (t 25281 22982 616500 582000)) nil (25281 22986 52053 0) 0 nil])
([nil nil ((nil fontified nil 1036 . 1037) (nil fontified nil 1035 . 1036) (nil fontified nil 1027 . 1035) (1027 . 1037) (t 25281 22986 63501 754000)) nil (25281 22988 356295 0) 0 nil])
([nil nil ((1037 . 1038) (1037 . 1039) (t 25281 22988 368131 622000)) nil (25281 22989 539320 0) 0 nil])
([nil nil ((#("* " 0 1 (fontified t face org-level-1) 1 2 (fontified t face org-level-1)) . 1038) (undo-tree-id2067 . -2) (undo-tree-id2068 . -2) (undo-tree-id2069 . -2) (t 25281 22989 550728 531000)) nil (25281 22992 598193 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1038 . 1039) (nil fontified nil 1037 . 1039) (1037 . 1039)) nil (25281 22992 598174 0) 0 nil])
([nil nil ((#("编译内核" 0 4 (fontified t font-lock-fontified t face org-level-1)) . 344) (undo-tree-id2072 . -4) (t 25281 22992 609724 572000)) nil (25281 23009 30862 0) 0 nil])
([nil nil ((344 . 345)) nil (25281 23009 30859 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t font-lock-fontified t face org-level-1)) . -344) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) 345) nil (25281 23009 30856 0) 0 nil])
([nil nil ((344 . 350)) nil (25281 23009 30840 0) 0 nil])
([nil nil ((#("- " 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . 1039) (undo-tree-id2073 . -2) (t 25281 23009 42662 653000)) nil (25281 23016 807207 0) 0 nil])
([nil nil ((1039 . 1040) (1039 . 1041) (t 25281 23016 819118 667000)) nil (25281 23018 225411 0) 0 nil])
([nil nil ((#("* " 0 1 (fontified t face org-level-1) 1 2 (fontified t face org-level-1)) . 1040) (undo-tree-id2074 . -2) (undo-tree-id2075 . -2) (undo-tree-id2076 . -2) (t 25281 23018 236977 723000)) nil (25281 23020 853854 0) 0 nil])
([nil nil ((1039 . 1041)) nil (25281 23020 853840 0) 0 nil])
([nil nil ((1041 . 1044)) nil (25281 23020 853835 0) 0 nil])
([nil nil ((#("** " 0 1 (fontified t face org-level-2) 1 3 (fontified t face org-level-2)) . 1041) (undo-tree-id2081 . -3) (undo-tree-id2082 . -3) (undo-tree-id2083 . -3) (undo-tree-id2084 . -3) (t 25281 23020 865647 998000)) nil (25281 23026 850015 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1041) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1)) nil (25281 23026 850007 0) 0 nil])
([nil nil ((1039 . 1041)) nil (25281 23026 849987 0) 0 nil])
([nil nil ((1041 . 1042) (t 25281 23026 861946 863000)) nil (25281 23041 978489 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1041) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) 1042) nil (25281 23041 978488 0) 0 nil])
([nil nil ((#("rs" 0 2 (fontified nil)) . -1041) (1041 . 1043) (#("rs" 0 2 (fontified nil)) . -1041) (1041 . 1043) (#("rs" 0 2 (fontified nil)) . -1041) (1041 . 1043) (#("rs" 0 2 (fontified t)) . -1041) (undo-tree-id2144 . -2) (undo-tree-id2145 . -2) (1041 . 1043)) nil (25281 23041 978483 0) 0 nil])
([nil nil ((1051 . 1052) (#("wv" 0 2 (fontified t)) . -1051) (undo-tree-id2118 . -2) (1051 . 1053) (#("wv" 0 2 (fontified t)) . -1051) (undo-tree-id2119 . -2) (undo-tree-id2120 . -2) (1051 . 1053) (#("w" 0 1 (fontified t)) . -1051) (undo-tree-id2121 . -1) (1051 . 1052) (#("w" 0 1 (fontified t)) . -1051) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (1049 . 1052) (#("yiban" 0 5 (fontified nil)) . -1049) (1049 . 1054) (#("yiban" 0 5 (fontified t)) . -1049) (undo-tree-id2124 . -5) (undo-tree-id2125 . -5) (1049 . 1054) (#("yiba" 0 4 (fontified t)) . -1049) (undo-tree-id2126 . -4) (1049 . 1053) (#("yiba" 0 4 (fontified t)) . -1049) (undo-tree-id2127 . -4) (undo-tree-id2128 . -4) (1049 . 1053) (#("yib" 0 3 (fontified t)) . -1049) (undo-tree-id2129 . -3) (1049 . 1052) (#("yib" 0 3 (fontified t)) . -1049) (undo-tree-id2130 . -3) (undo-tree-id2131 . -3) (1049 . 1052) (#("yi" 0 2 (fontified t)) . -1049) (undo-tree-id2132 . -2) (1049 . 1051) (#("yi" 0 2 (fontified t)) . -1049) (undo-tree-id2133 . -2) (undo-tree-id2134 . -2) (1049 . 1051) (#("y" 0 1 (fontified t)) . -1049) (undo-tree-id2135 . -1) (1049 . 1050) (#("y" 0 1 (fontified t)) . -1049) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (1042 . 1050) (#("qn" 0 2 (fontified t)) . -1042) (undo-tree-id2138 . -2) (1042 . 1044) (#("qn" 0 2 (fontified t)) . -1042) (undo-tree-id2139 . -2) (undo-tree-id2140 . -2) (1042 . 1044) (#("q" 0 1 (fontified t)) . -1042) (undo-tree-id2141 . -1) (1042 . 1043) (#("q" 0 1 (fontified t)) . -1042) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (1041 . 1043)) nil (25281 23041 978473 0) 0 nil])
([nil nil ((1054 . 1056) (#("种h" 0 2 (fontified nil)) . -1054) (1054 . 1056) (#("种h" 0 2 (fontified t)) . -1054) (undo-tree-id2089 . -2) (undo-tree-id2090 . -2) (1054 . 1056) (#("tkhh" 0 4 (fontified t)) . -1054) (undo-tree-id2091 . -4) (1054 . 1058) (#("tkhh" 0 4 (fontified t)) . -1054) (undo-tree-id2092 . -4) (undo-tree-id2093 . -4) (1054 . 1058) (#("tkh" 0 3 (fontified t)) . -1054) (undo-tree-id2094 . -3) (1054 . 1057) (#("tkh" 0 3 (fontified t)) . -1054) (undo-tree-id2095 . -3) (undo-tree-id2096 . -3) (1054 . 1057) (#("tk" 0 2 (fontified t)) . -1054) (undo-tree-id2097 . -2) (1054 . 1056) (#("tk" 0 2 (fontified t)) . -1054) (undo-tree-id2098 . -2) (undo-tree-id2099 . -2) (1054 . 1056) (#("t" 0 1 (fontified t)) . -1054) (undo-tree-id2100 . -1) (1054 . 1055) (#("t" 0 1 (fontified t)) . -1054) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (1053 . 1055) (#("gmww" 0 4 (fontified t)) . -1053) (undo-tree-id2103 . -4) (1053 . 1057) (#("gmww" 0 4 (fontified t)) . -1053) (undo-tree-id2104 . -4) (undo-tree-id2105 . -4) (1053 . 1057) (#("gmw" 0 3 (fontified t)) . -1053) (undo-tree-id2106 . -3) (1053 . 1056) (#("gmw" 0 3 (fontified t)) . -1053) (undo-tree-id2107 . -3) (undo-tree-id2108 . -3) (1053 . 1056) (#("gm" 0 2 (fontified t)) . -1053) (undo-tree-id2109 . -2) (1053 . 1055) (#("gm" 0 2 (fontified t)) . -1053) (undo-tree-id2110 . -2) (undo-tree-id2111 . -2) (1053 . 1055) (#("g" 0 1 (fontified t)) . -1053) (undo-tree-id2112 . -1) (1053 . 1054) (#("g" 0 1 (fontified t)) . -1053) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (1052 . 1054) (#("o" 0 1 (fontified t)) . -1052) (undo-tree-id2115 . -1) (1052 . 1053) (#("o" 0 1 (fontified t)) . -1052) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (1052 . 1053)) nil (25281 23041 978424 0) 0 nil])
([nil nil ((#("上" 0 1 (fontified t)) . -1055) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) 1056) nil (25281 23041 978372 0) 0 nil])
([nil nil ((1055 . 1058) (t 25281 23041 990635 87000)) nil (25281 23049 320764 0) 0 nil])
([nil nil ((1058 . 1059)) nil (25281 23049 320763 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -1056) (undo-tree-id2165 . -2) (undo-tree-id2166 . -2) (undo-tree-id2167 . -1) (#("-" 0 1 (fontified t)) . 1058) (1059 . 1061)) nil (25281 23049 320761 0) 0 nil])
([nil nil ((#("- " 0 2 (fontified t)) . 1056) (undo-tree-id2160 . -2) (undo-tree-id2161 . -2) (undo-tree-id2162 . -2) (undo-tree-id2163 . -2) (undo-tree-id2164 . -2)) nil (25281 23049 320755 0) 0 nil])
([nil nil ((1056 . 1058)) nil (25281 23049 320748 0) 0 nil])
([nil nil ((1058 . 1060)) nil (25281 23049 320746 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -1056) (undo-tree-id2155 . -1) (undo-tree-id2156 . -2) (undo-tree-id2157 . -2) (undo-tree-id2158 . -2) (undo-tree-id2159 . -2) (#("1." 0 2 (fontified t)) . 1058) (1060 . 1062)) nil (25281 23049 320744 0) 0 nil])
([nil nil ((#("- " 0 2 (fontified t)) . 1056) (undo-tree-id2150 . -2) (undo-tree-id2151 . -2) (undo-tree-id2152 . -2) (undo-tree-id2153 . -2) (undo-tree-id2154 . -2)) nil (25281 23049 320734 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1056) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1)) nil (25281 23049 320723 0) 0 nil])
([nil nil ((1056 . 1058) (t 25281 23049 332854 885000)) nil (25281 23058 377188 0) 0 nil])
([nil nil ((1058 . 1061)) nil (25281 23058 377186 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1060) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) 1061) nil (25281 23058 377183 0) 0 nil])
([nil nil ((1060 . 1067)) nil (25281 23058 377165 0) 0 nil])
([nil nil ((1067 . 1072) (t 25281 23058 389690 222000)) nil (25281 23059 388274 0) 0 nil])
([nil nil ((1056 . 1072) (#("  - 
  - ramdisk" 0 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 16 (fontified nil)) . 1056) (undo-tree-id2172 . -16) (undo-tree-id2173 . -16) (undo-tree-id2174 . -16) (undo-tree-id2175 . -16) (undo-tree-id2176 . -16) (undo-tree-id2177 . -16) (undo-tree-id2178 . -5) (1056 . 1061) (#("
    " 0 5 (fontified t)) . -1067) (undo-tree-id2179 . -5) (undo-tree-id2180 . -1) (undo-tree-id2181 . -5) (undo-tree-id2182 . -5) (undo-tree-id2183 . -5) 1072 (t 25281 23059 400526 813000)) nil (25281 23219 884461 0) 0 nil])
([nil nil ((1067 . 1072) (t 25281 23219 896606 656000)) nil (25281 23220 962076 0) 0 nil])
([nil nil ((1077 . 1081) (t 25281 23220 974616 760000)) nil (25281 23225 13361 0) 0 nil])
([nil nil ((#("disk" 0 4 (fontified t)) . 1063) (undo-tree-id2184 . -4) (t 25281 23225 25386 993000)) nil (25281 23228 634448 0) 0 nil])
([nil nil ((1063 . 1065)) nil (25281 23228 634434 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1066) (undo-tree-id2185 . -4) (undo-tree-id2186 . -4) (undo-tree-id2187 . -4) (t 25281 23228 646120 444000)) nil (25281 23244 424771 0) 0 nil])
([nil nil ((1066 . 1070)) nil (25281 23244 424754 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1115 . 1116) (nil fontified nil 1070 . 1116) (1070 . 1116) (t 25281 23244 436751 223000)) nil (25281 23340 560704 0) 0 nil])
([nil nil ((1065 . 1070) (t 25281 23340 573160 752000)) nil (25281 23343 653059 0) 0 nil])
([nil nil ((nil fontified nil 1082 . 1083) (nil fontified nil 1066 . 1082) (1066 . 1083)) nil (25281 23343 653054 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1083) (undo-tree-id2188 . -4) (t 25281 23343 665061 614000)) nil (25281 23347 103883 0) 0 nil])
([nil nil ((1134 . 1139)) nil (25281 23347 103873 0) 0 nil])
([nil nil ((nil fontified nil 1143 . 1144) (nil fontified nil 1135 . 1143) (1135 . 1144)) nil (25281 23347 103867 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line)) . 1144) (undo-tree-id2189 . -4) (t 25281 23347 116181 69000)) nil (25281 23347 696819 0) 0 nil])
([nil nil ((#("xxx" 0 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 483) (undo-tree-id2190 . -3) (undo-tree-id2191 . -3) (t 25281 23347 709053 41000)) nil (25281 23364 130429 0) 0 nil])
([nil nil ((483 . 492)) nil (25281 23364 130413 0) 0 nil])
([nil nil ((#("xxx" 0 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 887) (undo-tree-id2264 . -3) (undo-tree-id2265 . -3) (t 25281 23364 142544 514000)) nil (25281 23377 192084 0) 0 nil])
([nil nil ((887 . 890)) nil (25281 23377 192080 0) 0 nil])
([nil nil ((890 . 895)) nil (25281 23377 192079 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -887) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -888) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (#("/" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -889) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (#("r" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -890) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -891) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -892) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -893) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -894) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) 895) nil (25281 23377 192072 0) 0 nil])
([nil nil ((887 . 899)) nil (25281 23394 640100 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 483) (#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 483) (t 25281 23395 981789 723000)) nil (25281 23401 835747 0) 0 nil] [nil nil ((408 . 409) (t 25281 23377 204429 633000)) ((#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 408) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1)) (25281 23394 245225 0) 0 nil])
([nil nil ((483 . 488)) nil (25281 23401 835741 0) 0 nil])
([nil nil ((409 . 507) (#("
    make i386_defconfig
    make menuconfig
    make
    INSTALL_MOD_PATH=../rootfs make modules_install
" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1 58 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 58 73 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 73 74 (fontified nil rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 74 85 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 85 106 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 409) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -106) (undo-tree-id2272 . -1) (undo-tree-id2274 . -34)) ((409 . 515) (#("
  make i386_defconfig
  make menuconfig
  make
  INSTALL_MOD_PATH=../rootfs make modules_install
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1 50 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 50 66 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 66 98 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 409) (undo-tree-id2296 . -1)) (25281 23394 79561 0) 0 nil])
([nil nil ((483 . 484) (t 25281 23401 848255 333000)) nil (25281 23404 856796 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 409) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1)) ((409 . 410)) (25281 23394 79360 0) 0 nil] [nil nil ((409 . 410)) ((#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 409) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1)) (25281 23391 214103 0) 0 nil])
([nil nil ((496 . 497)) nil (25281 23404 856790 0) 0 nil])
nil
([nil nil ((#("m" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -409) (undo-tree-id2266 . -1) 410) ((409 . 410)) (25281 23390 777993 0) 0 nil])
([nil nil ((#("<" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 483) (undo-tree-id2305 . 1) (undo-tree-id2306 . -1) (t 25281 23404 869250 845000)) nil (25281 23409 542659 0) 0 nil])
([nil nil ((409 . 429)) ((#("make -p /home/rootfs" 0 8 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 8 20 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 409) (undo-tree-id2290 . -20) (undo-tree-id2291 . -20)) (25281 23390 574512 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 495) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1)) nil (25281 23409 542651 0) 0 nil])
([nil nil ((409 . 535) (#("make -p /home/rootfs
  make i386_defconfig
  make menuconfig
  make
  INSTALL_MOD_PATH=../rootfs make modules_install
" 0 8 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 8 20 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 20 70 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 70 86 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 86 118 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 409) (undo-tree-id2275 . -41) (undo-tree-id2276 . -21) (undo-tree-id2277 . -43) (undo-tree-id2278 . -20) (undo-tree-id2279 . -20) (undo-tree-id2280 . -41) 450 (t 25281 23387 2870 533000)) ((409 . 527) (#("  make -p /home/rootfs
  make i386_defconfig
    make menuconfig
    make
    INSTALL_MOD_PATH=../rootfs make modules_install
" 0 78 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 78 94 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 94 126 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 409) (undo-tree-id2281 . -25) (undo-tree-id2282 . -23) (undo-tree-id2283 . -45) (undo-tree-id2284 . -43) (undo-tree-id2285 . -43) (undo-tree-id2286 . -64) (undo-tree-id2287 . -45) (undo-tree-id2288 . -25) (undo-tree-id2289 . -25) (t 25281 23388 388359 48000)) (25281 23388 374734 0) 0 nil])
([nil nil ((1101 . 1102) (t 25281 23409 555248 477000)) nil (25281 23418 289722 0) 0 nil])
nil
([nil nil ((1102 . 1152) (#("
    find . | cpio -o --format=newc > ../rootfs.img
" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1 5 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 5 50 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 50 51 (fontified nil rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 51 52 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1102) (undo-tree-id2315 . -52) (undo-tree-id2316 . -1) (undo-tree-id2317 . -5) (undo-tree-id2318 . -52)) nil (25281 23418 289720 0) 0 nil])
([nil nil ((1102 . 1109)) nil (25281 23418 289713 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified nil)) . -1110) (1105 . 1111) (#("/hom" 0 4 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1105) (undo-tree-id2307 . -4) (undo-tree-id2308 . -1) (undo-tree-id2309 . -2) (undo-tree-id2310 . -2) (undo-tree-id2311 . -3) (undo-tree-id2312 . -3) (undo-tree-id2313 . -4) (undo-tree-id2314 . -4) 1109) nil (25281 23418 289710 0) 0 nil])
([nil nil ((1110 . 1118)) nil (25281 23418 289686 0) 0 nil])
([nil nil ((1102 . 1172) (#("cd /home/rootfs/
  find . | cpio -o --format=newc > ../rootfs.img
" 0 2 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 2 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3 16 (fontified t font-lock-fontified t src-block t font-lock-multiline t org-emphasis t face (org-block)) 16 66 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1102) (undo-tree-id2319 . -16) (undo-tree-id2320 . -17) (undo-tree-id2321 . -3) (undo-tree-id2322 . -3) (undo-tree-id2323 . -3) (undo-tree-id2324 . -3) (undo-tree-id2325 . -3) (undo-tree-id2326 . -3) (undo-tree-id2327 . -3) (undo-tree-id2328 . -16) (undo-tree-id2329 . -16) (undo-tree-id2330 . -16) 1118 (t 25281 23418 302373 90000)) nil (25281 23426 126636 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -1123)) nil (25281 23426 126611 0) 0 nil])
([nil nil ((1104 . 1106)) nil (25281 23426 126609 0) 0 nil])
([nil nil ((1123 . 1125)) nil (25281 23426 126604 0) 0 nil])
([nil nil ((#("ynk" 0 3 (fontified t)) . -1088) (undo-tree-id2389 . -3) (1088 . 1091) (#("ynk" 0 3 (fontified t)) . -1088) (undo-tree-id2390 . -3) (undo-tree-id2391 . -3) (1088 . 1091) (#("yn" 0 2 (fontified t)) . -1088) (undo-tree-id2392 . -2) (1088 . 1090) (#("yn" 0 2 (fontified t)) . -1088) (undo-tree-id2393 . -2) (undo-tree-id2394 . -2) (1088 . 1090) (#("y" 0 1 (fontified t)) . -1088) (undo-tree-id2395 . -1) (1088 . 1089) (#("y" 0 1 (fontified t)) . -1088) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (1083 . 1089) (t 25281 23426 139241 174000)) nil (25281 23449 143823 0) 0 nil])
([nil nil ((1089 . 1090) (#("fcl" 0 3 (fontified nil)) . -1089) (1089 . 1092) (#("fcl" 0 3 (fontified t)) . -1089) (undo-tree-id2381 . -3) (undo-tree-id2382 . -3) (1089 . 1092) (#("fc" 0 2 (fontified t)) . -1089) (undo-tree-id2383 . -2) (1089 . 1091) (#("fc" 0 2 (fontified t)) . -1089) (undo-tree-id2384 . -2) (undo-tree-id2385 . -2) (1089 . 1091) (#("f" 0 1 (fontified t)) . -1089) (undo-tree-id2386 . -1) (1089 . 1090) (#("f" 0 1 (fontified t)) . -1089) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (1088 . 1090)) nil (25281 23449 143516 0) 0 nil])
([nil nil ((#("动" 0 1 (fontified t)) . -1089) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) 1090) nil (25281 23449 143493 0) 0 nil])
([nil nil ((#("    启" 0 5 (fontified t)) . 1084) (undo-tree-id2362 . -4) (undo-tree-id2363 . -4) (undo-tree-id2364 . -4) (undo-tree-id2365 . -4) (undo-tree-id2366 . -4) (undo-tree-id2367 . -4) (undo-tree-id2368 . -5) (undo-tree-id2369 . -5) (undo-tree-id2370 . -5) (undo-tree-id2371 . -5) (undo-tree-id2372 . -5) (undo-tree-id2373 . -5) (undo-tree-id2374 . -5) (undo-tree-id2375 . -5) (undo-tree-id2376 . -5)) nil (25281 23449 143482 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1084) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1)) nil (25281 23449 143447 0) 0 nil])
([nil nil ((1183 . 1184)) nil (25281 23449 143439 0) 0 nil])
([nil nil ((#("ynk" 0 3 (fontified t)) . -1184) (undo-tree-id2350 . -3) (1184 . 1187) (#("ynk" 0 3 (fontified t)) . -1184) (undo-tree-id2351 . -3) (undo-tree-id2352 . -3) (1184 . 1187) (#("yn" 0 2 (fontified t)) . -1184) (undo-tree-id2353 . -2) (1184 . 1186) (#("yn" 0 2 (fontified t)) . -1184) (undo-tree-id2354 . -2) (undo-tree-id2355 . -2) (1184 . 1186) (#("y" 0 1 (fontified t)) . -1184) (undo-tree-id2356 . -1) (1184 . 1185) (#("y" 0 1 (fontified t)) . -1184) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (1184 . 1185)) nil (25281 23449 143435 0) 0 nil])
([nil nil ((1185 . 1186) (#("fcl" 0 3 (fontified t)) . -1185) (undo-tree-id2341 . -3) (1185 . 1188) (#("fcl" 0 3 (fontified t)) . -1185) (undo-tree-id2342 . -3) (undo-tree-id2343 . -3) (1185 . 1188) (#("fc" 0 2 (fontified t)) . -1185) (undo-tree-id2344 . -2) (1185 . 1187) (#("fc" 0 2 (fontified t)) . -1185) (undo-tree-id2345 . -2) (undo-tree-id2346 . -2) (1185 . 1187) (#("f" 0 1 (fontified t)) . -1185) (undo-tree-id2347 . -1) (1185 . 1186) (#("f" 0 1 (fontified t)) . -1185) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (1184 . 1186)) nil (25281 23449 143409 0) 0 nil])
([nil nil ((#("启动
" 0 2 (fontified t) 2 3 (fontified t)) . 1184) (undo-tree-id2331 . -3) (undo-tree-id2332 . -3) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -2) (undo-tree-id2339 . -3) (undo-tree-id2340 . -3) 1187) nil (25281 23449 143382 0) 0 nil])
([nil nil ((1083 . 1088)) nil (25281 23449 143350 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1090 . 1091) (nil fontified nil 1090 . 1091) (nil fontified nil 1088 . 1090) (1088 . 1091)) nil (25281 23449 143341 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1091) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (t 25281 23449 157896 723000)) nil (25281 23457 596850 0) 0 nil])
([nil nil ((1090 . 1095)) nil (25281 23457 596830 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1094) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) 1095) nil (25281 23457 596829 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1093) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) 1094) nil (25281 23457 596824 0) 0 nil])
([nil nil ((#("jfy" 0 3 (fontified t)) . -1090) (undo-tree-id2412 . -3) (1090 . 1093) (#("jfy" 0 3 (fontified t)) . -1090) (undo-tree-id2413 . -3) (undo-tree-id2414 . -3) (1090 . 1093) (#("jf" 0 2 (fontified t)) . -1090) (undo-tree-id2415 . -2) (1090 . 1092) (#("jf" 0 2 (fontified t)) . -1090) (undo-tree-id2416 . -2) (undo-tree-id2417 . -2) (1090 . 1092) (#("j" 0 1 (fontified t)) . -1090) (undo-tree-id2418 . -1) (1090 . 1091) (#("j" 0 1 (fontified t)) . -1090) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (1090 . 1091) (#("j" 0 1 (fontified t)) . -1090) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (#("f" 0 1 (fontified t)) . -1091) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (#("y" 0 1 (fontified t)) . -1092) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) 1093) nil (25281 23457 596812 0) 0 nil])
([nil nil ((1102 . 1103) (#("pgh" 0 3 (fontified nil)) . -1102) (1102 . 1105) (#("pgh" 0 3 (fontified nil)) . -1102) (1102 . 1105) (#("pgh" 0 3 (fontified nil)) . -1102) (1102 . 1105) (#("pgh" 0 3 (fontified nil)) . -1102) (1102 . 1105) (#("pgh" 0 3 (fontified nil)) . -1102) (1102 . 1105) (#("pgh" 0 3 (fontified nil)) . -1102) (1101 . 1105) (#("pgh" 0 3 (fontified nil)) . -1101) (1101 . 1104) (#("pgh" 0 3 (fontified nil)) . -1101) (1101 . 1104) (#("pgh" 0 3 (fontified nil)) . -1101) (1101 . 1104) (#("pgh" 0 3 (fontified nil)) . -1101) (1101 . 1104) (#("pgh" 0 3 (fontified nil)) . -1101) (1101 . 1104) (#("pgh" 0 3 (fontified t)) . -1101) (undo-tree-id2398 . -3) (undo-tree-id2399 . -3) (1091 . 1104) (#("etnh" 0 4 (fontified t)) . -1091) (undo-tree-id2400 . -4) (1091 . 1095) (#("etnh" 0 4 (fontified t)) . -1091) (undo-tree-id2401 . -4) (undo-tree-id2402 . -4) (1091 . 1095) (#("etn" 0 3 (fontified t)) . -1091) (undo-tree-id2403 . -3) (1091 . 1094) (#("etn" 0 3 (fontified t)) . -1091) (undo-tree-id2404 . -3) (undo-tree-id2405 . -3) (1091 . 1094) (#("et" 0 2 (fontified t)) . -1091) (undo-tree-id2406 . -2) (1091 . 1093) (#("et" 0 2 (fontified t)) . -1091) (undo-tree-id2407 . -2) (undo-tree-id2408 . -2) (1091 . 1093) (#("e" 0 1 (fontified t)) . -1091) (undo-tree-id2409 . -1) (1091 . 1092) (#("e" 0 1 (fontified t)) . -1091) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (1090 . 1092)) nil (25281 23457 596731 0) 0 nil])
([nil nil ((1212 . 1217) (t 25281 23457 610441 656000)) nil (25281 23514 317019 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1213) (undo-tree-id2472 . -4) (undo-tree-id2473 . -4) (undo-tree-id2474 . -4)) nil (25281 23514 317016 0) 0 nil])
([nil nil ((nil fontified nil 1229 . 1230) (nil fontified nil 1213 . 1229) (1213 . 1230)) nil (25281 23514 316999 0) 0 nil])
([nil nil ((nil fontified nil 1241 . 1242) (nil fontified nil 1233 . 1241) (1233 . 1242) (t 25281 23514 331657 154000)) nil (25281 23516 217889 0) 0 nil])
([nil nil ((1242 . 1243)) nil (25281 23516 217883 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1276 . 1277) (nil fontified nil 1231 . 1277) (1231 . 1277) (t 25281 23516 237278 515000)) nil (25281 23526 310352 0) 0 nil])
([nil nil ((1231 . 1281) (#("dd if=/dev/zero of=rootfs.ext3 bs=1M count=320

" 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 3 5 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 5 16 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 16 18 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 18 31 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 31 33 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 33 37 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 37 42 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 42 45 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 45 46 (fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 46 47 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 47 48 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1231) (undo-tree-id2475 . -47) (undo-tree-id2476 . -48) (undo-tree-id2477 . -47) (undo-tree-id2478 . -48) (undo-tree-id2479 . -46)) nil (25281 23543 29150 0) 0 nil])
([nil nil ((1279 . 1280) (t 25281 23526 323905 812000)) nil (25281 23544 511409 0) 0 nil] [nil nil ((1233 . 1235) (t 25281 23526 323905 812000)) ((#("  " 0 2 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1233) (undo-tree-id2480 . -2)) (25281 23543 28652 0) 0 nil])
([nil nil ((1280 . 1282) (t 25281 23544 524594 517000)) nil (25281 23556 492789 0) 0 nil])
nil
([nil nil ((#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1281) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) 1282) nil (25281 23556 492787 0) 0 nil])
([nil nil ((1281 . 1290)) nil (25281 23556 492781 0) 0 nil])
([nil nil ((1290 . 1301)) nil (25281 23556 492780 0) 0 nil])
([nil nil ((1301 . 1302)) nil (25281 23556 492780 0) 0 nil])
([nil nil ((1231 . 1308) (#("  dd if=/dev/zero of=rootfs.ext3 bs=1M count=320
mkfs.ext3 rootfs.ext3


" 0 5 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 5 7 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 7 18 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 18 20 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 20 33 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 33 35 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 35 39 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 39 44 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 44 73 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1231) (undo-tree-id2481 . -70) (undo-tree-id2482 . -49) (undo-tree-id2483 . -72) (undo-tree-id2484 . -49) (undo-tree-id2485 . -49) (undo-tree-id2486 . -49) (undo-tree-id2487 . -49) (undo-tree-id2488 . -50) (undo-tree-id2489 . -50) (undo-tree-id2490 . -50) (undo-tree-id2491 . -50) (undo-tree-id2492 . -50) (undo-tree-id2493 . -50) (undo-tree-id2494 . -51) (undo-tree-id2495 . -51) (undo-tree-id2496 . -52) (undo-tree-id2497 . -53) (undo-tree-id2498 . -54) (undo-tree-id2499 . -55) (undo-tree-id2500 . -56) (undo-tree-id2501 . -57) (undo-tree-id2502 . -58) (undo-tree-id2503 . -58) (undo-tree-id2504 . -58) (undo-tree-id2505 . -59) (undo-tree-id2506 . -59) (undo-tree-id2507 . -59) (undo-tree-id2508 . -60) (undo-tree-id2509 . -61) (undo-tree-id2510 . -62) (undo-tree-id2511 . -63) (undo-tree-id2512 . -64) (undo-tree-id2513 . -65) (undo-tree-id2514 . -66) (undo-tree-id2515 . -66) (undo-tree-id2516 . -66) (undo-tree-id2517 . -67) (undo-tree-id2518 . -68) (undo-tree-id2519 . -69) (undo-tree-id2520 . -70) (undo-tree-id2521 . -70) (undo-tree-id2522 . -70) (undo-tree-id2523 . -70) (undo-tree-id2524 . -70) (undo-tree-id2525 . 3) (undo-tree-id2526 . -71) 1302) nil (25281 23556 492776 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -1231)) nil (25281 23556 492709 0) 0 nil])
([nil nil ((1231 . 1235)) nil (25281 23556 492707 0) 0 nil])
([nil nil ((1282 . 1284)) nil (25281 23558 338541 0) 0 nil])
([nil nil ((1308 . 1311) (t 25281 23556 506476 29000)) nil (25281 23560 77813 0) 0 nil] [nil nil ((1231 . 1306) (#("    dd if=/dev/zero of=rootfs.ext3 bs=1M count=320
    mkfs.ext3 rootfs.ext3


" 0 4 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 4 7 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 7 9 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 9 20 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 20 22 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 22 35 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 35 37 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 37 41 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 41 46 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 46 79 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1231) (undo-tree-id2531 . -77) (undo-tree-id2532 . -77) (undo-tree-id2533 . -78) (undo-tree-id2534 . -53) (undo-tree-id2535 . -53) (undo-tree-id2536 . -77) (undo-tree-id2537 . -77) 1308 (t 25281 23556 506476 29000)) ((1231 . 1310) (#("  dd if=/dev/zero of=rootfs.ext3 bs=1M count=320
  mkfs.ext3 rootfs.ext3


" 0 5 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 5 7 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 7 18 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 18 20 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 20 33 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 33 35 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 35 39 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 39 44 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 44 75 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 1231) (undo-tree-id2538 . -73) (undo-tree-id2539 . -73) (undo-tree-id2540 . -74)) (25281 23558 337910 0) 0 nil])
([nil nil ((1311 . 1312)) nil (25281 23560 77807 0) 0 nil])
nil
([nil nil ((1312 . 1333) (t 25281 23560 91393 511000)) nil (25281 23568 764647 0) 0 nil])
([nil nil ((1333 . 1334)) nil (25281 23568 764646 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1333) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) 1334) nil (25281 23568 764644 0) 0 nil])
([nil nil ((1333 . 1337)) nil (25281 23568 764628 0) 0 nil])
([nil nil ((1337 . 1339) (t 25281 23568 778412 557000)) nil (25281 23577 551964 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1338) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) 1339) nil (25281 23577 551961 0) 0 nil])
([nil nil ((1338 . 1347)) nil (25281 23577 551945 0) 0 nil])
([nil nil ((1348 . 1352) (t 25281 23577 565454 267000)) nil (25281 23579 255869 0) 0 nil])
([nil nil ((1352 . 1368) (t 25281 23579 269704 310000)) nil (25281 23585 589005 0) 0 nil])
([nil nil ((1368 . 1379) (t 25281 23585 602718 308000)) nil (25281 23588 993471 0) 0 nil])
([nil nil ((1379 . 1380) (t 25281 23589 7604 395000)) nil (25281 23590 691250 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1380) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1)) nil (25281 23591 960332 0) 0 nil] [nil nil ((1231 . 1373) (#("    dd if=/dev/zero of=rootfs.ext3 bs=1M count=320
    mkfs.ext3 rootfs.ext3
    mount -o loop rootfs.ext3 /home/tmp
    cp /home/rootfs/* /home/tmp

" 0 4 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 4 7 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 7 9 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 9 20 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 20 22 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 22 35 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 35 37 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 37 41 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 41 46 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 46 107 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 107 116 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 116 124 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 124 139 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 139 149 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 149 150 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1231) (undo-tree-id2545 . -148) (undo-tree-id2546 . -117) (undo-tree-id2547 . -150) (undo-tree-id2548 . -148) (undo-tree-id2549 . -148) (undo-tree-id2550 . 2) (undo-tree-id2551 . -149) 1380) ((1231 . 1381) (#("  dd if=/dev/zero of=rootfs.ext3 bs=1M count=320
  mkfs.ext3 rootfs.ext3
  mount -o loop rootfs.ext3 /home/tmp
  cp /home/rootfs/* /home/tmp

" 0 5 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 5 7 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 7 18 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 18 20 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 20 33 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 33 35 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 35 39 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 39 44 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) src-block t) 44 142 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 1231) (undo-tree-id2552 . -141) (undo-tree-id2553 . -141) (undo-tree-id2554 . -142) (undo-tree-id2555 . -141) (undo-tree-id2556 . -141) (t 25281 23590 186055 927000)) (25281 23590 171638 0) 0 nil])
([nil nil ((#("ynk" 0 3 (fontified t)) . -1217) (undo-tree-id2590 . -3) (1217 . 1220) (#("ynk" 0 3 (fontified t)) . -1217) (undo-tree-id2591 . -3) (undo-tree-id2592 . -3) (1217 . 1220) (#("yn" 0 2 (fontified t)) . -1217) (undo-tree-id2593 . -2) (1217 . 1219) (#("yn" 0 2 (fontified t)) . -1217) (undo-tree-id2594 . -2) (undo-tree-id2595 . -2) (1217 . 1219) (#("y" 0 1 (fontified t)) . -1217) (undo-tree-id2596 . -1) (1217 . 1218) (#("y" 0 1 (fontified t)) . -1217) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (1212 . 1218) (t 25281 23591 974373 101000)) nil (25281 23600 177379 0) 0 nil])
nil
([nil nil ((1228 . 1229) (#("pgh" 0 3 (fontified nil)) . -1228) (1228 . 1231) (#("pgh" 0 3 (fontified nil)) . -1228) (1228 . 1231) (#("pg" 0 2 (fontified nil)) . -1228) (1228 . 1230) (#("pg" 0 2 (fontified t)) . -1228) (undo-tree-id2559 . -2) (undo-tree-id2560 . -2) (1228 . 1230) (#("p" 0 1 (fontified t)) . -1228) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (1228 . 1229) (#("p" 0 1 (fontified nil)) . -1228) (1227 . 1229) (#("p" 0 1 (fontified nil)) . -1227) (1227 . 1228) (#("p" 0 1 (fontified nil)) . -1227) (1227 . 1228) (#("p" 0 1 (fontified nil)) . -1227) (1227 . 1228) (#("p" 0 1 (fontified nil)) . -1227) (1227 . 1228) (#("p" 0 1 (fontified nil)) . -1227) (1227 . 1228) (#("p" 0 1 (fontified t)) . -1227) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (1220 . 1228) (#("etnh" 0 4 (fontified t)) . -1220) (undo-tree-id2565 . -4) (1220 . 1224) (#("etnh" 0 4 (fontified t)) . -1220) (undo-tree-id2566 . -4) (undo-tree-id2567 . -4) (1220 . 1224) (#("etn" 0 3 (fontified t)) . -1220) (undo-tree-id2568 . -3) (undo-tree-id2569 . -3) (1220 . 1223) (#("etn" 0 3 (fontified nil)) . -1220) (1220 . 1223) (#("et" 0 2 (fontified nil)) . -1220) (1220 . 1222) (#("et" 0 2 (fontified nil)) . -1220) (1220 . 1222) (#("et" 0 2 (fontified nil)) . -1220) (1220 . 1222) (#("et" 0 2 (fontified t)) . -1220) (undo-tree-id2570 . -2) (undo-tree-id2571 . -2) (1219 . 1222) (#("jfy" 0 3 (fontified t)) . -1219) (undo-tree-id2572 . -3) (1219 . 1222) (#("jfy" 0 3 (fontified t)) . -1219) (undo-tree-id2573 . -3) (undo-tree-id2574 . -3) (1219 . 1222) (#("jf" 0 2 (fontified t)) . -1219) (undo-tree-id2575 . -2) (1219 . 1221) (#("jf" 0 2 (fontified t)) . -1219) (undo-tree-id2576 . -2) (undo-tree-id2577 . -2) (1219 . 1221) (#("j" 0 1 (fontified t)) . -1219) (undo-tree-id2578 . -1) (1219 . 1220) (#("j" 0 1 (fontified t)) . -1219) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (1218 . 1220) (#("fcl" 0 3 (fontified t)) . -1218) (undo-tree-id2581 . -3) (1218 . 1221) (#("fcl" 0 3 (fontified t)) . -1218) (undo-tree-id2582 . -3) (undo-tree-id2583 . -3) (1218 . 1221) (#("fc" 0 2 (fontified t)) . -1218) (undo-tree-id2584 . -2) (1218 . 1220) (#("fc" 0 2 (fontified t)) . -1218) (undo-tree-id2585 . -2) (undo-tree-id2586 . -2) (1218 . 1220) (#("f" 0 1 (fontified t)) . -1218) (undo-tree-id2587 . -1) (1218 . 1219) (#("f" 0 1 (fontified t)) . -1218) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (1217 . 1219)) nil (25281 23600 177354 0) 0 nil])
([nil nil ((1407 . 1408) (t 25281 23600 191944 384000)) nil (25281 23603 219580 0) 0 nil])
([nil nil ((1408 . 1410)) nil (25281 23603 219578 0) 0 nil])
([nil nil ((1410 . 1411)) nil (25281 23603 219573 0) 0 nil])
([nil nil ((1410 . 1414) (t 25281 23603 233678 664000)) nil (25281 23604 260342 0) 0 nil])
([nil nil ((1414 . 1417) (t 25281 23604 274440 183000)) nil (25281 23607 59087 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1417) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1)) nil (25281 23607 59085 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 1415) (undo-tree-id2599 . -2) (undo-tree-id2600 . -2) (undo-tree-id2601 . -2) (undo-tree-id2602 . -2) (undo-tree-id2603 . -2) (undo-tree-id2604 . -2) (undo-tree-id2605 . -2)) nil (25281 23607 59080 0) 0 nil])
([nil nil ((1415 . 1418)) nil (25281 23607 59063 0) 0 nil])
([nil nil ((1418 . 1419)) nil (25281 23607 59057 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 1416) (undo-tree-id2616 . -2) (undo-tree-id2617 . -2) (undo-tree-id2618 . -2) (t 25281 23607 73050 703000)) nil (25281 23608 269802 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1416) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1)) nil (25281 23608 269796 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1415) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1)) nil (25281 23608 269788 0) 0 nil])
([nil nil ((1415 . 1418) (t 25281 23608 284186 686000)) nil (25281 23636 12015 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1611 . 1612) (nil fontified nil 1418 . 1612) (1418 . 1612)) nil (25281 23636 12013 0) 0 nil])
([nil nil ((1612 . 1613)) nil (25281 23636 12007 0) 0 nil])
([nil nil ((nil fontified nil 1431 . 1432) (nil fontified nil 1415 . 1431) (1415 . 1432) (t 25281 23636 32404 445000)) nil (25281 23639 126896 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1639 . 1640) (nil fontified nil 1639 . 1640) (nil fontified nil 1638 . 1639) (nil fontified nil 1630 . 1638) (1630 . 1640) (t 25281 23639 140763 912000)) nil (25281 23641 228709 0) 0 nil])
([nil nil ((#("x86" 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 1447) (undo-tree-id2620 . -3) (undo-tree-id2621 . -3) (t 25281 23641 243305 52000)) nil (25281 23644 503736 0) 0 nil])
([nil nil ((#("_64" 0 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1447) (undo-tree-id2619 . -3)) nil (25281 23644 503729 0) 0 nil])
([nil nil ((1447 . 1451)) nil (25281 23644 503716 0) 0 nil])
([nil nil ((1637 . 1638) (t 25281 23644 517706 494000)) nil (25281 23647 87930 0) 0 nil])
([nil nil ((1638 . 1640)) nil (25281 23647 87928 0) 0 nil])
([nil nil ((1638 . 1641) 1640) nil (25281 23647 87923 0) 0 nil])
([nil nil ((#("tfqp" 0 4 (fontified nil)) . -1640) (1640 . 1644) (#("tfqp" 0 4 (fontified nil)) . -1640) (1640 . 1644) (#("tfqp" 0 4 (fontified nil)) . -1640) (1640 . 1644) (#("tfqp" 0 4 (fontified nil)) . -1640) (1640 . 1644) (#("tfqp" 0 4 (fontified nil)) . -1640) (1640 . 1644) (#("tfqp" 0 4 (fontified nil)) . -1640) (1640 . 1644) (#("tfqp" 0 4 (fontified nil)) . -1640) (1640 . 1644) (#("tfqp" 0 4 (fontified t)) . -1640) (undo-tree-id2829 . -4) (undo-tree-id2830 . -4) (1640 . 1644) (t 25281 23647 102470 310000)) nil (25281 23668 239917 0) 0 nil])
([nil nil ((1644 . 1645) (#("r" 0 1 (fontified t)) . -1644) (undo-tree-id2799 . -1) (1644 . 1645) (#("r" 0 1 (fontified t)) . -1644) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (1643 . 1645) (#("yid" 0 3 (fontified t)) . -1643) (undo-tree-id2802 . -3) (1643 . 1646) (#("yid" 0 3 (fontified t)) . -1643) (undo-tree-id2803 . -3) (undo-tree-id2804 . -3) (1643 . 1646) (#("yi" 0 2 (fontified t)) . -1643) (undo-tree-id2805 . -2) (1643 . 1645) (#("yi" 0 2 (fontified t)) . -1643) (undo-tree-id2806 . -2) (undo-tree-id2807 . -2) (1643 . 1645) (#("y" 0 1 (fontified t)) . -1643) (undo-tree-id2808 . -1) (1643 . 1644) (#("y" 0 1 (fontified t)) . -1643) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (1642 . 1644) (#("sh" 0 2 (fontified t)) . -1642) (undo-tree-id2811 . -2) (1642 . 1644) (#("sh" 0 2 (fontified t)) . -1642) (undo-tree-id2812 . -2) (undo-tree-id2813 . -2) (1642 . 1644) (#("s" 0 1 (fontified t)) . -1642) (undo-tree-id2814 . -1) (1642 . 1643) (#("s" 0 1 (fontified t)) . -1642) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (1641 . 1643) (#("etnh" 0 4 (fontified t)) . -1641) (undo-tree-id2817 . -4) (1641 . 1645) (#("etnh" 0 4 (fontified t)) . -1641) (undo-tree-id2818 . -4) (undo-tree-id2819 . -4) (1641 . 1645) (#("etn" 0 3 (fontified t)) . -1641) (undo-tree-id2820 . -3) (1641 . 1644) (#("etn" 0 3 (fontified t)) . -1641) (undo-tree-id2821 . -3) (undo-tree-id2822 . -3) (1641 . 1644) (#("et" 0 2 (fontified t)) . -1641) (undo-tree-id2823 . -2) (1641 . 1643) (#("et" 0 2 (fontified t)) . -1641) (undo-tree-id2824 . -2) (undo-tree-id2825 . -2) (1641 . 1643) (#("e" 0 1 (fontified t)) . -1641) (undo-tree-id2826 . -1) (1641 . 1642) (#("e" 0 1 (fontified t)) . -1641) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (1640 . 1642)) nil (25281 23668 239905 0) 0 nil])
([nil nil ((1645 . 1649)) nil (25281 23668 239860 0) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -1645) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (#("e" 0 1 (fontified t)) . -1646) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (#("m" 0 1 (fontified t)) . -1647) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (#("u" 0 1 (fontified t)) . -1648) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) 1649) nil (25281 23668 239858 0) 0 nil])
([nil nil ((1645 . 1648)) nil (25281 23668 239823 0) 0 nil])
([nil nil ((#("cfy" 0 3 (fontified nil)) . -1642) (1642 . 1645) (#("cfy" 0 3 (fontified t)) . -1642) (undo-tree-id2665 . -3) (undo-tree-id2666 . -3) (1642 . 1645) (#("cf" 0 2 (fontified t)) . -1642) (undo-tree-id2667 . -2) (1642 . 1644) (#("cf" 0 2 (fontified t)) . -1642) (undo-tree-id2668 . -2) (undo-tree-id2669 . -2) (1642 . 1644) (#("c" 0 1 (fontified t)) . -1642) (undo-tree-id2670 . -1) (1642 . 1643) (#("c" 0 1 (fontified t)) . -1642) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (1642 . 1643) (#("相" 0 1 (fontified t)) . -1642) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (#("应" 0 1 (fontified t)) . -1643) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (#("的" 0 1 (fontified t)) . -1644) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (#("c" 0 1 (fontified t)) . -1645) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (#("p" 0 1 (fontified t)) . -1646) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (#("u" 0 1 (fontified t)) . -1647) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) 1648) nil (25281 23668 239815 0) 0 nil])
([nil nil ((1646 . 1648) (#("gu" 0 2 (fontified t)) . -1646) (undo-tree-id2633 . -2) (undo-tree-id2634 . -2) (1646 . 1648) (#("g" 0 1 (fontified t)) . -1646) (undo-tree-id2635 . -1) (1646 . 1647) (#("g" 0 1 (fontified t)) . -1646) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (1645 . 1647) (#("synw" 0 4 (fontified t)) . -1645) (undo-tree-id2638 . -4) (1645 . 1649) (#("synw" 0 4 (fontified t)) . -1645) (undo-tree-id2639 . -4) (undo-tree-id2640 . -4) (1645 . 1649) (#("syn" 0 3 (fontified t)) . -1645) (undo-tree-id2641 . -3) (1645 . 1648) (#("syn" 0 3 (fontified t)) . -1645) (undo-tree-id2642 . -3) (undo-tree-id2643 . -3) (1645 . 1648) (#("sy" 0 2 (fontified t)) . -1645) (undo-tree-id2644 . -2) (1645 . 1647) (#("sy" 0 2 (fontified t)) . -1645) (undo-tree-id2645 . -2) (undo-tree-id2646 . -2) (1645 . 1647) (#("s" 0 1 (fontified t)) . -1645) (undo-tree-id2647 . -1) (1645 . 1646) (#("s" 0 1 (fontified t)) . -1645) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (1644 . 1646) (#("mw" 0 2 (fontified t)) . -1644) (undo-tree-id2650 . -2) (1644 . 1646) (#("mw" 0 2 (fontified t)) . -1644) (undo-tree-id2651 . -2) (undo-tree-id2652 . -2) (1644 . 1646) (#("m" 0 1 (fontified t)) . -1644) (undo-tree-id2653 . -1) (1644 . 1645) (#("m" 0 1 (fontified t)) . -1644) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (1643 . 1645) (#("yid" 0 3 (fontified t)) . -1643) (undo-tree-id2656 . -3) (1643 . 1646) (#("yid" 0 3 (fontified t)) . -1643) (undo-tree-id2657 . -3) (undo-tree-id2658 . -3) (1643 . 1646) (#("yi" 0 2 (fontified t)) . -1643) (undo-tree-id2659 . -2) (1643 . 1645) (#("yi" 0 2 (fontified t)) . -1643) (undo-tree-id2660 . -2) (undo-tree-id2661 . -2) (1643 . 1645) (#("y" 0 1 (fontified t)) . -1643) (undo-tree-id2662 . -1) (1643 . 1644) (#("y" 0 1 (fontified t)) . -1643) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (1642 . 1644)) nil (25281 23668 239673 0) 0 nil])
([nil nil ((1648 . 1653) (#("r" 0 1 (fontified t)) . -1648) (undo-tree-id2622 . -1) (1648 . 1649) (#("r" 0 1 (fontified t)) . -1648) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (1647 . 1649) (#("ck" 0 2 (fontified nil)) . -1647) (1647 . 1649) (#("ck" 0 2 (fontified t)) . -1647) (undo-tree-id2625 . -2) (undo-tree-id2626 . -2) (1647 . 1649) (#("c" 0 1 (fontified t)) . -1647) (undo-tree-id2627 . -1) (1647 . 1648) (#("c" 0 1 (fontified t)) . -1647) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (1646 . 1648) (#("gu" 0 2 (fontified t)) . -1646) (undo-tree-id2630 . -2) (undo-tree-id2631 . -2) (undo-tree-id2632 . -2) 1648) nil (25281 23668 239619 0) 0 nil])
([nil nil ((#(" -s" 0 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1451) (undo-tree-id2834 . -2) (undo-tree-id2835 . -3) (t 25281 23668 254847 802000)) nil (25281 23675 422685 0) 0 nil])
([nil nil ((#(" -S" 0 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1451) (undo-tree-id2831 . -3) (undo-tree-id2832 . -2) (undo-tree-id2833 . -3)) nil (25281 23675 422677 0) 0 nil])
([nil nil ((1659 . 1661) (#("pgh" 0 3 (fontified t)) . -1659) (undo-tree-id2928 . -3) (1659 . 1662) (#("pgh" 0 3 (fontified t)) . -1659) (undo-tree-id2929 . -3) (undo-tree-id2930 . -3) (1659 . 1662) (#("pg" 0 2 (fontified t)) . -1659) (undo-tree-id2931 . -2) (1659 . 1661) (#("pg" 0 2 (fontified t)) . -1659) (undo-tree-id2932 . -2) (undo-tree-id2933 . -2) (1659 . 1661) (#("p" 0 1 (fontified t)) . -1659) (undo-tree-id2934 . -1) (1659 . 1660) (#("p" 0 1 (fontified t)) . -1659) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (1658 . 1660) (#("rxj" 0 3 (fontified t)) . -1658) (undo-tree-id2937 . -3) (1658 . 1661) (#("rxj" 0 3 (fontified t)) . -1658) (undo-tree-id2938 . -3) (undo-tree-id2939 . -3) (1658 . 1661) (#("rx" 0 2 (fontified t)) . -1658) (undo-tree-id2940 . -2) (1658 . 1660) (#("rx" 0 2 (fontified t)) . -1658) (undo-tree-id2941 . -2) (undo-tree-id2942 . -2) (1658 . 1660) (#("r" 0 1 (fontified t)) . -1658) (undo-tree-id2943 . -1) (1658 . 1659) (#("r" 0 1 (fontified t)) . -1658) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (1650 . 1659) (t 25281 23675 437307 178000)) nil (25281 23690 553819 0) 0 nil])
([nil nil ((#("mw" 0 2 (fontified t)) . -1660) (undo-tree-id2919 . -2) (1660 . 1662) (#("mw" 0 2 (fontified t)) . -1660) (undo-tree-id2920 . -2) (undo-tree-id2921 . -2) (1660 . 1662) (#("m" 0 1 (fontified t)) . -1660) (undo-tree-id2922 . -1) (1660 . 1661) (#("m" 0 1 (fontified t)) . -1660) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (1660 . 1661) (#("i" 0 1 (fontified t)) . -1660) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) 1661) nil (25281 23690 553788 0) 0 nil])
([nil nil ((1661 . 1662) (#("s" 0 1 (fontified t)) . -1661) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (1661 . 1662) (#("y" 0 1 (fontified t)) . -1661) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (1661 . 1662) (#("y" 0 1 (fontified t)) . -1661) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (1661 . 1662) (#("yn" 0 2 (fontified t)) . -1661) (undo-tree-id2907 . -2) (1661 . 1663) (#("yn" 0 2 (fontified t)) . -1661) (undo-tree-id2908 . -2) (undo-tree-id2909 . -2) (1661 . 1663) (#("yns" 0 3 (fontified t)) . -1661) (undo-tree-id2910 . -3) (1661 . 1664) (#("yns" 0 3 (fontified t)) . -1661) (undo-tree-id2911 . -3) (undo-tree-id2912 . -3) (1661 . 1664) (#("yn" 0 2 (fontified t)) . -1661) (undo-tree-id2913 . -2) (1661 . 1663) (#("yn" 0 2 (fontified t)) . -1661) (undo-tree-id2914 . -2) (undo-tree-id2915 . -2) (1661 . 1663) (#("y" 0 1 (fontified t)) . -1661) (undo-tree-id2916 . -1) (1661 . 1662) (#("y" 0 1 (fontified t)) . -1661) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (1660 . 1662)) nil (25281 23690 553770 0) 0 nil])
([nil nil ((1661 . 1669) (#("synw" 0 4 (fontified t)) . -1661) (undo-tree-id2890 . -4) (1661 . 1665) (#("synw" 0 4 (fontified t)) . -1661) (undo-tree-id2891 . -4) (undo-tree-id2892 . -4) (1661 . 1665) (#("syn" 0 3 (fontified t)) . -1661) (undo-tree-id2893 . -3) (1661 . 1664) (#("syn" 0 3 (fontified t)) . -1661) (undo-tree-id2894 . -3) (undo-tree-id2895 . -3) (1661 . 1664) (#("sy" 0 2 (fontified t)) . -1661) (undo-tree-id2896 . -2) (1661 . 1663) (#("sy" 0 2 (fontified t)) . -1661) (undo-tree-id2897 . -2) (undo-tree-id2898 . -2) (1661 . 1663) (#("s" 0 1 (fontified t)) . -1661) (undo-tree-id2899 . -1) 1662) nil (25281 23690 553737 0) 0 nil])
([nil nil ((1648 . 1672) (#("- 
- -kernel 指定内核bzImage" 0 2 (fontified nil) 2 3 (fontified nil) 3 24 (fontified nil)) . 1648) (undo-tree-id2836 . -24) (undo-tree-id2837 . -5) (undo-tree-id2838 . -6) (undo-tree-id2839 . -7) (undo-tree-id2840 . -8) (undo-tree-id2841 . -9) (undo-tree-id2842 . -10) (undo-tree-id2843 . -12) (undo-tree-id2844 . -12) (undo-tree-id2845 . -13) (undo-tree-id2846 . -13) (undo-tree-id2847 . -13) (undo-tree-id2848 . -13) (undo-tree-id2849 . -13) (undo-tree-id2850 . -13) (undo-tree-id2851 . -14) (undo-tree-id2852 . -14) (undo-tree-id2853 . -14) (undo-tree-id2854 . -14) (undo-tree-id2855 . -14) (undo-tree-id2856 . -15) (undo-tree-id2857 . -15) (undo-tree-id2858 . -15) (undo-tree-id2859 . -15) (undo-tree-id2860 . -15) (undo-tree-id2861 . -15) (undo-tree-id2862 . -15) (undo-tree-id2863 . -15) (undo-tree-id2864 . -15) (undo-tree-id2865 . -15) (undo-tree-id2866 . -15) (undo-tree-id2867 . -16) (undo-tree-id2868 . -16) (undo-tree-id2869 . -16) (undo-tree-id2870 . -16) (undo-tree-id2871 . -16) (undo-tree-id2872 . -16) (undo-tree-id2873 . -16) (undo-tree-id2874 . -16) (undo-tree-id2875 . -16) (undo-tree-id2876 . -16) (undo-tree-id2877 . -16) (undo-tree-id2878 . -16) (undo-tree-id2879 . -16) (undo-tree-id2880 . -16) (undo-tree-id2881 . -17) (undo-tree-id2882 . -18) (undo-tree-id2883 . -19) (undo-tree-id2884 . -20) (undo-tree-id2885 . -21) (undo-tree-id2886 . -22) (undo-tree-id2887 . -23) (undo-tree-id2888 . -24) (undo-tree-id2889 . -3) (1648 . 1651) 1669) nil (25281 23690 553712 0) 0 nil])
([nil nil ((1672 . 1676) (t 25281 23690 568973 944000)) nil (25281 23706 236597 0) 0 nil])
([nil nil ((1677 . 1678) (#("r" 0 1 (fontified t)) . -1677) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (1676 . 1678)) nil (25281 23706 236596 0) 0 nil])
([nil nil ((1683 . 1684) (#("r" 0 1 (fontified nil)) . -1683) (1683 . 1684) (#("r" 0 1 (fontified t)) . -1683) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (1678 . 1684) (#("pgh" 0 3 (fontified t)) . -1678) (undo-tree-id3003 . -3) (1678 . 1681) (#("pgh" 0 3 (fontified t)) . -1678) (undo-tree-id3004 . -3) (undo-tree-id3005 . -3) (1678 . 1681) (#("pg" 0 2 (fontified t)) . -1678) (undo-tree-id3006 . -2) (1678 . 1680) (#("pg" 0 2 (fontified t)) . -1678) (undo-tree-id3007 . -2) (undo-tree-id3008 . -2) (1678 . 1680) (#("p" 0 1 (fontified t)) . -1678) (undo-tree-id3009 . -1) (1678 . 1679) (#("p" 0 1 (fontified t)) . -1678) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (1677 . 1679) (#("rxj" 0 3 (fontified t)) . -1677) (undo-tree-id3012 . -3) (1677 . 1680) (#("rxj" 0 3 (fontified t)) . -1677) (undo-tree-id3013 . -3) (undo-tree-id3014 . -3) (1677 . 1680) (#("rx" 0 2 (fontified t)) . -1677) (undo-tree-id3015 . -2) (1677 . 1679) (#("rx" 0 2 (fontified t)) . -1677) (undo-tree-id3016 . -2) (undo-tree-id3017 . -2) (1677 . 1679) (#("r" 0 1 (fontified t)) . -1677) (undo-tree-id3018 . -1) 1678) nil (25281 23706 236586 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1679) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (#("i" 0 1 (fontified t)) . -1680) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (#("s" 0 1 (fontified t)) . -1681) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (#("k" 0 1 (fontified t)) . -1682) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (#("的" 0 1 (fontified t)) . -1683) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) 1684) nil (25281 23706 236555 0) 0 nil])
([nil nil ((1687 . 1688) (#("js" 0 2 (fontified t)) . -1687) (undo-tree-id2946 . -2) (1687 . 1689) (#("js" 0 2 (fontified t)) . -1687) (undo-tree-id2947 . -2) (undo-tree-id2948 . -2) (1687 . 1689) (#("j" 0 1 (fontified t)) . -1687) (undo-tree-id2949 . -1) (1687 . 1688) (#("j" 0 1 (fontified t)) . -1687) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (1686 . 1688) (#("vk" 0 2 (fontified t)) . -1686) (undo-tree-id2952 . -2) (1686 . 1688) (#("vk" 0 2 (fontified t)) . -1686) (undo-tree-id2953 . -2) (undo-tree-id2954 . -2) (1686 . 1688) (#("v" 0 1 (fontified t)) . -1686) (undo-tree-id2955 . -1) (1686 . 1687) (#("v" 0 1 (fontified t)) . -1686) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (1679 . 1687)) nil (25281 23706 236490 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . -1688) (1688 . 1689) (#("j" 0 1 (fontified t)) . -1688) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (1688 . 1689) (t 25281 23706 251829 388000)) nil (25281 23712 11387 0) 0 nil])
([nil nil ((1688 . 1692)) nil (25281 23712 11383 0) 0 nil])
([nil nil ((1692 . 1696)) nil (25281 23712 11381 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1692) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (#("i" 0 1 (fontified t)) . -1693) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (#("s" 0 1 (fontified t)) . -1694) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (#("k" 0 1 (fontified t)) . -1695) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) 1696) nil (25281 23712 11378 0) 0 nil])
([nil nil ((1697 . 1698) (#("etnh" 0 4 (fontified t)) . -1697) (undo-tree-id3021 . -4) (undo-tree-id3022 . -4) (1697 . 1701) (#("etnh" 0 4 (fontified nil)) . -1697) (1697 . 1701) (#("etn" 0 3 (fontified nil)) . -1697) (1697 . 1700) (#("etn" 0 3 (fontified nil)) . -1697) (1697 . 1700) (#("etn" 0 3 (fontified nil)) . -1697) (1697 . 1700) (#("etn" 0 3 (fontified nil)) . -1697) (1697 . 1700) (#("etn" 0 3 (fontified nil)) . -1697) (1697 . 1700) (#("etn" 0 3 (fontified nil)) . -1697) (1696 . 1700) (#("etn" 0 3 (fontified nil)) . -1696) (1696 . 1699) (#("etn" 0 3 (fontified nil)) . -1696) (1695 . 1699) (#("etn" 0 3 (fontified nil)) . -1695) (1695 . 1698) (#("etn" 0 3 (fontified nil)) . -1695) (1695 . 1698) (#("etn" 0 3 (fontified nil)) . -1695) (1695 . 1698) (#("etn" 0 3 (fontified t)) . -1695) (undo-tree-id3023 . -3) (undo-tree-id3024 . -3) (1692 . 1698)) nil (25281 23712 11346 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1729 . 1730) (nil fontified nil 1698 . 1730) (1698 . 1730) (t 25281 23712 26609 385000)) nil (25281 23722 774830 0) 0 nil])
([nil nil ((#("busybox" 0 7 (fontified t)) . 1712) (undo-tree-id3048 . -7) (undo-tree-id3049 . -7) (t 25281 23722 790570 449000)) nil (25281 23729 221249 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 1712) (undo-tree-id3047 . -1)) nil (25281 23729 221240 0) 0 nil])
([nil nil ((1712 . 1715) (t 25281 23729 236294 114000)) nil (25281 23736 961493 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1712) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (#("a" 0 1 (fontified t)) . -1713) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (#("m" 0 1 (fontified t)) . -1714) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) 1715) nil (25281 23736 961487 0) 0 nil])
([nil nil ((#("img" 0 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1524) (undo-tree-id3072 . -3) (undo-tree-id3073 . -3) (t 25281 23736 976803 73000)) nil (25281 23741 784356 0) 0 nil])
([nil nil ((1524 . 1528)) nil (25281 23741 784339 0) 0 nil])
([nil nil ((1671 . 1726) (#("- 
- -hda 指定rootfs，如果是ramfs，可以用-initrd /home/rootfs.img" 0 2 (fontified nil) 2 3 (fontified nil) 3 31 (fontified nil) 31 54 (fontified nil) 54 55 (fontified nil rear-nonsticky t)) . 1671) (undo-tree-id3074 . -31) (undo-tree-id3075 . -55) (undo-tree-id3076 . -31) (undo-tree-id3077 . -55) (undo-tree-id3078 . -3) (1671 . 1674) 1723 (t 25281 23741 799600 27000)) nil (25281 23743 310461 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1529) (t 25281 23743 325981 260000)) nil (25281 23750 4598 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1731 . 1732) (nil fontified nil 1725 . 1732) (1725 . 1732)) nil (25281 23750 4593 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1739) (undo-tree-id3116 . -1) (1739 . 1740) (#("e" 0 1 (fontified t)) . -1739) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (1737 . 1740) (#("wh" 0 2 (fontified t)) . -1737) (undo-tree-id3119 . -2) (1737 . 1739) (#("wh" 0 2 (fontified t)) . -1737) (undo-tree-id3120 . -2) (undo-tree-id3121 . -2) (1737 . 1739) (#("w" 0 1 (fontified t)) . -1737) (undo-tree-id3122 . -1) (1737 . 1738) (#("w" 0 1 (fontified t)) . -1737) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (1736 . 1738) (#("g" 0 1 (fontified t)) . -1736) (undo-tree-id3125 . -1) (1736 . 1737) (#("g" 0 1 (fontified t)) . -1736) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (1735 . 1737) (#("b" 0 1 (fontified t)) . -1735) (undo-tree-id3128 . -1) (1735 . 1736) (#("b" 0 1 (fontified t)) . -1735) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (1734 . 1736) (#("pgh" 0 3 (fontified t)) . -1734) (undo-tree-id3131 . -3) (1734 . 1737) (#("pgh" 0 3 (fontified t)) . -1734) (undo-tree-id3132 . -3) (undo-tree-id3133 . -3) (1734 . 1737) (#("pg" 0 2 (fontified t)) . -1734) (undo-tree-id3134 . -2) (1734 . 1736) (#("pg" 0 2 (fontified t)) . -1734) (undo-tree-id3135 . -2) (undo-tree-id3136 . -2) (1734 . 1736) (#("p" 0 1 (fontified t)) . -1734) (undo-tree-id3137 . -1) (1734 . 1735) (#("p" 0 1 (fontified t)) . -1734) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (1733 . 1735) (#("rxj" 0 3 (fontified t)) . -1733) (undo-tree-id3140 . -3) (1733 . 1736) (#("rxj" 0 3 (fontified t)) . -1733) (undo-tree-id3141 . -3) (undo-tree-id3142 . -3) (1733 . 1736) (#("rx" 0 2 (fontified t)) . -1733) (undo-tree-id3143 . -2) (1733 . 1735) (#("rx" 0 2 (fontified t)) . -1733) (undo-tree-id3144 . -2) (undo-tree-id3145 . -2) (1733 . 1735) (#("r" 0 1 (fontified t)) . -1733) (undo-tree-id3146 . -1) (1733 . 1734) (#("r" 0 1 (fontified t)) . -1733) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (1732 . 1734) (t 25281 23750 20176 607000)) nil (25281 23757 154946 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1738) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) 1739) nil (25281 23757 154888 0) 0 nil])
([nil nil ((1747 . 1748) (#("hhu" 0 3 (fontified t)) . -1747) (undo-tree-id3079 . -3) (1747 . 1750) (#("hhu" 0 3 (fontified t)) . -1747) (undo-tree-id3080 . -3) (undo-tree-id3081 . -3) (1747 . 1750) (#("hh" 0 2 (fontified t)) . -1747) (undo-tree-id3082 . -2) (1747 . 1749) (#("hh" 0 2 (fontified t)) . -1747) (undo-tree-id3083 . -2) (undo-tree-id3084 . -2) (1747 . 1749) (#("h" 0 1 (fontified t)) . -1747) (undo-tree-id3085 . -1) (1747 . 1748) (#("h" 0 1 (fontified t)) . -1747) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (1746 . 1748) (#("mqq" 0 3 (fontified t)) . -1746) (undo-tree-id3088 . -3) (1746 . 1749) (#("mqq" 0 3 (fontified t)) . -1746) (undo-tree-id3089 . -3) (undo-tree-id3090 . -3) (1746 . 1749) (#("mq" 0 2 (fontified t)) . -1746) (undo-tree-id3091 . -2) (1746 . 1748) (#("mq" 0 2 (fontified nil)) . -1746) (1746 . 1748) (#("mq" 0 2 (fontified nil)) . -1746) (1746 . 1748) (#("mq" 0 2 (fontified t)) . -1746) (undo-tree-id3092 . -2) (undo-tree-id3093 . -2) (1745 . 1748) (#("r" 0 1 (fontified t)) . -1745) (undo-tree-id3094 . -1) (1745 . 1746) (#("r" 0 1 (fontified t)) . -1745) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (1744 . 1746) (#("gajf" 0 4 (fontified t)) . -1744) (undo-tree-id3097 . -4) (1744 . 1748) (#("gajf" 0 4 (fontified t)) . -1744) (undo-tree-id3098 . -4) (undo-tree-id3099 . -4) (1744 . 1748) (#("gaj" 0 3 (fontified t)) . -1744) (undo-tree-id3100 . -3) (1744 . 1747) (#("gaj" 0 3 (fontified t)) . -1744) (undo-tree-id3101 . -3) (undo-tree-id3102 . -3) (1744 . 1747) (#("ga" 0 2 (fontified t)) . -1744) (undo-tree-id3103 . -2) (1744 . 1746) (#("ga" 0 2 (fontified t)) . -1744) (undo-tree-id3104 . -2) (undo-tree-id3105 . -2) (1744 . 1746) (#("g" 0 1 (fontified t)) . -1744) (undo-tree-id3106 . -1) (1744 . 1745) (#("g" 0 1 (fontified t)) . -1744) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (1743 . 1745) (#("od" 0 2 (fontified t)) . -1743) (undo-tree-id3109 . -2) (1743 . 1745) (#("od" 0 2 (fontified nil)) . -1743) (1743 . 1745) (#("od" 0 2 (fontified nil)) . -1743) (1743 . 1745) (#("od" 0 2 (fontified t)) . -1743) (undo-tree-id3110 . -2) (undo-tree-id3111 . -2) (1738 . 1745)) nil (25281 23757 154870 0) 0 nil])
([nil nil ((1723 . 1751) (#("- 
- -netdev 指定了一个e1000类型的网卡" 0 2 (fontified nil) 2 3 (fontified nil) 3 5 (fontified nil) 5 11 (font-lock-fontified t src-block t fontified nil) 11 12 (font-lock-fontified t src-block t fontified nil rear-nonsticky t) 12 28 (fontified nil)) . 1723) (undo-tree-id3149 . -5) (undo-tree-id3150 . -28) (undo-tree-id3151 . -5) (undo-tree-id3152 . -13) (undo-tree-id3153 . -13) (undo-tree-id3154 . -13) (undo-tree-id3155 . -14) (undo-tree-id3156 . -14) (undo-tree-id3157 . -14) (undo-tree-id3158 . -15) (undo-tree-id3159 . -16) (undo-tree-id3160 . -17) (undo-tree-id3161 . -17) (undo-tree-id3162 . -18) (undo-tree-id3163 . -18) (undo-tree-id3164 . -18) (undo-tree-id3165 . -23) (undo-tree-id3166 . -24) (undo-tree-id3167 . -24) (undo-tree-id3168 . -24) (undo-tree-id3169 . -24) (undo-tree-id3170 . -25) (undo-tree-id3171 . -26) (undo-tree-id3172 . -26) (undo-tree-id3173 . -27) (undo-tree-id3174 . -27) (undo-tree-id3175 . -27) (undo-tree-id3176 . -28) (undo-tree-id3177 . -28) (undo-tree-id3178 . -3) (1723 . 1726) 1748 (t 25281 23757 170615 509000)) nil (25281 23757 948049 0) 0 nil])
([nil nil ((1751 . 1758) (t 25281 23757 963682 67000)) nil (25281 23788 797345 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1757) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) 1758) nil (25281 23788 797342 0) 0 nil])
([nil nil ((1757 . 1758)) nil (25281 23788 797327 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1751) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (#("o" 0 1 (fontified t)) . -1752) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (#("n" 0 1 (fontified t)) . -1753) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (#("s" 0 1 (fontified t)) . -1754) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (#("o" 0 1 (fontified t)) . -1755) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (#("l" 0 1 (fontified t)) . -1756) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (#("e" 0 1 (fontified t)) . -1757) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) 1758) nil (25281 23788 797312 0) 0 nil])
([nil nil ((1751 . 1763)) nil (25281 23788 796971 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1762) (undo-tree-id3424 . -1) 1763) nil (25281 23788 796968 0) 0 nil])
([nil nil ((1767 . 1768) (#("etnh" 0 4 (fontified t)) . -1767) (undo-tree-id3404 . -4) (1767 . 1771) (#("etnh" 0 4 (fontified t)) . -1767) (undo-tree-id3405 . -4) (undo-tree-id3406 . -4) (1767 . 1771) (#("etn" 0 3 (fontified t)) . -1767) (undo-tree-id3407 . -3) (1767 . 1770) (#("etn" 0 3 (fontified t)) . -1767) (undo-tree-id3408 . -3) (undo-tree-id3409 . -3) (1767 . 1770) (#("et" 0 2 (fontified t)) . -1767) (undo-tree-id3410 . -2) (1767 . 1769) (#("et" 0 2 (fontified t)) . -1767) (undo-tree-id3411 . -2) (undo-tree-id3412 . -2) (1767 . 1769) (#("e" 0 1 (fontified t)) . -1767) (undo-tree-id3413 . -1) (1767 . 1768) (#("e" 0 1 (fontified t)) . -1767) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (1766 . 1768) (#("c" 0 1 (fontified t)) . -1766) (undo-tree-id3416 . -1) (1766 . 1767) (#("c" 0 1 (fontified t)) . -1766) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (1765 . 1767) (#("sk" 0 2 (fontified nil)) . -1765) (1765 . 1767) (#("sk" 0 2 (fontified t)) . -1765) (undo-tree-id3419 . -2) (undo-tree-id3420 . -2) (1765 . 1767) (#("s" 0 1 (fontified t)) . -1765) (undo-tree-id3421 . -1) (1765 . 1766) (#("s" 0 1 (fontified t)) . -1765) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (1762 . 1766)) nil (25281 23788 796957 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -1767) (1767 . 1768) (#("i" 0 1 (fontified t)) . -1767) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (1767 . 1768) (#("用" 0 1 (fontified t)) . -1767) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) 1768) nil (25281 23788 796893 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1775) (undo-tree-id3355 . -1) (1775 . 1776) (#("r" 0 1 (fontified t)) . -1775) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (1774 . 1776) (#("wfc" 0 3 (fontified t)) . -1774) (undo-tree-id3358 . -3) (1774 . 1777) (#("wfc" 0 3 (fontified t)) . -1774) (undo-tree-id3359 . -3) (undo-tree-id3360 . -3) (1774 . 1777) (#("wf" 0 2 (fontified t)) . -1774) (undo-tree-id3361 . -2) (1774 . 1776) (#("wf" 0 2 (fontified t)) . -1774) (undo-tree-id3362 . -2) (undo-tree-id3363 . -2) (1774 . 1776) (#("w" 0 1 (fontified t)) . -1774) (undo-tree-id3364 . -1) (1774 . 1775) (#("w" 0 1 (fontified t)) . -1774) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (1773 . 1775) (#("synw" 0 4 (fontified nil)) . -1773) (1773 . 1777) (#("synw" 0 4 (fontified nil)) . -1773) (1773 . 1777) (#("synw" 0 4 (fontified nil)) . -1773) (1773 . 1777) (#("synw" 0 4 (fontified nil)) . -1773) (1773 . 1777) (#("synw" 0 4 (fontified nil)) . -1773) (1773 . 1777) (#("synw" 0 4 (fontified nil)) . -1773) (1773 . 1777) (#("synw" 0 4 (fontified nil)) . -1773) (1773 . 1777) (#("synw" 0 4 (fontified nil)) . -1773) (1772 . 1777) (#("synw" 0 4 (fontified nil)) . -1772) (1772 . 1776) (#("synw" 0 4 (fontified nil)) . -1772) (1772 . 1776) (#("synw" 0 4 (fontified nil)) . -1772) (1772 . 1776) (#("synw" 0 4 (fontified t)) . -1772) (undo-tree-id3367 . -4) (undo-tree-id3368 . -4) (1770 . 1776) (#("pgh" 0 3 (fontified t)) . -1770) (undo-tree-id3369 . -3) (1770 . 1773) (#("pgh" 0 3 (fontified t)) . -1770) (undo-tree-id3370 . -3) (undo-tree-id3371 . -3) (1770 . 1773) (#("pg" 0 2 (fontified t)) . -1770) (undo-tree-id3372 . -2) (1770 . 1772) (#("pg" 0 2 (fontified t)) . -1770) (undo-tree-id3373 . -2) (undo-tree-id3374 . -2) (1770 . 1772) (#("p" 0 1 (fontified t)) . -1770) (undo-tree-id3375 . -1) (1770 . 1771) (#("p" 0 1 (fontified t)) . -1770) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (1769 . 1771) (#("rxj" 0 3 (fontified nil)) . -1769) (1769 . 1772) (#("rxj" 0 3 (fontified t)) . -1769) (undo-tree-id3378 . -3) (undo-tree-id3379 . -3) (1769 . 1772) (#("rx" 0 2 (fontified t)) . -1769) (undo-tree-id3380 . -2) (1769 . 1771) (#("rx" 0 2 (fontified t)) . -1769) (undo-tree-id3381 . -2) (undo-tree-id3382 . -2) (1769 . 1771) (#("r" 0 1 (fontified t)) . -1769) (undo-tree-id3383 . -1) (1769 . 1770) (#("r" 0 1 (fontified t)) . -1769) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (1768 . 1770) (#("etnh" 0 4 (fontified t)) . -1768) (undo-tree-id3386 . -4) (1768 . 1772) (#("etnh" 0 4 (fontified t)) . -1768) (undo-tree-id3387 . -4) (undo-tree-id3388 . -4) (1768 . 1772) (#("etn" 0 3 (fontified t)) . -1768) (undo-tree-id3389 . -3) (1768 . 1771) (#("etn" 0 3 (fontified t)) . -1768) (undo-tree-id3390 . -3) (undo-tree-id3391 . -3) (1768 . 1771) (#("et" 0 2 (fontified t)) . -1768) (undo-tree-id3392 . -2) (1768 . 1770) (#("et" 0 2 (fontified t)) . -1768) (undo-tree-id3393 . -2) (undo-tree-id3394 . -2) (1768 . 1770) (#("e" 0 1 (fontified t)) . -1768) (undo-tree-id3395 . -1) (1768 . 1769) (#("e" 0 1 (fontified t)) . -1768) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (1767 . 1769)) nil (25281 23788 796859 0) 0 nil])
([nil nil ((#("thd" 0 3 (fontified t)) . -1774) (undo-tree-id3340 . -3) (1774 . 1777) (#("thd" 0 3 (fontified t)) . -1774) (undo-tree-id3341 . -3) (undo-tree-id3342 . -3) (1774 . 1777) (#("th" 0 2 (fontified t)) . -1774) (undo-tree-id3343 . -2) (1774 . 1776) (#("th" 0 2 (fontified t)) . -1774) (undo-tree-id3344 . -2) (undo-tree-id3345 . -2) (1774 . 1776) (#("t" 0 1 (fontified t)) . -1774) (undo-tree-id3346 . -1) (1774 . 1775) (#("t" 0 1 (fontified t)) . -1774) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (1774 . 1775) (#("会" 0 1 (fontified t)) . -1774) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) 1775) nil (25281 23788 796715 0) 0 nil])
([nil nil ((1774 . 1775)) nil (25281 23788 796671 0) 0 nil])
([nil nil ((#("bn" 0 2 (fontified t)) . -1774) (undo-tree-id3330 . -2) (1774 . 1776) (#("bn" 0 2 (fontified t)) . -1774) (undo-tree-id3331 . -2) (undo-tree-id3332 . -2) (1774 . 1776) (#("b" 0 1 (fontified t)) . -1774) (undo-tree-id3333 . -1) (1774 . 1775) (#("b" 0 1 (fontified t)) . -1774) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (1774 . 1775) (#("自" 0 1 (fontified t)) . -1774) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) 1775) nil (25281 23788 796667 0) 0 nil])
([nil nil ((1774 . 1775)) nil (25281 23788 796636 0) 0 nil])
([nil nil ((#("也" 0 1 (fontified t)) . -1774) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) 1775) nil (25281 23788 796633 0) 0 nil])
([nil nil ((#("bn" 0 2 (fontified nil)) . -1774) (1774 . 1776) (#("bn" 0 2 (fontified t)) . -1774) (undo-tree-id3321 . -2) (undo-tree-id3322 . -2) (1774 . 1776) (#("b" 0 1 (fontified t)) . -1774) (undo-tree-id3323 . -1) (1774 . 1775) (#("b" 0 1 (fontified t)) . -1774) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (1774 . 1775)) nil (25281 23788 796619 0) 0 nil])
([nil nil ((1775 . 1782) (#("wfc" 0 3 (fontified t)) . -1775) (undo-tree-id3312 . -3) (1775 . 1778) (#("wfc" 0 3 (fontified t)) . -1775) (undo-tree-id3313 . -3) (undo-tree-id3314 . -3) (1775 . 1778) (#("wf" 0 2 (fontified t)) . -1775) (undo-tree-id3315 . -2) (1775 . 1777) (#("wf" 0 2 (fontified t)) . -1775) (undo-tree-id3316 . -2) (undo-tree-id3317 . -2) (1775 . 1777) (#("w" 0 1 (fontified t)) . -1775) (undo-tree-id3318 . -1) (1775 . 1776) (#("w" 0 1 (fontified t)) . -1775) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (1774 . 1776)) nil (25281 23788 796598 0) 0 nil])
([nil nil ((1749 . 1785) (#("- 
- root=/dev/sda 可以不用指定，内核也会detect" 0 2 (fontified nil) 2 3 (fontified nil) 3 36 (fontified nil)) . 1749) (undo-tree-id3179 . -36) (undo-tree-id3180 . -5) (undo-tree-id3181 . -5) (undo-tree-id3182 . -5) (undo-tree-id3183 . -5) (undo-tree-id3184 . -5) (undo-tree-id3185 . -5) (undo-tree-id3186 . -5) (undo-tree-id3187 . -5) (undo-tree-id3188 . -5) (undo-tree-id3189 . -5) (undo-tree-id3190 . -5) (undo-tree-id3191 . -5) (undo-tree-id3192 . -5) (undo-tree-id3193 . -5) (undo-tree-id3194 . -5) (undo-tree-id3195 . -5) (undo-tree-id3196 . -5) (undo-tree-id3197 . -5) (undo-tree-id3198 . -5) (undo-tree-id3199 . -5) (undo-tree-id3200 . -5) (undo-tree-id3201 . -5) (undo-tree-id3202 . -5) (undo-tree-id3203 . -5) (undo-tree-id3204 . -5) (undo-tree-id3205 . -5) (undo-tree-id3206 . -5) (undo-tree-id3207 . -5) (undo-tree-id3208 . -5) (undo-tree-id3209 . -5) (undo-tree-id3210 . -6) (undo-tree-id3211 . -7) (undo-tree-id3212 . -8) (undo-tree-id3213 . -9) (undo-tree-id3214 . -10) (undo-tree-id3215 . -10) (undo-tree-id3216 . -10) (undo-tree-id3217 . -10) (undo-tree-id3218 . -11) (undo-tree-id3219 . -12) (undo-tree-id3220 . -13) (undo-tree-id3221 . -14) (undo-tree-id3222 . -15) (undo-tree-id3223 . -15) (undo-tree-id3224 . -15) (undo-tree-id3225 . -18) (undo-tree-id3226 . -18) (undo-tree-id3227 . -18) (undo-tree-id3228 . -18) (undo-tree-id3229 . -19) (undo-tree-id3230 . -19) (undo-tree-id3231 . -19) (undo-tree-id3232 . -20) (undo-tree-id3233 . -20) (undo-tree-id3234 . -21) (undo-tree-id3235 . -21) (undo-tree-id3236 . -21) (undo-tree-id3237 . -21) (undo-tree-id3238 . -21) (undo-tree-id3239 . -21) (undo-tree-id3240 . -21) (undo-tree-id3241 . -21) (undo-tree-id3242 . -21) (undo-tree-id3243 . -21) (undo-tree-id3244 . -21) (undo-tree-id3245 . -22) (undo-tree-id3246 . -22) (undo-tree-id3247 . -22) (undo-tree-id3248 . -22) (undo-tree-id3249 . -22) (undo-tree-id3250 . -22) (undo-tree-id3251 . -23) (undo-tree-id3252 . -23) (undo-tree-id3253 . -23) (undo-tree-id3254 . -23) (undo-tree-id3255 . -24) (undo-tree-id3256 . -24) (undo-tree-id3257 . -24) (undo-tree-id3258 . -24) (undo-tree-id3259 . -24) (undo-tree-id3260 . -25) (undo-tree-id3261 . -25) (undo-tree-id3262 . -25) (undo-tree-id3263 . -26) (undo-tree-id3264 . -26) (undo-tree-id3265 . -26) (undo-tree-id3266 . -26) (undo-tree-id3267 . -28) (undo-tree-id3268 . -28) (undo-tree-id3269 . -28) (undo-tree-id3270 . -28) (undo-tree-id3271 . -28) (undo-tree-id3272 . -28) (undo-tree-id3273 . -28) (undo-tree-id3274 . -28) (undo-tree-id3275 . -28) (undo-tree-id3276 . -28) (undo-tree-id3277 . -28) (undo-tree-id3278 . -28) (undo-tree-id3279 . -28) (undo-tree-id3280 . -28) (undo-tree-id3281 . -28) (undo-tree-id3282 . -28) (undo-tree-id3283 . -28) (undo-tree-id3284 . -28) (undo-tree-id3285 . -28) (undo-tree-id3286 . -28) (undo-tree-id3287 . -28) (undo-tree-id3288 . -28) (undo-tree-id3289 . -28) (undo-tree-id3290 . -28) (undo-tree-id3291 . -28) (undo-tree-id3292 . -28) (undo-tree-id3293 . -28) (undo-tree-id3294 . -28) (undo-tree-id3295 . -28) (undo-tree-id3296 . -28) (undo-tree-id3297 . -28) (undo-tree-id3298 . -29) (undo-tree-id3299 . -29) (undo-tree-id3300 . -29) (undo-tree-id3301 . -29) (undo-tree-id3302 . -30) (undo-tree-id3303 . -30) (undo-tree-id3304 . -30) (undo-tree-id3305 . -31) (undo-tree-id3306 . -32) (undo-tree-id3307 . -33) (undo-tree-id3308 . -34) (undo-tree-id3309 . -35) (undo-tree-id3310 . -36) (undo-tree-id3311 . -3) (1749 . 1752) 1782) nil (25281 23788 796555 0) 0 nil])
([nil nil ((1801 . 1803) (#("r" 0 1 (fontified t)) . -1801) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (1801 . 1802) (#("r" 0 1 (fontified nil)) . -1801) (1800 . 1802) (#("r" 0 1 (fontified nil)) . -1800) (1800 . 1801) (#("r" 0 1 (fontified nil)) . -1800) (1800 . 1801) (#("r" 0 1 (fontified nil)) . -1800) (1800 . 1801) (#("r" 0 1 (fontified nil)) . -1800) (1800 . 1801) (#("r" 0 1 (fontified nil)) . -1800) (1800 . 1801) (#("r" 0 1 (fontified nil)) . -1800) (1799 . 1801) (#("r" 0 1 (fontified nil)) . -1799) (1799 . 1800) (#("r" 0 1 (fontified nil)) . -1799) (1799 . 1800) (#("r" 0 1 (fontified nil)) . -1799) (1799 . 1800) (#("r" 0 1 (fontified nil)) . -1799) (1799 . 1800) (#("r" 0 1 (fontified nil)) . -1799) (1799 . 1800) (#("r" 0 1 (fontified t)) . -1799) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (1785 . 1800) (t 25281 23788 825451 828000)) nil (25281 23807 807404 0) 0 nil])
([nil nil ((#("lwg" 0 3 (fontified t)) . -1801) (undo-tree-id3588 . -3) (undo-tree-id3589 . -3) (undo-tree-id3590 . -3) (1801 . 1804) (#("lwg" 0 3 (fontified t)) . -1801) (undo-tree-id3591 . -3) (undo-tree-id3592 . -3) (1801 . 1804) (#("lw" 0 2 (fontified t)) . -1801) (undo-tree-id3593 . -2) (1801 . 1803) (#("lw" 0 2 (fontified t)) . -1801) (undo-tree-id3594 . -2) (undo-tree-id3595 . -2) (1801 . 1803) (#("l" 0 1 (fontified t)) . -1801) (undo-tree-id3596 . -1) (1801 . 1802) (#("l" 0 1 (fontified t)) . -1801) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (1801 . 1802) (#("c" 0 1 (fontified t)) . -1801) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (#("o" 0 1 (fontified t)) . -1802) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) 1803) nil (25281 23807 807383 0) 0 nil])
([nil nil ((1811 . 1812) (#("r" 0 1 (fontified t)) . -1811) (undo-tree-id3565 . -1) (1811 . 1812) (#("r" 0 1 (fontified t)) . -1811) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (1810 . 1812) (#("gajf" 0 4 (fontified t)) . -1810) (undo-tree-id3568 . -4) (1810 . 1814) (#("gajf" 0 4 (fontified t)) . -1810) (undo-tree-id3569 . -4) (undo-tree-id3570 . -4) (1810 . 1814) (#("gaj" 0 3 (fontified t)) . -1810) (undo-tree-id3571 . -3) (1810 . 1813) (#("gaj" 0 3 (fontified t)) . -1810) (undo-tree-id3572 . -3) (undo-tree-id3573 . -3) (1810 . 1813) (#("ga" 0 2 (fontified t)) . -1810) (undo-tree-id3574 . -2) (undo-tree-id3575 . -2) (1810 . 1812) (#("ga" 0 2 (fontified nil)) . -1810) (1810 . 1812) (#("ga" 0 2 (fontified nil)) . -1810) (1810 . 1812) (#("ga" 0 2 (fontified nil)) . -1810) (1809 . 1812) (#("ga" 0 2 (fontified nil)) . -1809) (1809 . 1811) (#("ga" 0 2 (fontified nil)) . -1809) (1809 . 1811) (#("ga" 0 2 (fontified nil)) . -1809) (1809 . 1811) (#("ga" 0 2 (fontified t)) . -1809) (undo-tree-id3576 . -2) (undo-tree-id3577 . -2) (1805 . 1811) (#("m" 0 1 (fontified t)) . -1805) (undo-tree-id3578 . -1) (1805 . 1806) (#("m" 0 1 (fontified t)) . -1805) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (1804 . 1806) (#("i" 0 1 (fontified nil)) . -1804) (1804 . 1805) (#("i" 0 1 (fontified t)) . -1804) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (1802 . 1805) (#("bm" 0 2 (fontified nil)) . -1802) (1802 . 1804) (#("bm" 0 2 (fontified t)) . -1802) (undo-tree-id3583 . -2) (undo-tree-id3584 . -2) (1802 . 1804) (#("b" 0 1 (fontified t)) . -1802) (undo-tree-id3585 . -1) (1802 . 1803) (#("b" 0 1 (fontified t)) . -1802) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (1801 . 1803)) nil (25281 23807 807351 0) 0 nil])
([nil nil ((1817 . 1818) (#("sud" 0 3 (fontified nil)) . -1817) (1817 . 1820) (#("sud" 0 3 (fontified nil)) . -1817) (1817 . 1820) (#("sud" 0 3 (fontified nil)) . -1817) (1817 . 1820) (#("sud" 0 3 (fontified nil)) . -1817) (1817 . 1820) (#("sud" 0 3 (fontified nil)) . -1817) (1817 . 1820) (#("sud" 0 3 (fontified nil)) . -1817) (1816 . 1820) (#("sud" 0 3 (fontified nil)) . -1816) (1816 . 1819) (#("sud" 0 3 (fontified nil)) . -1816) (1815 . 1819) (#("sud" 0 3 (fontified nil)) . -1815) (1815 . 1818) (#("sud" 0 3 (fontified t)) . -1815) (undo-tree-id3563 . -3) (undo-tree-id3564 . -3) (1812 . 1818)) nil (25281 23807 807306 0) 0 nil])
([nil nil ((#("lks" 0 3 (fontified t)) . -1806) (undo-tree-id3623 . -3) (1806 . 1809) (#("lks" 0 3 (fontified t)) . -1806) (undo-tree-id3624 . -3) (undo-tree-id3625 . -3) (1806 . 1809) (#("lk" 0 2 (fontified t)) . -1806) (undo-tree-id3626 . -2) (1806 . 1808) (#("lk" 0 2 (fontified t)) . -1806) (undo-tree-id3627 . -2) (undo-tree-id3628 . -2) (1806 . 1808) (#("l" 0 1 (fontified t)) . -1806) (undo-tree-id3629 . -1) (1806 . 1807) (#("l" 0 1 (fontified t)) . -1806) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (1806 . 1807) 1803 (t 25281 23807 823669 931000)) nil (25281 23811 990499 0) 0 nil])
([nil nil ((1808 . 1809) (#("r" 0 1 (fontified t)) . -1808) (undo-tree-id3611 . -1) (1808 . 1809) (#("r" 0 1 (fontified t)) . -1808) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (1807 . 1809) (#("sqc" 0 3 (fontified t)) . -1807) (undo-tree-id3614 . -3) (1807 . 1810) (#("sqc" 0 3 (fontified t)) . -1807) (undo-tree-id3615 . -3) (undo-tree-id3616 . -3) (1807 . 1810) (#("sq" 0 2 (fontified t)) . -1807) (undo-tree-id3617 . -2) (1807 . 1809) (#("sq" 0 2 (fontified t)) . -1807) (undo-tree-id3618 . -2) (undo-tree-id3619 . -2) (1807 . 1809) (#("s" 0 1 (fontified t)) . -1807) (undo-tree-id3620 . -1) (1807 . 1808) (#("s" 0 1 (fontified t)) . -1807) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (1806 . 1808)) nil (25281 23811 990459 0) 0 nil])
([nil nil ((1783 . 1824) (#("- 
- console=ttyS0 指定输出，不同架构的cpu类型的tty不一样" 0 2 (fontified nil) 2 3 (fontified nil) 3 29 (fontified nil) 29 41 (fontified nil)) . 1783) (undo-tree-id3632 . -41) (undo-tree-id3633 . -26) (undo-tree-id3634 . -26) (undo-tree-id3635 . -26) (undo-tree-id3636 . -27) (undo-tree-id3637 . -27) (undo-tree-id3638 . -27) (undo-tree-id3639 . -28) (undo-tree-id3640 . -29) (undo-tree-id3641 . -29) (undo-tree-id3642 . -41) (undo-tree-id3643 . -3) (1783 . 1786) 1821 (t 25281 23812 35355 452000)) nil (25281 23813 731105 0) 0 nil])
([nil nil ((1824 . 1830) (t 25281 23813 747585 6000)) nil (25281 23820 170238 0) 0 nil])
([nil nil ((1830 . 1833)) nil (25281 23820 170235 0) 0 nil])
([nil nil ((1829 . 1830)) nil (25281 23820 170230 0) 0 nil])
([nil nil ((1834 . 1835) (t 25281 23820 187286 374000)) nil (25281 25984 54823 0) 0 nil])
([nil nil ((#("- -nographic " 0 13 (fontified t)) . 1822) (undo-tree-id3646 . -8) (undo-tree-id3647 . -8) (undo-tree-id3648 . -12) (undo-tree-id3649 . -12) (undo-tree-id3650 . -12) (undo-tree-id3651 . -12) (undo-tree-id3652 . -12) (undo-tree-id3653 . -12) (undo-tree-id3654 . -12) (undo-tree-id3655 . -13) (undo-tree-id3656 . -13) (undo-tree-id3657 . -13) (undo-tree-id3658 . -13)) nil (25281 25984 54820 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1822) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1)) nil (25281 25984 54799 0) 0 nil])
([nil nil ((1822 . 1824) (t 25281 25984 72651 324000)) nil (25281 26003 520354 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1610)) nil (25281 26003 520353 0) 0 nil])
([nil nil ((nil fontified nil 1832 . 1833) (nil fontified nil 1823 . 1832) (1823 . 1833)) nil (25281 26003 520352 0) 0 nil])
([nil nil ((1833 . 1839)) nil (25281 26003 520351 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1838) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) 1839) nil (25281 26003 520349 0) 0 nil])
([nil nil ((#("wgkq" 0 4 (fontified t)) . -1834) (undo-tree-id3726 . -4) (1834 . 1838) (#("wgkq" 0 4 (fontified t)) . -1834) (undo-tree-id3727 . -4) (undo-tree-id3728 . -4) (1834 . 1838) (#("wgk" 0 3 (fontified t)) . -1834) (undo-tree-id3729 . -3) (1834 . 1837) (#("wgk" 0 3 (fontified t)) . -1834) (undo-tree-id3730 . -3) (undo-tree-id3731 . -3) (1834 . 1837) (#("wg" 0 2 (fontified t)) . -1834) (undo-tree-id3732 . -2) (1834 . 1836) (#("wg" 0 2 (fontified nil)) . -1834) (1834 . 1836) (#("wg" 0 2 (fontified nil)) . -1834) (1834 . 1836) (#("wg" 0 2 (fontified t)) . -1834) (undo-tree-id3733 . -2) (undo-tree-id3734 . -2) (1834 . 1836) (#("w" 0 1 (fontified t)) . -1834) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (#("g" 0 1 (fontified t)) . -1835) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (#("k" 0 1 (fontified t)) . -1836) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (#("q" 0 1 (fontified t)) . -1837) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) 1838) nil (25281 26003 520341 0) 0 nil])
([nil nil ((1835 . 1838) (#("etnh" 0 4 (fontified t)) . -1835) (undo-tree-id3716 . -4) (1835 . 1839) (#("etnh" 0 4 (fontified t)) . -1835) (undo-tree-id3717 . -4) (undo-tree-id3718 . -4) (1835 . 1839) (#("etn" 0 3 (fontified t)) . -1835) (undo-tree-id3719 . -3) (1835 . 1838) (#("etn" 0 3 (fontified t)) . -1835) (undo-tree-id3720 . -3) (undo-tree-id3721 . -3) (1835 . 1838) (#("et" 0 2 (fontified t)) . -1835) (undo-tree-id3722 . -2) (undo-tree-id3723 . -2) (1835 . 1837) (#("et" 0 2 (fontified nil)) . -1835) (1835 . 1837) (#("e" 0 1 (fontified nil)) . -1835) (1835 . 1836) (#("e" 0 1 (fontified t)) . -1835) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (1834 . 1836)) nil (25281 26003 520282 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1837) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) 1838) nil (25281 26003 520266 0) 0 nil])
([nil nil ((1837 . 1840)) nil (25281 26003 520261 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1836) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (#("e" 0 1 (fontified t)) . -1837) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (#("s" 0 1 (fontified t)) . -1838) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (#("t" 0 1 (fontified t)) . -1839) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) 1840) nil (25281 26003 520257 0) 0 nil])
([nil nil ((1841 . 1842) (#("umdj" 0 4 (fontified nil)) . -1841) (1841 . 1845) (#("umdj" 0 4 (fontified t)) . -1841) (undo-tree-id3659 . -4) (undo-tree-id3660 . -4) (1841 . 1845) (#("umd" 0 3 (fontified t)) . -1841) (undo-tree-id3661 . -3) (1841 . 1844) (#("umd" 0 3 (fontified t)) . -1841) (undo-tree-id3662 . -3) (undo-tree-id3663 . -3) (1841 . 1844) (#("um" 0 2 (fontified t)) . -1841) (undo-tree-id3664 . -2) (1841 . 1843) (#("um" 0 2 (fontified t)) . -1841) (undo-tree-id3665 . -2) (undo-tree-id3666 . -2) (1841 . 1843) (#("u" 0 1 (fontified t)) . -1841) (undo-tree-id3667 . -1) (1841 . 1842) (#("u" 0 1 (fontified t)) . -1841) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (1840 . 1842) (#("xtu" 0 3 (fontified nil)) . -1840) (1840 . 1843) (#("xtu" 0 3 (fontified t)) . -1840) (undo-tree-id3670 . -3) (undo-tree-id3671 . -3) (1840 . 1843) (#("xt" 0 2 (fontified t)) . -1840) (undo-tree-id3672 . -2) (1840 . 1842) (#("xt" 0 2 (fontified t)) . -1840) (undo-tree-id3673 . -2) (undo-tree-id3674 . -2) (1840 . 1842) (#("x" 0 1 (fontified t)) . -1840) (undo-tree-id3675 . -1) (1840 . 1841) (#("x" 0 1 (fontified t)) . -1840) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (1836 . 1841)) nil (25281 26003 520208 0) 0 nil])
([nil nil ((1842 . 1843)) nil (25281 26003 520166 0) 0 nil])
([nil nil ((1844 . 1846) (#("  " 0 2 (fontified nil)) . 1843) (undo-tree-id3772 . -2) (undo-tree-id3773 . -2) (undo-tree-id3774 . -2) (1842 . 1846) (t 25281 26003 537514 109000)) nil (25281 26004 293787 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 1844) (undo-tree-id3775 . -2) (undo-tree-id3776 . -2) (undo-tree-id3777 . -2) (t 25281 26004 310562 5000)) nil (25281 26007 920460 0) 0 nil])
([nil nil ((1844 . 1850)) nil (25281 26007 920443 0) 0 nil])
([nil nil ((1851 . 1854) (t 25281 26007 937541 376000)) nil (25281 26008 940908 0) 0 nil])
([nil nil ((1854 . 1855)) nil (25281 26008 940902 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 1852) (undo-tree-id3778 . -2) (undo-tree-id3779 . -2) (undo-tree-id3780 . -2) (t 25281 26008 958322 492000)) nil (25281 26013 842576 0) 0 nil])
([nil nil ((nil fontified nil 2066 . 2067) (nil fontified nil 2058 . 2066) (nil fontified nil 2057 . 2058) (nil fontified nil 2056 . 2057) (nil fontified nil 2046 . 2056) (nil fontified nil 2017 . 2046) (nil fontified nil 2005 . 2017) (nil fontified nil 1999 . 2005) (nil fontified nil 1981 . 1999) (nil fontified nil 1979 . 1981) (nil fontified nil 1872 . 1979) (nil fontified nil 1870 . 1872) (nil fontified nil 1869 . 1870) (nil fontified nil 1868 . 1869) (nil fontified nil 1852 . 1868) (1852 . 2067)) nil (25281 26013 842560 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1851) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (t 25281 26013 859727 874000)) nil (25281 26015 142422 0) 0 nil])
([nil nil ((1888 . 1894) (t 25281 26015 160631 324000)) nil (25281 26019 754345 0) 0 nil])
([nil nil ((2073 . 2075) (t 25281 26019 771310 261000)) nil (25281 26022 608574 0) 0 nil])
([nil nil ((2075 . 2076)) nil (25281 26022 608568 0) 0 nil])
([nil nil ((2075 . 2078) (t 25281 26022 625487 501000)) nil (25281 26041 686493 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2084) (undo-tree-id3846 . -1) (2084 . 2085) (#("t" 0 1 (fontified t)) . -2084) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (2084 . 2085) (#("tc" 0 2 (fontified t)) . -2084) (undo-tree-id3849 . -2) (2084 . 2086) (#("tc" 0 2 (fontified t)) . -2084) (undo-tree-id3850 . -2) (undo-tree-id3851 . -2) (2084 . 2086) (#("tcp" 0 3 (fontified t)) . -2084) (undo-tree-id3852 . -3) (2084 . 2087) (#("tcp" 0 3 (fontified t)) . -2084) (undo-tree-id3853 . -3) (undo-tree-id3854 . -3) (2084 . 2087) (#("tc" 0 2 (fontified t)) . -2084) (undo-tree-id3855 . -2) (2084 . 2086) (#("tc" 0 2 (fontified t)) . -2084) (undo-tree-id3856 . -2) (undo-tree-id3857 . -2) (2084 . 2086) (#("t" 0 1 (fontified t)) . -2084) (undo-tree-id3858 . -1) (2084 . 2085) (#("t" 0 1 (fontified t)) . -2084) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (2082 . 2085) (#("etnh" 0 4 (fontified t)) . -2082) (undo-tree-id3861 . -4) (2082 . 2086) (#("etnh" 0 4 (fontified t)) . -2082) (undo-tree-id3862 . -4) (undo-tree-id3863 . -4) (2082 . 2086) (#("etn" 0 3 (fontified t)) . -2082) (undo-tree-id3864 . -3) (undo-tree-id3865 . -3) (2082 . 2085) (#("etn" 0 3 (fontified nil)) . -2082) (2082 . 2085) (#("et" 0 2 (fontified nil)) . -2082) (2082 . 2084) (#("et" 0 2 (fontified t)) . -2082) (undo-tree-id3866 . -2) (undo-tree-id3867 . -2) (2082 . 2084) (#("e" 0 1 (fontified t)) . -2082) (undo-tree-id3868 . -1) (2082 . 2083) (#("e" 0 1 (fontified t)) . -2082) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (2081 . 2083) (#("ynk" 0 3 (fontified nil)) . -2081) (2081 . 2084) (#("ynk" 0 3 (fontified nil)) . -2081) (2081 . 2084) (#("ynk" 0 3 (fontified nil)) . -2081) (2081 . 2084) (#("ynk" 0 3 (fontified nil)) . -2081) (2081 . 2084) (#("ynk" 0 3 (fontified nil)) . -2081) (2081 . 2084) (#("ynk" 0 3 (fontified t)) . -2081) (undo-tree-id3871 . -3) (undo-tree-id3872 . -3) (2078 . 2084)) nil (25281 26041 686485 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2083) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) 2084) nil (25281 26041 686441 0) 0 nil])
([nil nil ((2092 . 2094) (#("jfy" 0 3 (fontified t)) . -2092) (undo-tree-id3813 . -3) (2092 . 2095) (#("jfy" 0 3 (fontified t)) . -2092) (undo-tree-id3814 . -3) (undo-tree-id3815 . -3) (2092 . 2095) (#("jf" 0 2 (fontified t)) . -2092) (undo-tree-id3816 . -2) (2092 . 2094) (#("jf" 0 2 (fontified t)) . -2092) (undo-tree-id3817 . -2) (undo-tree-id3818 . -2) (2092 . 2094) (#("j" 0 1 (fontified t)) . -2092) (undo-tree-id3819 . -1) (2092 . 2093) (#("j" 0 1 (fontified t)) . -2092) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (2091 . 2093) (#("m" 0 1 (fontified t)) . -2091) (undo-tree-id3822 . -1) (2091 . 2092) (#("m" 0 1 (fontified t)) . -2091) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (2089 . 2092) (#("kkkk" 0 4 (fontified t)) . -2089) (undo-tree-id3825 . -4) (2089 . 2093) (#("kkkk" 0 4 (fontified t)) . -2089) (undo-tree-id3826 . -4) (undo-tree-id3827 . -4) (2089 . 2093) (#("kkk" 0 3 (fontified t)) . -2089) (undo-tree-id3828 . -3) (2089 . 2092) (#("kkk" 0 3 (fontified t)) . -2089) (undo-tree-id3829 . -3) (undo-tree-id3830 . -3) (2089 . 2092) (#("kk" 0 2 (fontified t)) . -2089) (undo-tree-id3831 . -2) (2089 . 2091) (#("kk" 0 2 (fontified t)) . -2089) (undo-tree-id3832 . -2) (undo-tree-id3833 . -2) (2089 . 2091) (#("k" 0 1 (fontified t)) . -2089) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (2089 . 2090) (#("k" 0 1 (fontified nil)) . -2089) (2088 . 2090) (#("k" 0 1 (fontified nil)) . -2088) (2088 . 2089) (#("k" 0 1 (fontified nil)) . -2088) (2088 . 2089) (#("k" 0 1 (fontified nil)) . -2088) (2088 . 2089) (#("k" 0 1 (fontified nil)) . -2088) (2088 . 2089) (#("k" 0 1 (fontified nil)) . -2088) (2088 . 2089) (#("k" 0 1 (fontified nil)) . -2088) (2088 . 2089) (#("k" 0 1 (fontified nil)) . -2088) (2088 . 2089) (#("k" 0 1 (fontified t)) . -2088) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (2083 . 2089)) nil (25281 26041 686420 0) 0 nil])
([nil nil ((2099 . 2100) (#("ty" 0 2 (fontified nil)) . -2099) (2099 . 2101) (#("ty" 0 2 (fontified nil)) . -2099) (2099 . 2101) (#("ty" 0 2 (fontified nil)) . -2099) (2099 . 2101) (#("ty" 0 2 (fontified nil)) . -2099) (2098 . 2101) (#("ty" 0 2 (fontified nil)) . -2098) (2098 . 2100) (#("ty" 0 2 (fontified nil)) . -2098) (2098 . 2100) (#("ty" 0 2 (fontified nil)) . -2098) (2098 . 2100) (#("ty" 0 2 (fontified nil)) . -2098) (2098 . 2100) (#("ty" 0 2 (fontified nil)) . -2098) (2098 . 2100) (#("ty" 0 2 (fontified t)) . -2098) (undo-tree-id3787 . -2) (undo-tree-id3788 . -2) (2094 . 2100) (#("tffy" 0 4 (fontified t)) . -2094) (undo-tree-id3789 . -4) (2094 . 2098) (#("tffy" 0 4 (fontified t)) . -2094) (undo-tree-id3790 . -4) (undo-tree-id3791 . -4) (2094 . 2098) (#("tff" 0 3 (fontified t)) . -2094) (undo-tree-id3792 . -3) (2094 . 2097) (#("tff" 0 3 (fontified t)) . -2094) (undo-tree-id3793 . -3) (undo-tree-id3794 . -3) (2094 . 2097) (#("tf" 0 2 (fontified t)) . -2094) (undo-tree-id3795 . -2) (2094 . 2096) (#("tf" 0 2 (fontified t)) . -2094) (undo-tree-id3796 . -2) (undo-tree-id3797 . -2) (2094 . 2096) (#("t" 0 1 (fontified t)) . -2094) (undo-tree-id3798 . -1) (2094 . 2095) (#("t" 0 1 (fontified t)) . -2094) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (2093 . 2095) (#("tffu" 0 4 (fontified t)) . -2093) (undo-tree-id3801 . -4) (2093 . 2097) (#("tffu" 0 4 (fontified t)) . -2093) (undo-tree-id3802 . -4) (undo-tree-id3803 . -4) (2093 . 2097) (#("tff" 0 3 (fontified t)) . -2093) (undo-tree-id3804 . -3) (2093 . 2096) (#("tff" 0 3 (fontified t)) . -2093) (undo-tree-id3805 . -3) (undo-tree-id3806 . -3) (2093 . 2096) (#("tf" 0 2 (fontified t)) . -2093) (undo-tree-id3807 . -2) (2093 . 2095) (#("tf" 0 2 (fontified t)) . -2093) (undo-tree-id3808 . -2) (undo-tree-id3809 . -2) (2093 . 2095) (#("t" 0 1 (fontified t)) . -2093) (undo-tree-id3810 . -1) (2093 . 2094) (#("t" 0 1 (fontified t)) . -2093) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) 2094) nil (25281 26041 686366 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2168 . 2169) (nil fontified nil 2101 . 2169) (2101 . 2169) (t 25281 26041 703924 756000)) nil (25281 26061 804719 0) 0 nil])
([nil nil ((2169 . 2170)) nil (25281 26061 804713 0) 0 nil])
([nil nil ((2101 . 2103) (t 25281 26061 830399 406000)) nil (25281 26062 710662 0) 0 nil])
([nil nil ((#("-multiarch" 0 10 (fontified t)) . 2106) (undo-tree-id3873 . -10) (t 25281 26062 729044 594000)) nil (25281 26064 759961 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -2106)) nil (25281 26064 759947 0) 0 nil])
([nil nil ((2106 . 2107) (t 25281 26064 777740 139000)) nil (25281 26065 564737 0) 0 nil])
([nil nil ((#("gdb -ex 'file vmlinux' -ex 'target remote localhost:1234'" 0 56 (fontified t) 56 57 (fontified t rear-nonsticky t)) . 2103) (undo-tree-id3874 . -57) (undo-tree-id3875 . -4) (undo-tree-id3876 . -4) (undo-tree-id3877 . -57) (undo-tree-id3878 . -57) (undo-tree-id3879 . -57) 2160 (t 25281 26065 583879 361000)) nil (25281 26068 511316 0) 0 nil])
([nil nil ((2062 . 2063)) nil (25281 26068 511299 0) 0 nil])
([nil nil ((nil fontified nil 2119 . 2120) (nil fontified nil 2063 . 2119) (2063 . 2120)) nil (25281 26068 511294 0) 0 nil])
([nil nil ((1869 . 2127) (#("  qemu-system-i386 -s -S -kernel /home/linux-source-5.10/arch/x86/boot/bzImage -hda /home/rootfs.ext3 -netdev user,id=u1 -device e1000,netdev=u1 -append \"root=/dev/sda console=ttyS0\" -nographic
gdb -ex 'file vmlinux' -ex 'target remote localhost:1234'
" 0 2 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 2 115 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 115 117 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 117 135 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 135 141 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 141 153 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 153 182 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 182 192 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 192 193 (rear-nonsticky t font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 193 194 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 194 202 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 202 216 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) src-block t) 216 221 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 221 250 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) src-block t) 250 251 (rear-nonsticky t fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) src-block t) 251 252 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 1869) (undo-tree-id3880 . -194) (undo-tree-id3881 . -194) (undo-tree-id3882 . -194) (undo-tree-id3883 . -252) (undo-tree-id3884 . -194) (undo-tree-id3885 . -251) (undo-tree-id3886 . -251) (undo-tree-id3887 . -194) (undo-tree-id3888 . -194) 2063 (t 25281 26068 528318 664000)) nil (25281 26069 449864 0) 0 nil])
([nil nil ((#("lpk" 0 3 (fontified t)) . -2167) (undo-tree-id4167 . -3) (2167 . 2170) (#("lpk" 0 3 (fontified t)) . -2167) (undo-tree-id4168 . -3) (undo-tree-id4169 . -3) (2167 . 2170) (#("lp" 0 2 (fontified t)) . -2167) (undo-tree-id4170 . -2) (2167 . 2169) (#("lp" 0 2 (fontified t)) . -2167) (undo-tree-id4171 . -2) (undo-tree-id4172 . -2) (2167 . 2169) (#("l" 0 1 (fontified t)) . -2167) (undo-tree-id4173 . -1) (2167 . 2168) (#("l" 0 1 (fontified t)) . -2167) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (2167 . 2168) (t 25281 26069 467153 340000)) nil (25281 26091 499245 0) 0 nil])
([nil nil ((2180 . 2187) (#("j" 0 1 (fontified nil)) . -2180) (2180 . 2181) (#("j" 0 1 (fontified t)) . -2180) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (2171 . 2181) (#("ujn" 0 3 (fontified t)) . -2171) (undo-tree-id4131 . -3) (2171 . 2174) (#("ujn" 0 3 (fontified t)) . -2171) (undo-tree-id4132 . -3) (undo-tree-id4133 . -3) (2171 . 2174) (#("uj" 0 2 (fontified t)) . -2171) (undo-tree-id4134 . -2) (2171 . 2173) (#("uj" 0 2 (fontified t)) . -2171) (undo-tree-id4135 . -2) (undo-tree-id4136 . -2) (2171 . 2173) (#("u" 0 1 (fontified t)) . -2171) (undo-tree-id4137 . -1) (2171 . 2172) (#("u" 0 1 (fontified t)) . -2171) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (2171 . 2172) (#("m" 0 1 (fontified t)) . -2171) (undo-tree-id4140 . -1) (2171 . 2172) (#("m" 0 1 (fontified t)) . -2171) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (2170 . 2172) (#("iy" 0 2 (fontified t)) . -2170) (undo-tree-id4143 . -2) (2170 . 2172) (#("iy" 0 2 (fontified t)) . -2170) (undo-tree-id4144 . -2) (undo-tree-id4145 . -2) (2170 . 2172) (#("i" 0 1 (fontified t)) . -2170) (undo-tree-id4146 . -1) (2170 . 2171) (#("i" 0 1 (fontified t)) . -2170) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (2169 . 2171) (#("jfy" 0 3 (fontified t)) . -2169) (undo-tree-id4149 . -3) (2169 . 2172) (#("jfy" 0 3 (fontified t)) . -2169) (undo-tree-id4150 . -3) (undo-tree-id4151 . -3) (2169 . 2172) (#("jf" 0 2 (fontified t)) . -2169) (undo-tree-id4152 . -2) (2169 . 2171) (#("jf" 0 2 (fontified t)) . -2169) (undo-tree-id4153 . -2) (undo-tree-id4154 . -2) (2169 . 2171) (#("j" 0 1 (fontified t)) . -2169) (undo-tree-id4155 . -1) (2169 . 2170) (#("j" 0 1 (fontified t)) . -2169) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (2168 . 2170) (#("ruv" 0 3 (fontified t)) . -2168) (undo-tree-id4158 . -3) (2168 . 2171) (#("ruv" 0 3 (fontified t)) . -2168) (undo-tree-id4159 . -3) (undo-tree-id4160 . -3) (2168 . 2171) (#("ru" 0 2 (fontified t)) . -2168) (undo-tree-id4161 . -2) (2168 . 2170) (#("ru" 0 2 (fontified t)) . -2168) (undo-tree-id4162 . -2) (undo-tree-id4163 . -2) (2168 . 2170) (#("r" 0 1 (fontified t)) . -2168) (undo-tree-id4164 . -1) (2168 . 2169) (#("r" 0 1 (fontified t)) . -2168) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (2167 . 2169)) nil (25281 26091 499223 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2182) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (#("m" 0 1 (fontified t)) . -2183) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (#("e" 0 1 (fontified t)) . -2184) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (#("u" 0 1 (fontified t)) . -2185) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (#("e" 0 1 (fontified t)) . -2186) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) 2187) nil (25281 26091 499161 0) 0 nil])
([nil nil ((2182 . 2189)) nil (25281 26091 499111 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2190) (undo-tree-id4080 . -1) (2190 . 2191) (#("s" 0 1 (fontified t)) . -2190) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (2189 . 2191) (#("lk" 0 2 (fontified t)) . -2189) (undo-tree-id4083 . -2) (2189 . 2191) (#("lk" 0 2 (fontified t)) . -2189) (undo-tree-id4084 . -2) (undo-tree-id4085 . -2) (2189 . 2191) (#("l" 0 1 (fontified t)) . -2189) (undo-tree-id4086 . -1) (2189 . 2190) (#("l" 0 1 (fontified t)) . -2189) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (2189 . 2190)) nil (25281 26091 499108 0) 0 nil])
([nil nil ((#("lks" 0 3 (fontified t)) . -2189) (undo-tree-id4067 . -3) (2189 . 2192) (#("lks" 0 3 (fontified t)) . -2189) (undo-tree-id4068 . -3) (undo-tree-id4069 . -3) (2189 . 2192) (#("lk" 0 2 (fontified t)) . -2189) (undo-tree-id4070 . -2) (2189 . 2191) (#("lk" 0 2 (fontified t)) . -2189) (undo-tree-id4071 . -2) (undo-tree-id4072 . -2) (2189 . 2191) (#("l" 0 1 (fontified t)) . -2189) (undo-tree-id4073 . -1) (2189 . 2190) (#("l" 0 1 (fontified t)) . -2189) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (2189 . 2190) (#("加" 0 1 (fontified t)) . -2189) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) 2190) nil (25281 26091 499092 0) 0 nil])
([nil nil ((2195 . 2197) (#("gcft" 0 4 (fontified t)) . -2195) (undo-tree-id4016 . -4) (2195 . 2199) (#("gcft" 0 4 (fontified t)) . -2195) (undo-tree-id4017 . -4) (undo-tree-id4018 . -4) (2195 . 2199) (#("gcf" 0 3 (fontified t)) . -2195) (undo-tree-id4019 . -3) (2195 . 2198) (#("gcf" 0 3 (fontified t)) . -2195) (undo-tree-id4020 . -3) (undo-tree-id4021 . -3) (2195 . 2198) (#("gc" 0 2 (fontified t)) . -2195) (undo-tree-id4022 . -2) (2195 . 2197) (#("gc" 0 2 (fontified t)) . -2195) (undo-tree-id4023 . -2) (undo-tree-id4024 . -2) (2195 . 2197) (#("g" 0 1 (fontified t)) . -2195) (undo-tree-id4025 . -1) (2195 . 2196) (#("g" 0 1 (fontified t)) . -2195) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (2194 . 2196) (#("g" 0 1 (fontified t)) . -2194) (undo-tree-id4028 . -1) (2194 . 2195) (#("g" 0 1 (fontified t)) . -2194) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (2193 . 2195) (#("rffy" 0 4 (fontified t)) . -2193) (undo-tree-id4031 . -4) (2193 . 2197) (#("rffy" 0 4 (fontified t)) . -2193) (undo-tree-id4032 . -4) (undo-tree-id4033 . -4) (2193 . 2197) (#("rff" 0 3 (fontified t)) . -2193) (undo-tree-id4034 . -3) (2193 . 2196) (#("rff" 0 3 (fontified t)) . -2193) (undo-tree-id4035 . -3) (undo-tree-id4036 . -3) (2193 . 2196) (#("rf" 0 2 (fontified t)) . -2193) (undo-tree-id4037 . -2) (2193 . 2195) (#("rf" 0 2 (fontified t)) . -2193) (undo-tree-id4038 . -2) (undo-tree-id4039 . -2) (2193 . 2195) (#("r" 0 1 (fontified t)) . -2193) (undo-tree-id4040 . -1) (2193 . 2194) (#("r" 0 1 (fontified t)) . -2193) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (2193 . 2194) (#("y" 0 1 (fontified t)) . -2193) (undo-tree-id4043 . -1) (2193 . 2194) (#("y" 0 1 (fontified t)) . -2193) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (2192 . 2194) (#("wks" 0 3 (fontified t)) . -2192) (undo-tree-id4046 . -3) (2192 . 2195) (#("wks" 0 3 (fontified t)) . -2192) (undo-tree-id4047 . -3) (undo-tree-id4048 . -3) (2192 . 2195) (#("wk" 0 2 (fontified t)) . -2192) (undo-tree-id4049 . -2) (2192 . 2194) (#("wk" 0 2 (fontified t)) . -2192) (undo-tree-id4050 . -2) (undo-tree-id4051 . -2) (2192 . 2194) (#("w" 0 1 (fontified t)) . -2192) (undo-tree-id4052 . -1) (2192 . 2193) (#("w" 0 1 (fontified t)) . -2192) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (2191 . 2193) (#("s" 0 1 (fontified t)) . -2191) (undo-tree-id4055 . -1) (2191 . 2192) (#("s" 0 1 (fontified t)) . -2191) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (2190 . 2192) (#("sqc" 0 3 (fontified t)) . -2190) (undo-tree-id4058 . -3) (2190 . 2193) (#("sqc" 0 3 (fontified t)) . -2190) (undo-tree-id4059 . -3) (undo-tree-id4060 . -3) (2190 . 2193) (#("sq" 0 2 (fontified t)) . -2190) (undo-tree-id4061 . -2) (2190 . 2192) (#("sq" 0 2 (fontified t)) . -2190) (undo-tree-id4062 . -2) (undo-tree-id4063 . -2) (2190 . 2192) (#("s" 0 1 (fontified t)) . -2190) (undo-tree-id4064 . -1) (2190 . 2191) (#("s" 0 1 (fontified t)) . -2190) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (2189 . 2191)) nil (25281 26091 499061 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2196) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) 2197) nil (25281 26091 498982 0) 0 nil])
([nil nil ((2196 . 2197)) nil (25281 26091 498979 0) 0 nil])
([nil nil ((2197 . 2199) (#(" " 0 1 (fontified nil)) . 2196) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (2197 . 2198)) nil (25281 26091 498977 0) 0 nil])
([nil nil ((#("
  " 0 3 (fontified t)) . 2196) (undo-tree-id4007 . -3) (undo-tree-id4008 . -1) (undo-tree-id4009 . 3) (undo-tree-id4010 . -3) (undo-tree-id4011 . -3) 2199) nil (25281 26091 498972 0) 0 nil])
([nil nil ((2165 . 2199) (#("- 
- 连接时注意host gdb是qemu cpu架构要保持一致" 0 2 (fontified nil) 2 3 (fontified nil) 3 34 (fontified nil)) . 2165) (undo-tree-id3889 . -34) (undo-tree-id3890 . -5) (undo-tree-id3891 . -5) (undo-tree-id3892 . -5) (undo-tree-id3893 . -5) (undo-tree-id3894 . -5) (undo-tree-id3895 . -5) (undo-tree-id3896 . -6) (undo-tree-id3897 . -6) (undo-tree-id3898 . -6) (undo-tree-id3899 . -6) (undo-tree-id3900 . -6) (undo-tree-id3901 . -7) (undo-tree-id3902 . -7) (undo-tree-id3903 . -7) (undo-tree-id3904 . -7) (undo-tree-id3905 . -7) (undo-tree-id3906 . -8) (undo-tree-id3907 . -8) (undo-tree-id3908 . -8) (undo-tree-id3909 . -8) (undo-tree-id3910 . -9) (undo-tree-id3911 . -9) (undo-tree-id3912 . -9) (undo-tree-id3913 . -9) (undo-tree-id3914 . -9) (undo-tree-id3915 . -9) (undo-tree-id3916 . -9) (undo-tree-id3917 . -9) (undo-tree-id3918 . -9) (undo-tree-id3919 . -10) (undo-tree-id3920 . -10) (undo-tree-id3921 . -10) (undo-tree-id3922 . -11) (undo-tree-id3923 . -12) (undo-tree-id3924 . -13) (undo-tree-id3925 . -14) (undo-tree-id3926 . -15) (undo-tree-id3927 . -16) (undo-tree-id3928 . -17) (undo-tree-id3929 . -18) (undo-tree-id3930 . -18) (undo-tree-id3931 . -18) (undo-tree-id3932 . -18) (undo-tree-id3933 . -20) (undo-tree-id3934 . -20) (undo-tree-id3935 . -20) (undo-tree-id3936 . -20) (undo-tree-id3937 . -20) (undo-tree-id3938 . -20) (undo-tree-id3939 . -20) (undo-tree-id3940 . -20) (undo-tree-id3941 . -20) (undo-tree-id3942 . -20) (undo-tree-id3943 . -20) (undo-tree-id3944 . -20) (undo-tree-id3945 . -21) (undo-tree-id3946 . -22) (undo-tree-id3947 . -23) (undo-tree-id3948 . -24) (undo-tree-id3949 . -25) (undo-tree-id3950 . -26) (undo-tree-id3951 . -27) (undo-tree-id3952 . -27) (undo-tree-id3953 . -27) (undo-tree-id3954 . -27) (undo-tree-id3955 . -27) (undo-tree-id3956 . -27) (undo-tree-id3957 . -27) (undo-tree-id3958 . -27) (undo-tree-id3959 . -27) (undo-tree-id3960 . -27) (undo-tree-id3961 . -27) (undo-tree-id3962 . -27) (undo-tree-id3963 . -27) (undo-tree-id3964 . -27) (undo-tree-id3965 . -28) (undo-tree-id3966 . -28) (undo-tree-id3967 . -28) (undo-tree-id3968 . -28) (undo-tree-id3969 . -28) (undo-tree-id3970 . -29) (undo-tree-id3971 . -29) (undo-tree-id3972 . -29) (undo-tree-id3973 . -30) (undo-tree-id3974 . -30) (undo-tree-id3975 . -30) (undo-tree-id3976 . -30) (undo-tree-id3977 . -30) (undo-tree-id3978 . -30) (undo-tree-id3979 . -30) (undo-tree-id3980 . -31) (undo-tree-id3981 . -31) (undo-tree-id3982 . -31) (undo-tree-id3983 . -31) (undo-tree-id3984 . -31) (undo-tree-id3985 . -31) (undo-tree-id3986 . -31) (undo-tree-id3987 . -31) (undo-tree-id3988 . -32) (undo-tree-id3989 . -32) (undo-tree-id3990 . -32) (undo-tree-id3991 . -33) (undo-tree-id3992 . -33) (undo-tree-id3993 . -33) (undo-tree-id3994 . -33) (undo-tree-id3995 . -33) (undo-tree-id3996 . -33) (undo-tree-id3997 . -34) (undo-tree-id3998 . -34) (undo-tree-id3999 . -34) (undo-tree-id4000 . -34) (undo-tree-id4001 . -34) (undo-tree-id4002 . -34) (undo-tree-id4003 . -34) (undo-tree-id4004 . -34) (undo-tree-id4005 . -34) (undo-tree-id4006 . -3) (2165 . 2168) 2196) nil (25281 26091 498956 0) 0 nil])
([nil nil ((2052 . 2053) (t 25281 26091 517735 195000)) nil (25281 26094 434800 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2060 . 2061) (nil fontified nil 2053 . 2061) (2053 . 2061) (t 25281 26094 453348 65000)) nil (25281 26108 38296 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) src-block t)) . -2053) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (t 25281 26108 56892 330000)) nil (25281 26110 3335 0) 0 nil])
([nil nil ((nil fontified nil 2213 . 2214) (nil fontified nil 2207 . 2213) (2207 . 2214) (t 25281 26110 22016 510000)) nil (25281 26111 843282 0) 0 nil])
([nil nil ((1821 . 1845) (#("- 
- -nographic 使用text终端" 0 2 (fontified nil) 2 3 (fontified nil) 3 5 (fontified nil) 5 14 (font-lock-fontified t src-block t fontified nil) 14 15 (rear-nonsticky t font-lock-fontified t src-block t fontified nil) 15 24 (fontified nil)) . 1821) (undo-tree-id4179 . -24) (undo-tree-id4180 . -5) (undo-tree-id4181 . -24) (undo-tree-id4182 . -3) (1821 . 1824) 1842 (t 25281 26111 861417 771000)) nil (25281 26118 180467 0) 0 nil])
([nil nil ((#("- " 0 2 (fontified t)) . 1843) (undo-tree-id4188 . -2) (undo-tree-id4189 . -2) (undo-tree-id4190 . -2) (t 25281 26118 200359 541000)) nil (25281 26120 511061 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1843) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1)) nil (25281 26120 511055 0) 0 nil])
([nil nil ((1669 . 1724) (#("- 
- -hda 指定rootfs，如果是ramfs，可以用-initrd /home/rootfs.img" 0 2 (fontified nil) 2 3 (fontified nil) 3 31 (fontified nil) 31 54 (fontified nil) 54 55 (rear-nonsticky t fontified nil)) . 1669) (undo-tree-id4183 . -55) (undo-tree-id4184 . -55) (undo-tree-id4185 . -3) (1669 . 1672) 1721) nil (25281 26120 511047 0) 0 nil])
([nil nil ((1724 . 1725) (t 25281 26120 529299 867000)) nil (25281 26169 268354 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -1724) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) 1725) nil (25281 26169 268352 0) 0 nil])
([nil nil ((1730 . 1732) (#("fc" 0 2 (fontified t)) . -1730) (undo-tree-id4502 . -2) (undo-tree-id4503 . -2) (1730 . 1732) (#("f" 0 1 (fontified t)) . -1730) (undo-tree-id4504 . -1) (1730 . 1731) (#("f" 0 1 (fontified t)) . -1730) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (1729 . 1731) (#("ynk" 0 3 (fontified nil)) . -1729) (1729 . 1732) (#("ynk" 0 3 (fontified nil)) . -1729) (1729 . 1732) (#("ynk" 0 3 (fontified nil)) . -1729) (1729 . 1732) (#("ynk" 0 3 (fontified nil)) . -1729) (1729 . 1732) (#("ynk" 0 3 (fontified nil)) . -1729) (1729 . 1732) (#("ynk" 0 3 (fontified t)) . -1729) (undo-tree-id4507 . -3) (undo-tree-id4508 . -3) (1725 . 1732) (#("h" 0 1 (fontified t)) . -1725) (undo-tree-id4509 . -1) (1725 . 1726) (#("h" 0 1 (fontified t)) . -1725) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (1725 . 1726) (#("ha" 0 2 (fontified t)) . -1725) (undo-tree-id4512 . -2) (1725 . 1727) (#("ha" 0 2 (fontified t)) . -1725) (undo-tree-id4513 . -2) (undo-tree-id4514 . -2) (1725 . 1727) (#("had" 0 3 (fontified t)) . -1725) (undo-tree-id4515 . -3) (1725 . 1728) (#("had" 0 3 (fontified t)) . -1725) (undo-tree-id4516 . -3) (undo-tree-id4517 . -3) (1725 . 1728) (#("hada" 0 4 (fontified t)) . -1725) (undo-tree-id4518 . -4) (1725 . 1729) (#("hada" 0 4 (fontified t)) . -1725) (undo-tree-id4519 . -4) (undo-tree-id4520 . -4) (1725 . 1729) (#("had" 0 3 (fontified t)) . -1725) (undo-tree-id4521 . -3) (1725 . 1728) (#("had" 0 3 (fontified t)) . -1725) (undo-tree-id4522 . -3) (undo-tree-id4523 . -3) (1725 . 1728) (#("ha" 0 2 (fontified t)) . -1725) (undo-tree-id4524 . -2) (1725 . 1727) (#("ha" 0 2 (fontified t)) . -1725) (undo-tree-id4525 . -2) (undo-tree-id4526 . -2) (1725 . 1727) (#("h" 0 1 (fontified t)) . -1725) (undo-tree-id4527 . -1) (1725 . 1726) (#("h" 0 1 (fontified t)) . -1725) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (1724 . 1726)) nil (25281 26169 268338 0) 0 nil])
([nil nil ((1749 . 1750) (#("gh" 0 2 (fontified nil)) . -1749) (1749 . 1751) (#("gh" 0 2 (fontified t)) . -1749) (undo-tree-id4414 . -2) (undo-tree-id4415 . -2) (1749 . 1751) (#("g" 0 1 (fontified t)) . -1749) (undo-tree-id4416 . -1) (1749 . 1750) (#("g" 0 1 (fontified t)) . -1749) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (1748 . 1750) (#("yw" 0 2 (fontified t)) . -1748) (undo-tree-id4419 . -2) (1748 . 1750) (#("yw" 0 2 (fontified t)) . -1748) (undo-tree-id4420 . -2) (undo-tree-id4421 . -2) (1748 . 1750) (#("y" 0 1 (fontified t)) . -1748) (undo-tree-id4422 . -1) (1748 . 1749) (#("y" 0 1 (fontified t)) . -1748) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (1747 . 1749) (#("dqe" 0 3 (fontified t)) . -1747) (undo-tree-id4425 . -3) (1747 . 1750) (#("dqe" 0 3 (fontified t)) . -1747) (undo-tree-id4426 . -3) (undo-tree-id4427 . -3) (1747 . 1750) (#("dq" 0 2 (fontified t)) . -1747) (undo-tree-id4428 . -2) (1747 . 1749) (#("dq" 0 2 (fontified t)) . -1747) (undo-tree-id4429 . -2) (undo-tree-id4430 . -2) (1747 . 1749) (#("d" 0 1 (fontified t)) . -1747) (undo-tree-id4431 . -1) (1747 . 1748) (#("d" 0 1 (fontified t)) . -1747) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (1747 . 1748) (#("s" 0 1 (fontified t)) . -1747) (undo-tree-id4434 . -1) (1747 . 1748) (#("s" 0 1 (fontified t)) . -1747) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (1747 . 1748) (#("sg" 0 2 (fontified t)) . -1747) (undo-tree-id4437 . -2) (1747 . 1749) (#("sg" 0 2 (fontified t)) . -1747) (undo-tree-id4438 . -2) (undo-tree-id4439 . -2) (1747 . 1749) (#("s" 0 1 (fontified t)) . -1747) (undo-tree-id4440 . -1) (1747 . 1748) (#("s" 0 1 (fontified t)) . -1747) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (1745 . 1748) (#("jfy" 0 3 (fontified nil)) . -1745) (1745 . 1748) (#("jfy" 0 3 (fontified nil)) . -1745) (1745 . 1748) (#("jfy" 0 3 (fontified nil)) . -1745) (1745 . 1748) (#("jfy" 0 3 (fontified nil)) . -1745) (1745 . 1748) (#("jfy" 0 3 (fontified nil)) . -1745) (1745 . 1748) (#("jfy" 0 3 (fontified t)) . -1745) (undo-tree-id4443 . -3) (undo-tree-id4444 . -3) (1738 . 1748) (#("gc" 0 2 (fontified t)) . -1738) (undo-tree-id4445 . -2) (1738 . 1740) (#("gc" 0 2 (fontified t)) . -1738) (undo-tree-id4446 . -2) (undo-tree-id4447 . -2) (1738 . 1740) (#("g" 0 1 (fontified t)) . -1738) (undo-tree-id4448 . -1) (1738 . 1739) (#("g" 0 1 (fontified t)) . -1738) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (1737 . 1739) (#("i" 0 1 (fontified nil)) . -1737) (1737 . 1738) (#("i" 0 1 (fontified t)) . -1737) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (1736 . 1738) (#("rat" 0 3 (fontified t)) . -1736) (undo-tree-id4453 . -3) (1736 . 1739) (#("rat" 0 3 (fontified t)) . -1736) (undo-tree-id4454 . -3) (undo-tree-id4455 . -3) (1736 . 1739) (#("ra" 0 2 (fontified t)) . -1736) (undo-tree-id4456 . -2) (1736 . 1738) (#("ra" 0 2 (fontified t)) . -1736) (undo-tree-id4457 . -2) (undo-tree-id4458 . -2) (1736 . 1738) (#("r" 0 1 (fontified t)) . -1736) (undo-tree-id4459 . -1) (1736 . 1737) (#("r" 0 1 (fontified t)) . -1736) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (1735 . 1737) (#("rb" 0 2 (fontified t)) . -1735) (undo-tree-id4462 . -2) (1735 . 1737) (#("rb" 0 2 (fontified t)) . -1735) (undo-tree-id4463 . -2) (undo-tree-id4464 . -2) (1735 . 1737) (#("r" 0 1 (fontified t)) . -1735) (undo-tree-id4465 . -1) (1735 . 1736) (#("r" 0 1 (fontified t)) . -1735) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (1734 . 1736) (#("synw" 0 4 (fontified t)) . -1734) (undo-tree-id4468 . -4) (1734 . 1738) (#("synw" 0 4 (fontified t)) . -1734) (undo-tree-id4469 . -4) (undo-tree-id4470 . -4) (1734 . 1738) (#("syn" 0 3 (fontified t)) . -1734) (undo-tree-id4471 . -3) (1734 . 1737) (#("syn" 0 3 (fontified t)) . -1734) (undo-tree-id4472 . -3) (undo-tree-id4473 . -3) (1734 . 1737) (#("sy" 0 2 (fontified t)) . -1734) (undo-tree-id4474 . -2) (1734 . 1736) (#("sy" 0 2 (fontified t)) . -1734) (undo-tree-id4475 . -2) (undo-tree-id4476 . -2) (1734 . 1736) (#("s" 0 1 (fontified t)) . -1734) (undo-tree-id4477 . -1) (1734 . 1735) (#("s" 0 1 (fontified t)) . -1734) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (1733 . 1735) (#("mw" 0 2 (fontified t)) . -1733) (undo-tree-id4480 . -2) (1733 . 1735) (#("mw" 0 2 (fontified t)) . -1733) (undo-tree-id4481 . -2) (undo-tree-id4482 . -2) (1733 . 1735) (#("m" 0 1 (fontified t)) . -1733) (undo-tree-id4483 . -1) (1733 . 1734) (#("m" 0 1 (fontified t)) . -1733) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (1732 . 1734) (#("j" 0 1 (fontified t)) . -1732) (undo-tree-id4486 . -1) (1732 . 1733) (#("j" 0 1 (fontified t)) . -1732) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (1731 . 1733) (#("wjg" 0 3 (fontified t)) . -1731) (undo-tree-id4489 . -3) (1731 . 1734) (#("wjg" 0 3 (fontified t)) . -1731) (undo-tree-id4490 . -3) (undo-tree-id4491 . -3) (1731 . 1734) (#("wj" 0 2 (fontified t)) . -1731) (undo-tree-id4492 . -2) (1731 . 1733) (#("wj" 0 2 (fontified t)) . -1731) (undo-tree-id4493 . -2) (undo-tree-id4494 . -2) (1731 . 1733) (#("w" 0 1 (fontified t)) . -1731) (undo-tree-id4495 . -1) (1731 . 1732) (#("w" 0 1 (fontified t)) . -1731) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (1730 . 1732) (#("fcl" 0 3 (fontified t)) . -1730) (undo-tree-id4498 . -3) (1730 . 1733) (#("fcl" 0 3 (fontified t)) . -1730) (undo-tree-id4499 . -3) (undo-tree-id4500 . -3) (1730 . 1733) (#("fc" 0 2 (fontified t)) . -1730) (undo-tree-id4501 . -2) 1732) nil (25281 26169 268274 0) 0 nil])
([nil nil ((1754 . 1755) (#("o" 0 1 (fontified nil)) . -1754) (1754 . 1755) (#("o" 0 1 (fontified t)) . -1754) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (1753 . 1755) (#("lfhf" 0 4 (fontified t)) . -1753) (undo-tree-id4390 . -4) (1753 . 1757) (#("lfhf" 0 4 (fontified t)) . -1753) (undo-tree-id4391 . -4) (undo-tree-id4392 . -4) (1753 . 1757) (#("lfh" 0 3 (fontified t)) . -1753) (undo-tree-id4393 . -3) (1753 . 1756) (#("lfh" 0 3 (fontified t)) . -1753) (undo-tree-id4394 . -3) (undo-tree-id4395 . -3) (1753 . 1756) (#("lf" 0 2 (fontified t)) . -1753) (undo-tree-id4396 . -2) (1753 . 1755) (#("lf" 0 2 (fontified t)) . -1753) (undo-tree-id4397 . -2) (undo-tree-id4398 . -2) (1753 . 1755) (#("l" 0 1 (fontified t)) . -1753) (undo-tree-id4399 . -1) (1753 . 1754) (#("l" 0 1 (fontified t)) . -1753) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (1752 . 1754) (#("sgn" 0 3 (fontified nil)) . -1752) (1752 . 1755) (#("sgn" 0 3 (fontified t)) . -1752) (undo-tree-id4402 . -3) (undo-tree-id4403 . -3) (1752 . 1755) (#("sg" 0 2 (fontified t)) . -1752) (undo-tree-id4404 . -2) (1752 . 1754) (#("sg" 0 2 (fontified t)) . -1752) (undo-tree-id4405 . -2) (undo-tree-id4406 . -2) (1752 . 1754) (#("s" 0 1 (fontified t)) . -1752) (undo-tree-id4407 . -1) (1752 . 1753) (#("s" 0 1 (fontified t)) . -1752) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (1751 . 1753) (#("synw" 0 4 (fontified t)) . -1751) (undo-tree-id4410 . -4) (undo-tree-id4411 . -4) (1751 . 1755) (#("synw" 0 4 (fontified nil)) . -1751) (1751 . 1755) (#("synw" 0 4 (fontified nil)) . -1751) (1751 . 1755) (#("synw" 0 4 (fontified nil)) . -1751) (1751 . 1755) (#("synw" 0 4 (fontified nil)) . -1751) (1751 . 1755) (#("synw" 0 4 (fontified nil)) . -1751) (1751 . 1755) (#("synw" 0 4 (fontified nil)) . -1751) (1751 . 1755) (#("synw" 0 4 (fontified nil)) . -1751) (1750 . 1755) (#("synw" 0 4 (fontified nil)) . -1750) (1750 . 1754) (#("synw" 0 4 (fontified nil)) . -1750) (1750 . 1754) (#("synw" 0 4 (fontified nil)) . -1750) (1750 . 1754) (#("synw" 0 4 (fontified t)) . -1750) (undo-tree-id4412 . -4) (undo-tree-id4413 . -4) (1750 . 1754)) nil (25281 26169 268122 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified nil)) . -1754) (1754 . 1755) (#("o" 0 1 (fontified t)) . -1754) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (1754 . 1755) (#("为" 0 1 (fontified t)) . -1754) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) 1755) nil (25281 26169 268076 0) 0 nil])
([nil nil ((1754 . 1755)) nil (25281 26169 268068 0) 0 nil])
([nil nil ((#("fcr" 0 3 (fontified t)) . -1754) (undo-tree-id4371 . -3) (1754 . 1757) (#("fcr" 0 3 (fontified t)) . -1754) (undo-tree-id4372 . -3) (undo-tree-id4373 . -3) (1754 . 1757) (#("fc" 0 2 (fontified t)) . -1754) (undo-tree-id4374 . -2) (1754 . 1756) (#("fc" 0 2 (fontified t)) . -1754) (undo-tree-id4375 . -2) (undo-tree-id4376 . -2) (1754 . 1756) (#("f" 0 1 (fontified t)) . -1754) (undo-tree-id4377 . -1) (1754 . 1755) (#("f" 0 1 (fontified t)) . -1754) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (1754 . 1755) (#("为" 0 1 (fontified t)) . -1754) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) 1755) nil (25281 26169 268065 0) 0 nil])
([nil nil ((1754 . 1755)) nil (25281 26169 268046 0) 0 nil])
([nil nil ((#("fc" 0 2 (fontified t)) . -1754) (undo-tree-id4363 . -2) (1754 . 1756) (#("fc" 0 2 (fontified t)) . -1754) (undo-tree-id4364 . -2) (undo-tree-id4365 . -2) (1754 . 1756) (#("f" 0 1 (fontified t)) . -1754) (undo-tree-id4366 . -1) (1754 . 1755) (#("f" 0 1 (fontified t)) . -1754) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (1754 . 1755) (#("魂" 0 1 (fontified t)) . -1754) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) 1755) nil (25281 26169 268044 0) 0 nil])
([nil nil ((1755 . 1756) (#("r" 0 1 (fontified t)) . -1755) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (1754 . 1756)) nil (25281 26169 268028 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -1766) (undo-tree-id4252 . -1) (1766 . 1767) (#("y" 0 1 (fontified t)) . -1766) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (1766 . 1767) (#("yc" 0 2 (fontified t)) . -1766) (undo-tree-id4255 . -2) (1766 . 1768) (#("yc" 0 2 (fontified t)) . -1766) (undo-tree-id4256 . -2) (undo-tree-id4257 . -2) (1766 . 1768) (#("ycf" 0 3 (fontified t)) . -1766) (undo-tree-id4258 . -3) (1766 . 1769) (#("ycf" 0 3 (fontified t)) . -1766) (undo-tree-id4259 . -3) (undo-tree-id4260 . -3) (1766 . 1769) (#("yc" 0 2 (fontified t)) . -1766) (undo-tree-id4261 . -2) (1766 . 1768) (#("yc" 0 2 (fontified t)) . -1766) (undo-tree-id4262 . -2) (undo-tree-id4263 . -2) (1766 . 1768) (#("y" 0 1 (fontified t)) . -1766) (undo-tree-id4264 . -1) (1766 . 1767) (#("y" 0 1 (fontified t)) . -1766) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (1765 . 1767) (#("xyna" 0 4 (fontified t)) . -1765) (undo-tree-id4267 . -4) (1765 . 1769) (#("xyna" 0 4 (fontified t)) . -1765) (undo-tree-id4268 . -4) (undo-tree-id4269 . -4) (1765 . 1769) (#("xyn" 0 3 (fontified t)) . -1765) (undo-tree-id4270 . -3) (1765 . 1768) (#("xyn" 0 3 (fontified t)) . -1765) (undo-tree-id4271 . -3) (undo-tree-id4272 . -3) (1765 . 1768) (#("xy" 0 2 (fontified t)) . -1765) (undo-tree-id4273 . -2) (1765 . 1767) (#("xy" 0 2 (fontified t)) . -1765) (undo-tree-id4274 . -2) (undo-tree-id4275 . -2) (1765 . 1767) (#("x" 0 1 (fontified t)) . -1765) (undo-tree-id4276 . -1) (1765 . 1766) (#("x" 0 1 (fontified t)) . -1765) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (1764 . 1766) (#("ce" 0 2 (fontified t)) . -1764) (undo-tree-id4279 . -2) (1764 . 1766) (#("ce" 0 2 (fontified t)) . -1764) (undo-tree-id4280 . -2) (undo-tree-id4281 . -2) (1764 . 1766) (#("c" 0 1 (fontified t)) . -1764) (undo-tree-id4282 . -1) (1764 . 1765) (#("c" 0 1 (fontified t)) . -1764) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (1763 . 1765) (#("i" 0 1 (fontified t)) . -1763) (undo-tree-id4285 . -1) (1763 . 1764) (#("i" 0 1 (fontified t)) . -1763) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (1762 . 1764) (#("jfy" 0 3 (fontified t)) . -1762) (undo-tree-id4288 . -3) (1762 . 1765) (#("jfy" 0 3 (fontified t)) . -1762) (undo-tree-id4289 . -3) (undo-tree-id4290 . -3) (1762 . 1765) (#("jf" 0 2 (fontified t)) . -1762) (undo-tree-id4291 . -2) (1762 . 1764) (#("jf" 0 2 (fontified t)) . -1762) (undo-tree-id4292 . -2) (undo-tree-id4293 . -2) (1762 . 1764) (#("j" 0 1 (fontified t)) . -1762) (undo-tree-id4294 . -1) (1762 . 1763) (#("j" 0 1 (fontified t)) . -1762) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (1761 . 1763) (#("m" 0 1 (fontified t)) . -1761) (undo-tree-id4297 . -1) (1761 . 1762) (#("m" 0 1 (fontified t)) . -1761) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (1760 . 1762) (#("xyc" 0 3 (fontified t)) . -1760) (undo-tree-id4300 . -3) (1760 . 1763) (#("xyc" 0 3 (fontified t)) . -1760) (undo-tree-id4301 . -3) (undo-tree-id4302 . -3) (1760 . 1763) (#("xy" 0 2 (fontified t)) . -1760) (undo-tree-id4303 . -2) (1760 . 1762) (#("xy" 0 2 (fontified t)) . -1760) (undo-tree-id4304 . -2) (undo-tree-id4305 . -2) (1760 . 1762) (#("x" 0 1 (fontified t)) . -1760) (undo-tree-id4306 . -1) (1760 . 1761) (#("x" 0 1 (fontified t)) . -1760) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (1759 . 1761) (#("txi" 0 3 (fontified t)) . -1759) (undo-tree-id4309 . -3) (1759 . 1762) (#("txi" 0 3 (fontified t)) . -1759) (undo-tree-id4310 . -3) (undo-tree-id4311 . -3) (1759 . 1762) (#("tx" 0 2 (fontified t)) . -1759) (undo-tree-id4312 . -2) (1759 . 1761) (#("tx" 0 2 (fontified t)) . -1759) (undo-tree-id4313 . -2) (undo-tree-id4314 . -2) (1759 . 1761) (#("t" 0 1 (fontified t)) . -1759) (undo-tree-id4315 . -1) (1759 . 1760) (#("t" 0 1 (fontified t)) . -1759) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (1758 . 1760) (#("wrh" 0 3 (fontified t)) . -1758) (undo-tree-id4318 . -3) (1758 . 1761) (#("wrh" 0 3 (fontified t)) . -1758) (undo-tree-id4319 . -3) (undo-tree-id4320 . -3) (1758 . 1761) (#("wr" 0 2 (fontified t)) . -1758) (undo-tree-id4321 . -2) (1758 . 1760) (#("wr" 0 2 (fontified t)) . -1758) (undo-tree-id4322 . -2) (undo-tree-id4323 . -2) (1758 . 1760) (#("w" 0 1 (fontified t)) . -1758) (undo-tree-id4324 . -1) (1758 . 1759) (#("w" 0 1 (fontified t)) . -1758) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (1757 . 1759) (#("yygy" 0 4 (fontified t)) . -1757) (undo-tree-id4327 . -4) (1757 . 1761) (#("yygy" 0 4 (fontified t)) . -1757) (undo-tree-id4328 . -4) (undo-tree-id4329 . -4) (1757 . 1761) (#("yyg" 0 3 (fontified t)) . -1757) (undo-tree-id4330 . -3) (1757 . 1760) (#("yyg" 0 3 (fontified t)) . -1757) (undo-tree-id4331 . -3) (undo-tree-id4332 . -3) (1757 . 1760) (#("yy" 0 2 (fontified t)) . -1757) (undo-tree-id4333 . -2) (1757 . 1759) (#("yy" 0 2 (fontified t)) . -1757) (undo-tree-id4334 . -2) (undo-tree-id4335 . -2) (1757 . 1759) (#("y" 0 1 (fontified t)) . -1757) (undo-tree-id4336 . -1) (1757 . 1758) (#("y" 0 1 (fontified t)) . -1757) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (1756 . 1758) (#("yynw" 0 4 (fontified t)) . -1756) (undo-tree-id4339 . -4) (1756 . 1760) (#("yynw" 0 4 (fontified t)) . -1756) (undo-tree-id4340 . -4) (undo-tree-id4341 . -4) (1756 . 1760) (#("yyn" 0 3 (fontified t)) . -1756) (undo-tree-id4342 . -3) (1756 . 1759) (#("yyn" 0 3 (fontified t)) . -1756) (undo-tree-id4343 . -3) (undo-tree-id4344 . -3) (1756 . 1759) (#("yy" 0 2 (fontified t)) . -1756) (undo-tree-id4345 . -2) (1756 . 1758) (#("yy" 0 2 (fontified t)) . -1756) (undo-tree-id4346 . -2) (undo-tree-id4347 . -2) (1756 . 1758) (#("y" 0 1 (fontified t)) . -1756) (undo-tree-id4348 . -1) (1756 . 1757) (#("y" 0 1 (fontified t)) . -1756) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (1755 . 1757) (#("rffy" 0 4 (fontified t)) . -1755) (undo-tree-id4351 . -4) (1755 . 1759) (#("rffy" 0 4 (fontified t)) . -1755) (undo-tree-id4352 . -4) (undo-tree-id4353 . -4) (1755 . 1759) (#("rff" 0 3 (fontified t)) . -1755) (undo-tree-id4354 . -3) (1755 . 1758) (#("rff" 0 3 (fontified t)) . -1755) (undo-tree-id4355 . -3) (undo-tree-id4356 . -3) (1755 . 1758) (#("rf" 0 2 (fontified t)) . -1755) (undo-tree-id4357 . -2) (1755 . 1757) (#("rf" 0 2 (fontified t)) . -1755) (undo-tree-id4358 . -2) (undo-tree-id4359 . -2) (1755 . 1757) (#("r" 0 1 (fontified t)) . -1755) (undo-tree-id4360 . -1) 1756) nil (25281 26169 268004 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1765) (undo-tree-id4241 . -1) (1765 . 1766) (#("s" 0 1 (fontified t)) . -1765) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (1765 . 1766) (#("编" 0 1 (fontified t)) . -1765) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) 1766) nil (25281 26169 267832 0) 0 nil])
([nil nil ((1765 . 1766)) nil (25281 26169 267816 0) 0 nil])
([nil nil ((#("要" 0 1 (fontified t)) . -1765) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) 1766) nil (25281 26169 267814 0) 0 nil])
([nil nil ((1765 . 1768)) nil (25281 26169 267804 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified nil)) . -1765) (1765 . 1766) (#("y" 0 1 (fontified nil)) . -1765) (1765 . 1766) (#("y" 0 1 (fontified nil)) . -1765) (1765 . 1766) (#("y" 0 1 (fontified nil)) . -1765) (1765 . 1766) (#("y" 0 1 (fontified nil)) . -1765) (1765 . 1766) (#("y" 0 1 (fontified nil)) . -1765) (1765 . 1766) (#("y" 0 1 (fontified nil)) . -1765) (1765 . 1766) (#("y" 0 1 (fontified t)) . -1765) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (1765 . 1766) (#("x" 0 1 (fontified t)) . -1765) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (#("y" 0 1 (fontified t)) . -1766) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (#("n" 0 1 (fontified t)) . -1767) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) 1768) nil (25281 26169 267800 0) 0 nil])
([nil nil ((1769 . 1770) (#("fnw" 0 3 (fontified t)) . -1769) (undo-tree-id4191 . -3) (1769 . 1772) (#("fnw" 0 3 (fontified t)) . -1769) (undo-tree-id4192 . -3) (undo-tree-id4193 . -3) (1769 . 1772) (#("fn" 0 2 (fontified t)) . -1769) (undo-tree-id4194 . -2) (1769 . 1771) (#("fn" 0 2 (fontified t)) . -1769) (undo-tree-id4195 . -2) (undo-tree-id4196 . -2) (1769 . 1771) (#("f" 0 1 (fontified t)) . -1769) (undo-tree-id4197 . -1) (1769 . 1770) (#("f" 0 1 (fontified t)) . -1769) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (1768 . 1770) (#("sajd" 0 4 (fontified t)) . -1768) (undo-tree-id4200 . -4) (1768 . 1772) (#("sajd" 0 4 (fontified t)) . -1768) (undo-tree-id4201 . -4) (undo-tree-id4202 . -4) (1768 . 1772) (#("saj" 0 3 (fontified t)) . -1768) (undo-tree-id4203 . -3) (1768 . 1771) (#("saj" 0 3 (fontified t)) . -1768) (undo-tree-id4204 . -3) (undo-tree-id4205 . -3) (1768 . 1771) (#("sa" 0 2 (fontified t)) . -1768) (undo-tree-id4206 . -2) (1768 . 1770) (#("sa" 0 2 (fontified t)) . -1768) (undo-tree-id4207 . -2) (undo-tree-id4208 . -2) (1768 . 1770) (#("s" 0 1 (fontified t)) . -1768) (undo-tree-id4209 . -1) (1768 . 1769) (#("s" 0 1 (fontified t)) . -1768) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (1767 . 1769) (#("dn" 0 2 (fontified t)) . -1767) (undo-tree-id4212 . -2) (1767 . 1769) (#("dn" 0 2 (fontified nil)) . -1767) (1767 . 1769) (#("dn" 0 2 (fontified nil)) . -1767) (1767 . 1769) (#("dn" 0 2 (fontified t)) . -1767) (undo-tree-id4213 . -2) (undo-tree-id4214 . -2) (1766 . 1769) (#("ycfh" 0 4 (fontified t)) . -1766) (undo-tree-id4215 . -4) (1766 . 1770) (#("ycfh" 0 4 (fontified nil)) . -1766) (1766 . 1770) (#("ycfh" 0 4 (fontified nil)) . -1766) (1766 . 1770) (#("ycfh" 0 4 (fontified t)) . -1766) (undo-tree-id4216 . -4) (undo-tree-id4217 . -4) (1766 . 1770) (#("yc" 0 2 (fontified t)) . -1766) (undo-tree-id4218 . -2) (1766 . 1768) (#("yc" 0 2 (fontified t)) . -1766) (undo-tree-id4219 . -2) (undo-tree-id4220 . -2) (1766 . 1768) (#("y" 0 1 (fontified t)) . -1766) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (1766 . 1767) (#("y" 0 1 (fontified nil)) . -1766) (1765 . 1767)) nil (25281 26169 267766 0) 0 nil])
([nil nil ((#("djd" 0 3 (fontified t)) . -2263) (undo-tree-id4705 . -3) (2263 . 2266) (#("djd" 0 3 (fontified t)) . -2263) (undo-tree-id4706 . -3) (undo-tree-id4707 . -3) (2263 . 2266) (#("dj" 0 2 (fontified t)) . -2263) (undo-tree-id4708 . -2) (2263 . 2265) (#("dj" 0 2 (fontified t)) . -2263) (undo-tree-id4709 . -2) (undo-tree-id4710 . -2) (2263 . 2265) (#("d" 0 1 (fontified t)) . -2263) (undo-tree-id4711 . -1) (2263 . 2264) (#("d" 0 1 (fontified t)) . -2263) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (2263 . 2264) (#("x" 0 1 (fontified t)) . -2263) (undo-tree-id4714 . -1) (2263 . 2264) (#("x" 0 1 (fontified t)) . -2263) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (2263 . 2264) (#("xx" 0 2 (fontified t)) . -2263) (undo-tree-id4717 . -2) (undo-tree-id4718 . -2) (undo-tree-id4719 . -2) (2263 . 2265) (#("xx" 0 2 (fontified nil)) . -2263) (2263 . 2265) (#("xx" 0 2 (fontified nil)) . -2263) (2263 . 2265) (#("xx" 0 2 (fontified t)) . -2263) (undo-tree-id4720 . -2) (undo-tree-id4721 . -2) (2263 . 2265) (t 25281 26169 288125 869000)) nil (25281 26201 400592 0) 0 nil])
([nil nil ((2266 . 2268) (#("s" 0 1 (fontified t)) . -2266) (undo-tree-id4669 . -1) (2266 . 2267) (#("s" 0 1 (fontified t)) . -2266) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (2265 . 2267) (#("tgj" 0 3 (fontified t)) . -2265) (undo-tree-id4672 . -3) (2265 . 2268) (#("tgj" 0 3 (fontified t)) . -2265) (undo-tree-id4673 . -3) (undo-tree-id4674 . -3) (2265 . 2268) (#("tg" 0 2 (fontified t)) . -2265) (undo-tree-id4675 . -2) (2265 . 2267) (#("tg" 0 2 (fontified t)) . -2265) (undo-tree-id4676 . -2) (undo-tree-id4677 . -2) (2265 . 2267) (#("t" 0 1 (fontified t)) . -2265) (undo-tree-id4678 . -1) (2265 . 2266) (#("t" 0 1 (fontified t)) . -2265) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (2264 . 2266) (#("ipkh" 0 4 (fontified t)) . -2264) (undo-tree-id4681 . -4) (2264 . 2268) (#("ipkh" 0 4 (fontified t)) . -2264) (undo-tree-id4682 . -4) (undo-tree-id4683 . -4) (2264 . 2268) (#("ipk" 0 3 (fontified t)) . -2264) (undo-tree-id4684 . -3) (2264 . 2267) (#("ipk" 0 3 (fontified t)) . -2264) (undo-tree-id4685 . -3) (undo-tree-id4686 . -3) (2264 . 2267) (#("ip" 0 2 (fontified t)) . -2264) (undo-tree-id4687 . -2) (2264 . 2266) (#("ip" 0 2 (fontified nil)) . -2264) (2264 . 2266) (#("ip" 0 2 (fontified nil)) . -2264) (2264 . 2266) (#("ip" 0 2 (fontified t)) . -2264) (undo-tree-id4688 . -2) (undo-tree-id4689 . -2) (2264 . 2266) (#("i" 0 1 (fontified t)) . -2264) (undo-tree-id4690 . -1) (2264 . 2265) (#("i" 0 1 (fontified t)) . -2264) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (2264 . 2265) (#("ip" 0 2 (fontified t)) . -2264) (undo-tree-id4693 . -2) (2264 . 2266) (#("ip" 0 2 (fontified t)) . -2264) (undo-tree-id4694 . -2) (undo-tree-id4695 . -2) (2264 . 2266) (#("iph" 0 3 (fontified t)) . -2264) (undo-tree-id4696 . -3) (2264 . 2267) (#("iph" 0 3 (fontified t)) . -2264) (undo-tree-id4697 . -3) (undo-tree-id4698 . -3) (2264 . 2267) (#("ip" 0 2 (fontified t)) . -2264) (undo-tree-id4699 . -2) (2264 . 2266) (#("ip" 0 2 (fontified t)) . -2264) (undo-tree-id4700 . -2) (undo-tree-id4701 . -2) (2264 . 2266) (#("i" 0 1 (fontified t)) . -2264) (undo-tree-id4702 . -1) (2264 . 2265) (#("i" 0 1 (fontified t)) . -2264) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (2263 . 2265)) nil (25281 26201 400559 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -2275) (undo-tree-id4649 . -1) (2275 . 2276) (#("g" 0 1 (fontified t)) . -2275) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (2274 . 2276) (#("i" 0 1 (fontified nil)) . -2274) (2274 . 2275) (#("i" 0 1 (fontified nil)) . -2274) (2273 . 2275) (#("i" 0 1 (fontified nil)) . -2273) (2273 . 2274) (#("i" 0 1 (fontified nil)) . -2273) (2273 . 2274) (#("i" 0 1 (fontified nil)) . -2273) (2273 . 2274) (#("i" 0 1 (fontified nil)) . -2273) (2273 . 2274) (#("i" 0 1 (fontified nil)) . -2273) (2273 . 2274) (#("i" 0 1 (fontified t)) . -2273) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (2269 . 2274) (#("mj" 0 2 (fontified t)) . -2269) (undo-tree-id4654 . -2) (2269 . 2271) (#("mj" 0 2 (fontified t)) . -2269) (undo-tree-id4655 . -2) (undo-tree-id4656 . -2) (2269 . 2271) (#("m" 0 1 (fontified t)) . -2269) (undo-tree-id4657 . -1) (2269 . 2270) (#("m" 0 1 (fontified t)) . -2269) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (2268 . 2270) (#("gik" 0 3 (fontified t)) . -2268) (undo-tree-id4660 . -3) (2268 . 2271) (#("gik" 0 3 (fontified t)) . -2268) (undo-tree-id4661 . -3) (undo-tree-id4662 . -3) (2268 . 2271) (#("gi" 0 2 (fontified t)) . -2268) (undo-tree-id4663 . -2) (2268 . 2270) (#("gi" 0 2 (fontified t)) . -2268) (undo-tree-id4664 . -2) (undo-tree-id4665 . -2) (2268 . 2270) (#("g" 0 1 (fontified t)) . -2268) (undo-tree-id4666 . -1) (2268 . 2269) (#("g" 0 1 (fontified t)) . -2268) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (2268 . 2269)) nil (25281 26201 400495 0) 0 nil])
([nil nil ((#("mh" 0 2 (fontified t)) . -2273) (undo-tree-id4634 . -2) (2273 . 2275) (#("mh" 0 2 (fontified t)) . -2273) (undo-tree-id4635 . -2) (undo-tree-id4636 . -2) (2273 . 2275) (#("m" 0 1 (fontified t)) . -2273) (undo-tree-id4637 . -1) (2273 . 2274) (#("m" 0 1 (fontified t)) . -2273) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (2273 . 2274) (#("断" 0 1 (fontified t)) . -2273) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (#("不" 0 1 (fontified t)) . -2274) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) 2275) nil (25281 26201 400459 0) 0 nil])
([nil nil ((2274 . 2282) (#("gf" 0 2 (fontified t)) . -2274) (undo-tree-id4628 . -2) (2274 . 2276) (#("gf" 0 2 (fontified t)) . -2274) (undo-tree-id4629 . -2) (undo-tree-id4630 . -2) (2274 . 2276) (#("g" 0 1 (fontified t)) . -2274) (undo-tree-id4631 . -1) (2274 . 2275) (#("g" 0 1 (fontified t)) . -2274) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (2273 . 2275)) nil (25281 26201 400436 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2280) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (#("f" 0 1 (fontified t)) . -2281) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) 2282) nil (25281 26201 400426 0) 0 nil])
([nil nil ((#("rfc" 0 3 (fontified t)) . -2279) (undo-tree-id4607 . -3) (2279 . 2282) (#("rfc" 0 3 (fontified t)) . -2279) (undo-tree-id4608 . -3) (undo-tree-id4609 . -3) (2279 . 2282) (#("rf" 0 2 (fontified t)) . -2279) (undo-tree-id4610 . -2) (2279 . 2281) (#("rf" 0 2 (fontified t)) . -2279) (undo-tree-id4611 . -2) (undo-tree-id4612 . -2) (2279 . 2281) (#("r" 0 1 (fontified t)) . -2279) (undo-tree-id4613 . -1) (2279 . 2280) (#("r" 0 1 (fontified t)) . -2279) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (2279 . 2280) (#(" " 0 1 (fontified t)) . 2279) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) 2280) nil (25281 26201 400415 0) 0 nil])
([nil nil ((2280 . 2281) (#("sy" 0 2 (fontified t)) . -2280) (undo-tree-id4601 . -2) (2280 . 2282) (#("sy" 0 2 (fontified t)) . -2280) (undo-tree-id4602 . -2) (undo-tree-id4603 . -2) (2280 . 2282) (#("s" 0 1 (fontified t)) . -2280) (undo-tree-id4604 . -1) (2280 . 2281) (#("s" 0 1 (fontified t)) . -2280) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (2279 . 2281)) nil (25281 26201 400390 0) 0 nil])
([nil nil ((2282 . 2283) (#("i" 0 1 (fontified t)) . -2282) (undo-tree-id4572 . -1) (2282 . 2283) (#("i" 0 1 (fontified t)) . -2282) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (2281 . 2283) (#("rat" 0 3 (fontified t)) . -2281) (undo-tree-id4575 . -3) (2281 . 2284) (#("rat" 0 3 (fontified t)) . -2281) (undo-tree-id4576 . -3) (undo-tree-id4577 . -3) (2281 . 2284) (#("ra" 0 2 (fontified t)) . -2281) (undo-tree-id4578 . -2) (2281 . 2283) (#("ra" 0 2 (fontified t)) . -2281) (undo-tree-id4579 . -2) (undo-tree-id4580 . -2) (2281 . 2283) (#("r" 0 1 (fontified t)) . -2281) (undo-tree-id4581 . -1) (2281 . 2282) (#("r" 0 1 (fontified t)) . -2281) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (2281 . 2282) (#("r" 0 1 (fontified t)) . -2281) (undo-tree-id4584 . -1) (2281 . 2282) (#("r" 0 1 (fontified t)) . -2281) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (2281 . 2282) (#("ra" 0 2 (fontified t)) . -2281) (undo-tree-id4587 . -2) (2281 . 2283) (#("ra" 0 2 (fontified t)) . -2281) (undo-tree-id4588 . -2) (undo-tree-id4589 . -2) (2281 . 2283) (#("rat" 0 3 (fontified t)) . -2281) (undo-tree-id4590 . -3) (undo-tree-id4591 . -3) (undo-tree-id4592 . -3) (2281 . 2284) (#("rat" 0 3 (fontified t)) . -2281) (undo-tree-id4593 . -3) (undo-tree-id4594 . -3) (2281 . 2284) (#("ra" 0 2 (fontified t)) . -2281) (undo-tree-id4595 . -2) (2281 . 2283) (#("ra" 0 2 (fontified t)) . -2281) (undo-tree-id4596 . -2) (undo-tree-id4597 . -2) (2281 . 2283) (#("r" 0 1 (fontified t)) . -2281) (undo-tree-id4598 . -1) (2281 . 2282) (#("r" 0 1 (fontified t)) . -2281) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (2281 . 2282)) nil (25281 26201 400372 0) 0 nil])
([nil nil ((#("onr" 0 3 (fontified t)) . -2281) (undo-tree-id4549 . -3) (2281 . 2284) (#("onr" 0 3 (fontified t)) . -2281) (undo-tree-id4550 . -3) (undo-tree-id4551 . -3) (2281 . 2284) (#("on" 0 2 (fontified t)) . -2281) (undo-tree-id4552 . -2) (2281 . 2283) (#("on" 0 2 (fontified t)) . -2281) (undo-tree-id4553 . -2) (undo-tree-id4554 . -2) (2281 . 2283) (#("o" 0 1 (fontified t)) . -2281) (undo-tree-id4555 . -1) (2281 . 2282) (#("o" 0 1 (fontified t)) . -2281) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (2281 . 2282) (#("找" 0 1 (fontified t)) . -2281) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (#("不" 0 1 (fontified t)) . -2282) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) 2283) nil (25281 26201 400320 0) 0 nil])
([nil current ((2283 . 2284) (#("wygg" 0 4 (fontified t)) . -2283) (undo-tree-id4534 . -4) (2283 . 2287) (#("wygg" 0 4 (fontified t)) . -2283) (undo-tree-id4535 . -4) (undo-tree-id4536 . -4) (2283 . 2287) (#("wyg" 0 3 (fontified t)) . -2283) (undo-tree-id4537 . -3) (2283 . 2286) (#("wyg" 0 3 (fontified t)) . -2283) (undo-tree-id4538 . -3) (undo-tree-id4539 . -3) (2283 . 2286) (#("wy" 0 2 (fontified t)) . -2283) (undo-tree-id4540 . -2) (2283 . 2285) (#("wy" 0 2 (fontified t)) . -2283) (undo-tree-id4541 . -2) (undo-tree-id4542 . -2) (2283 . 2285) (#("w" 0 1 (fontified t)) . -2283) (undo-tree-id4543 . -1) (2283 . 2284) (#("w" 0 1 (fontified t)) . -2283) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (2282 . 2284) (#("i" 0 1 (fontified t)) . -2282) (undo-tree-id4546 . -1) (2282 . 2283) (#("i" 0 1 (fontified t)) . -2282) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (2281 . 2283)) nil (25281 26201 400279 0) 0 nil])
nil
